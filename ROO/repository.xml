<?xml version = "1.0" encoding = "UTF-8" ?>
<bugrepository name="ROO">
	<bug id="2" opendate="2009-05-13 12:57:25" fixdate="2009-05-17 12:46:03" resolution="Fixed">
		<buginformation>
			<summary>NullPointerException in Roo Tab completion</summary>
			<description>when having typed a space as first character and then a single character. pressing tab results in this NPE.
Killing Roo and Restart is necessary.
Welcome to Spring ROO. For assistance press TAB or type "hint" then hit ENTER.
roo&amp;gt;  chException in thread "main" java.lang.NullPointerException
        at java.lang.String.startsWith(String.java:1422)
        at java.lang.String.startsWith(String.java:1451)
        at org.springframework.roo.shell.SimpleParser.isMatch(SimpleParser.java:299)
        at org.springframework.roo.shell.SimpleParser.locateTargets(SimpleParser.java:248)
        at org.springframework.roo.shell.SimpleParser.complete(SimpleParser.java:352)
        at org.springframework.roo.shell.jline.JLineCompletorAdapter.complete(JLineCompletorAdapter.java:27)
        at jline.ConsoleReader.complete(ConsoleReader.java:832)
        at jline.ConsoleReader.readLine(ConsoleReader.java:518)
        at jline.ConsoleReader.readLine(ConsoleReader.java:448)
        at jline.ConsoleReader.readLine(ConsoleReader.java:300)
        at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:96)
        at org.springframework.roo.bootstrap.Bootstrap.run(Bootstrap.java:99)
        at org.springframework.roo.bootstrap.Bootstrap.main(Bootstrap.java:48)</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
		</fixedFiles>
	</bug>
	<bug id="9" opendate="2009-05-13 17:33:14" fixdate="2009-05-17 16:31:07" resolution="Fixed">
		<buginformation>
			<summary>Identical field name with entity name causes scaffolded JSP to not render correctly</summary>
			<description>Steps to reproduce:
create project com.springsource.hello
install jpa -database HYPERSONIC_IN_MEMORY -provider HIBERNATE
new persistent class jpa -name ~.Hello -testAutomatically 
add field string -fieldName hello -notNull
new controller automatic -name ~.web.HelloController
Note the field name "hello" is the same as the entity name, "Hello".
The resultant JSP is malformed in this scenario.</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="19" opendate="2009-05-17 16:31:48" fixdate="2009-05-17 16:35:06" resolution="Fixed">
		<buginformation>
			<summary>MemberFindingUtils getDeclaredConstructor and getDeclaredMethod fail to return correct methods</summary>
			<description>MemberFindingUtils.getDeclaredMethod and MemberFindingUtils.getDeclaredConstructor are failing to locate valid methods which are of the requested parameter types. 
For example, a Choice.java class containing "public void setId(Long id)" is unable to be located with a call to MemberFindingUtils.getDeclaredMethod(...). This is due to an erroneous comparison between AnnotatedJavaType and JavaType, as JavaType instances are presented to the method but the internal comparison expects a collection of AnnotatedJavaType instances instead.
The solution is to convert the method/constructor parameters from AnnotatedJavaType to JavaType instances before the comparison.</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.details.MemberFindingUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="is depended on by">12</link>
		</links>
	</bug>
	<bug id="10" opendate="2009-05-13 17:45:30" fixdate="2009-05-18 11:57:02" resolution="Fixed">
		<buginformation>
			<summary>MVC does not properly operate when JavaScript disabled</summary>
			<description>There are various issues with the MVC add-ons when you disable JavaScript in the browser. Mostly these issues centre on not redisplaying appropriate validation messages and redisplaying the presented form for correction.</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="27" opendate="2009-05-19 18:36:52" fixdate="2009-05-19 18:37:59" resolution="Fixed">
		<buginformation>
			<summary>Roo Bootstrap mechanism fails to properly parse multi-argument command line parameters</summary>
			<description>Launching Roo with the following arguments fails:
classpath:roo-bootstrap.xml script clinic.roo
The failure is caused because the "script clinic.roo" portion is erroneously parsed as "scriptclinic.roo" (note no space).</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.bootstrap.Bootstrap.java</file>
		</fixedFiles>
	</bug>
	<bug id="7" opendate="2009-05-13 17:17:13" fixdate="2009-05-21 13:48:06" resolution="Fixed">
		<buginformation>
			<summary>Support JPAs @Enumerated</summary>
			<description>Using the javax.persistence.Enumerated annotation does currently not work.
class Person {
@Enumerated(EnumType.ORDINAL)
private Gender gender;
}
public enum Gender {
FEMALE, MALE;
}</description>
			<version>1.0.0.A2</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperations.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.email.MailOperations.java</file>
			<file type="M">org.springframework.roo.addon.jms.JmsOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">21</link>
		</links>
	</bug>
	<bug id="23" opendate="2009-05-18 17:21:22" fixdate="2009-05-21 16:29:02" resolution="Fixed">
		<buginformation>
			<summary>Error on parsing command in Roo shell</summary>
			<description>If a command contains two spaces, an error is printed out in the shell.
Example (two spaces in front of -topLevelPackage):
D:\entw\xyz&amp;gt;roo
    ____  ____  ____
   / __ \/ __ \/ __ \
  / /_/ / / / / / / /
 / , _/ // / /_/ /
// ||___/___/
Welcome to Spring ROO. For assistance press TAB or type "hint" then hit ENTER.
roo&amp;gt; create project  -topLevelPackage test
You cannot specify option &amp;amp;apos;topLevelPackage&amp;amp;apos; when you have also specified &amp;amp;apos;&amp;amp;apos; in the same command
roo&amp;gt;</description>
			<version>1.0.0.A2</version>
			<fixedVersion>1.0.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.ParserUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="34" opendate="2009-05-21 18:34:36" fixdate="2009-05-21 18:54:59" resolution="Fixed">
		<buginformation>
			<summary>Automatic ITD deletion not operating</summary>
			<description>ITDs should automatically delete if their corresponding governor is removed. This is not happening on a Linux machine. 
This issue is likely related to changes made to support Windows, as Ant paths used for ITD matching were modified at that point.</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.itd.ItdFileDeletionService.java</file>
		</fixedFiles>
	</bug>
	<bug id="35" opendate="2009-05-21 19:06:21" fixdate="2009-05-21 19:19:14" resolution="Fixed">
		<buginformation>
			<summary>Roo does not create code for classes with abstract methods</summary>
			<description>If a class contains an abstract method, Roo fails to create the AJ files for its annotations. If any files are existing already, then they will be deleted.
Example:
@RooToString
@RooJavaBean
public abstract class Foo 
{

  private String foo;

}

this creates the AJ files for the getters/setters + the toString method. If you add the method
public abstract void bar();
then Roo deletes the AJ files. If, however, the abstract method has a body, Roo creates AJ files as expected:
public abstract void bar() {
}
works.
</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="36" opendate="2009-05-21 19:32:50" fixdate="2009-05-22 13:13:39" resolution="Fixed">
		<buginformation>
			<summary>@RooJavaBean creates getters+setters for static and/or final fields</summary>
			<description>The annotation @RooJavaBean creates getters and setters for static fields and for final fields:
@RooJavaBean
public class Foo 
{

  private static String foo = "static";
  private final String bar = "final";

}

This piece of code will create getFoo/setFoo and getBar/setBar. I am not aware if the JavaBeans specification says anything about "static", but the setter for "final" should definitely be skipped. 
Moreover, static final variables do not work at all, Roo will delete the AJ files. This is a problem if serialVersionUID should be specified.
Workaround: declare all fields that should not have an automatic getter/setter as "transient".</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">619</link>
		</links>
	</bug>
	<bug id="42" opendate="2009-05-23 21:12:47" fixdate="2009-05-24 18:15:51" resolution="Fixed">
		<buginformation>
			<summary>Dynamic finders fail if field name contains numeric character</summary>
			<description>A "failure" message is displayed when querying for dynamic finders if the entity contains a property that contains a numeric character. Script to reproduce:
create project -topLevelPackage test
install jpa -provider HIBERNATE -database HYPERSONIC_IN_MEMORY
new persistent class jpa -name ~.SomeEntity -testAutomatically
add field string comment -notNull -sizeMin 1 -sizeMax 30
list finders for -class ~.SomeEntity -filter comment,equ
add field string field1
list finders for -class ~.SomeEntity -filter comment,equ
The first "list finders" command will work. The second "list finders" command will failure with:
roo&amp;gt; list finders for -class ~.SomeEntity -filter comment,equ
failure
findSomeEntitysByCommentEquals(String comment)
findSomeEntitysByCommentNotEquals(String comment)</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.finder.FinderTokenizer.java</file>
		</fixedFiles>
	</bug>
	<bug id="54" opendate="2009-05-27 09:03:02" fixdate="2009-05-30 14:09:35" resolution="Fixed">
		<buginformation>
			<summary>NoClassDefFoundError due to javax/annotation/PostConstruct when executing on Java 5</summary>
			<description>Reported on Twitter: the tests didn&amp;amp;apos;t fly on OS X - NoClassDefFoundError: javax/annotation/PostConstruct
This is presumably related to Java 5.</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">68</link>
			<link type="Duplicate" description="is duplicated by">57</link>
			<link type="Duplicate" description="is duplicated by">58</link>
		</links>
	</bug>
	<bug id="58" opendate="2009-05-29 05:53:24" fixdate="2009-05-30 14:10:33" resolution="Duplicate">
		<buginformation>
			<summary>Application without installing JPA gives error (java.lang.NoClassDefFoundError: javax/persistence/PersistenceException)</summary>
			<description>&amp;gt;mkdir testapp
&amp;gt;cd testapp
&amp;gt;roo
    ____  ____  ____
   / __ \/ __ \/ __ \
  / /_/ / / / / / / /
 / , _/ // / /_/ /
// ||___/___/    1.0.0.M1 [rev 64]
roo&amp;gt; create project -topLevelPackage org.testapp
roo&amp;gt; exit
&amp;gt; mvn tomcat-run
[INFO] Scanning for projects...
[INFO] artifact org.codehaus.mojo:tomcat-maven-plugin: checking for updates from
 jboss-plugins
[INFO] artifact org.codehaus.mojo:tomcat-maven-plugin: checking for updates from
 jboss-snapshot-plugins
[INFO] ------------------------------------------------------------------------
[INFO] Building testapp
[INFO]    task-segment: [tomcat:run]
[INFO] ------------------------------------------------------------------------
[INFO] Preparing tomcat:run
[INFO] [aspectj:compile 
{execution: default}
]
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:compile]
[INFO] Nothing to compile - all classes are up to date
[INFO] [tomcat:run]
[INFO] Running war on http://localhost:8080/testapp
[INFO] Creating Tomcat server configuration at D:\Spring\projects\testapp\target
\tomcat
29-mei-2009 20:50:09 org.apache.catalina.startup.Embedded start
INFO: Starting tomcat server
29-mei-2009 20:50:10 org.apache.catalina.core.StandardEngine start
INFO: Starting Servlet Engine: Apache Tomcat/6.0.16
29-mei-2009 20:50:11 org.apache.catalina.core.StandardContext addApplicationList
ener
INFO: The listener "org.springframework.web.context.ContextLoaderListener" is al
ready configured for this context. The duplicate definition has been ignored.
29-mei-2009 20:50:11 org.apache.catalina.core.ApplicationContext log
INFO: Initializing Spring root WebApplicationContext
log4j:WARN No appenders could be found for logger (org.springframework.web.conte
xt.ContextLoader).
log4j:WARN Please initialize the log4j system properly.
29-mei-2009 20:50:12 org.apache.catalina.core.StandardContext filterStart
SEVERE: Exception starting filter Spring OpenEntityManagerInViewFilter
java.lang.NoClassDefFoundError: javax/persistence/PersistenceException
        at java.lang.Class.getDeclaredConstructors0(Native Method)
        at java.lang.Class.privateGetDeclaredConstructors(Class.java:2389)
        at java.lang.Class.getConstructor0(Class.java:2699)
        at java.lang.Class.newInstance0(Class.java:326)
        at java.lang.Class.newInstance(Class.java:308)
        at org.apache.catalina.core.ApplicationFilterConfig.getFilter(Applicatio
nFilterConfig.java:255)
        at org.apache.catalina.core.ApplicationFilterConfig.setFilterDef(Applica
tionFilterConfig.java:397)
        at org.apache.catalina.core.ApplicationFilterConfig.&amp;lt;init&amp;gt;(ApplicationFi
lterConfig.java:108)
        at org.apache.catalina.core.StandardContext.filterStart(StandardContext.
java:3709)
        at org.apache.catalina.core.StandardContext.start(StandardContext.java:4
356)
        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
        at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)
        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
        at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443
)
        at org.apache.catalina.startup.Embedded.start(Embedded.java:825)
        at org.codehaus.mojo.tomcat.AbstractRunMojo.startContainer(AbstractRunMo
jo.java:385)
        at org.codehaus.mojo.tomcat.AbstractRunMojo.execute(AbstractRunMojo.java
:144)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPlugi
nManager.java:483)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defa
ultLifecycleExecutor.java:678)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandalone
Goal(DefaultLifecycleExecutor.java:553)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Defau
ltLifecycleExecutor.java:523)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHan
dleFailures(DefaultLifecycleExecutor.java:371)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegmen
ts(DefaultLifecycleExecutor.java:332)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLi
fecycleExecutor.java:181)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:356)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:137)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:356)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: java.lang.ClassNotFoundException: javax.persistence.PersistenceExcept
ion
        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoa
der.java:1360)
        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoa
der.java:1206)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
        ... 35 more
29-mei-2009 20:50:12 org.apache.catalina.core.ApplicationContext log
INFO: org.tuckey.web.filters.urlrewrite.UrlRewriteFilter INFO: loaded (conf ok)
29-mei-2009 20:50:12 org.apache.catalina.core.StandardContext start
SEVERE: Error filterStart
29-mei-2009 20:50:12 org.apache.catalina.core.StandardContext start
SEVERE: Context [/testapp] startup failed due to previous errors
29-mei-2009 20:50:12 org.apache.catalina.core.ApplicationContext log
INFO: org.tuckey.web.filters.urlrewrite.UrlRewriteFilter INFO: destroy called
29-mei-2009 20:50:12 org.apache.catalina.core.ApplicationContext log
INFO: Closing Spring root WebApplicationContext
29-mei-2009 20:50:12 org.apache.coyote.http11.Http11Protocol init
INFO: Initializing Coyote HTTP/1.1 on http-8080
29-mei-2009 20:50:12 org.apache.coyote.http11.Http11Protocol start
INFO: Starting Coyote HTTP/1.1 on http-8080
</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">54</link>
		</links>
	</bug>
	<bug id="57" opendate="2009-05-28 03:22:38" fixdate="2009-05-30 14:10:51" resolution="Duplicate">
		<buginformation>
			<summary>mvn test failure following tutorial on blog</summary>
			<description>Following the steps in the "roo 2" blog post tutorial. Everything working great until the step where I run "mvn test". At this point I get 9 test failures, due to missing classes on the classpath (javax/annotation types). 
See attached file for full error log.</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">54</link>
		</links>
	</bug>
	<bug id="60" opendate="2009-05-29 13:33:17" fixdate="2009-05-31 14:40:01" resolution="Fixed">
		<buginformation>
			<summary>Failure to create correct @javax.persistence.Column name attribute for non-clashing version field name</summary>
			<description>EntityMetadata correctly resolves a non-conflicting field name for optimistic locking version support. However, it fails to ensure the @javax.persistence.Column definition has the correct "name" attribute to reflect the resolved non-conflicting field name. It always assumes the column name is "version", even if the resolved non-conflicting field name is, for example, "_version".
Steps to reproduce:
create project com.foo
install jpa -provider HIBERNATE -database HYPERSONIC_IN_MEMORY 
new persistent class jpa -name SomeClass -testAutomatically   
add field string someField
add field string version
A review of SomeClass_Roo_Entity.aj includes:
    @javax.persistence.Version    
    @javax.persistence.Column(name = "version")    
    private java.lang.Integer SomeClass._version;    
This is incorrect and will clash with the user-defined "version" property. The resulting exception when "mvn test" executed:
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: persistenceUnit] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:677)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:132)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:225)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1334)
	... 53 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.foo.SomeClass column: version (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:652)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:674)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:450)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:192)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1108)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1293)
	at org.hibernate.cfg.AnnotationConfiguration.buildSessionFactory(AnnotationConfiguration.java:859)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:669)</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="55" opendate="2009-05-27 20:47:34" fixdate="2009-05-31 14:52:04" resolution="Fixed">
		<buginformation>
			<summary>"add field string -regexp" does not escape backslashes</summary>
			<description>The add field string -regexp literally uses the value behind the -regexp argument as the string associated with @Pattern(regexp) in the Java Source code.
Therefore, backslashes are up to interpretation for Java, which means that a regular expression like \w causes an error "invalid escape sequence". IMHO, this violates the principle of least surprise for the users of the Roo shell.</description>
			<version>1.0.0.A2</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">639</link>
		</links>
	</bug>
	<bug id="61" opendate="2009-05-29 13:35:46" fixdate="2009-05-31 16:55:55" resolution="Fixed">
		<buginformation>
			<summary>Failure to detect existing fields with clashing name when introducing identifier field</summary>
			<description>EntityMetadata fails to detect naming classes if there is an existing field with the same name as the proposed identifier field.
The new version field name is correctly resolved (though also see ROO-60). We need similar logic for the identifier field.
Steps to reproduce:
create project com.foo
install jpa -provider HIBERNATE -database HYPERSONIC_IN_MEMORY 
new persistent class jpa -name SomeClass -testAutomatically   
add field string someField
Running "mvn test" at this point will pass. If you then "add field string id -class com.foo.SomeClass", it will give an ITD error when the tests are compiled:
compiler errors : 
error at public java.lang.String SomeClass.getId() {    
                                  ^^
/home/balex/t/src/main/java/com/foo/SomeClass_Roo_JavaBean.aj:13:0::0 intertype declaration from com.foo.SomeClass_Roo_Entity conflicts with intertype declaration: java.lang.String com.foo.SomeClass.getId() from com.foo.SomeClass_Roo_JavaBean
error at public java.lang.Long SomeClass.getId() {    
                                ^^</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.RooEntity.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">71</link>
		</links>
	</bug>
	<bug id="64" opendate="2009-05-29 17:42:53" fixdate="2009-05-31 18:45:01" resolution="Fixed">
		<buginformation>
			<summary>Annotations containing class attributes erroneously remain unqualified</summary>
			<description>As detailed in ROO-50, creating an integration test for an entity named com.foo.Test will erroneously result in the following type declaration:
package com.foo;
import org.springframework.roo.addon.test.RooIntegrationTest;
import org.junit.Test;
@RooIntegrationTest(entity = Test.class)
public class TestIntegrationTest 
{ ... }

The annotation should be @RooIntegrationTest(entity = com.foo.Test.class), not @RooIntegrationTest(entity = Test.class). It is unclear at this moment whether this is due to a bug in the Java Parser metadata component or specific to the integration test add-on.</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="is depended on by">50</link>
			<link type="Related" description="is related to">306</link>
			<link type="Related" description="is related to">50</link>
		</links>
	</bug>
	<bug id="50" opendate="2009-05-26 17:01:53" fixdate="2009-05-31 19:10:26" resolution="Fixed">
		<buginformation>
			<summary>Data on demand generation throws NPE for target classes without fields.</summary>
			<description>Steps to reproduce (modified for compatibility with 1.0.0.M1):
create project -topLevelPackage com.foo
install jpa -provider HIBERNATE -database HYPERSONIC_IN_MEMORY
new persistent class jpa -name Test
new integration test
mvn test
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.063 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
initializationError(com.springsource.support.TestDataOnDemand)  Time elapsed: 0.005 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
java.lang.Exception: No runnable methods
	at org.junit.runners.BlockJUnit4ClassRunner.validateInstanceMethods(BlockJUnit4ClassRunner.java:154)
	at org.junit.runners.BlockJUnit4ClassRunner.collectInitializationErrors(BlockJUnit4ClassRunner.java:112)
	at org.junit.runners.ParentRunner.validate(ParentRunner.java:253)
	at org.junit.runners.ParentRunner.&amp;lt;init&amp;gt;(ParentRunner.java:55)</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">64</link>
			<link type="Related" description="is related to">64</link>
			<link type="Related" description="is related to">666</link>
		</links>
	</bug>
	<bug id="73" opendate="2009-06-01 19:07:53" fixdate="2009-06-01 21:01:58" resolution="Fixed">
		<buginformation>
			<summary>Package declaration using package-info.java causes error message</summary>
			<description>If a package contains the package definition file package-info.java, the Roo shell produces the following error message:
&amp;gt; The first letter of the type name portion must be uppercase (attempted &amp;amp;apos;&amp;lt;packagename&amp;gt;.package-info&amp;amp;apos;)
This seems to be a cosmetic issue only because Roo parses and generates code for all other files in the package as expected.</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1022</link>
		</links>
	</bug>
	<bug id="49" opendate="2009-05-25 19:58:19" fixdate="2009-06-03 20:41:33" resolution="Fixed">
		<buginformation>
			<summary>Invalid JavaBean code generation for generic type parameters</summary>
			<description>The JavaBean addon generates invalid code if generic parameters are used:
package foo;
@RooJavaBean
public class Generic&amp;lt;T&amp;gt; 
{

  private List&amp;lt;T&amp;gt; list;

}

will create an aspect Generic_Roo_JavaBean with the following methods:
public java.util.List&amp;lt;foo.T&amp;gt; Generic.getList()
public void Generic.setList(java.util.List&amp;lt;foo.T&amp;gt; list)
The type parameter referenced using the package identifier which is invalid. Instead it should read
public java.util.List&amp;lt;T&amp;gt; Generic.getList()
public void Generic.setList(java.util.List&amp;lt;T&amp;gt; list)</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserClassMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserFieldMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
			<file type="D">org.springframework.roo.classpath.javaparser.Test.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserUtils.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.operations.jsr303.SetField.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserConstructorMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="is depended on by">48</link>
			<link type="Related" description="is related to">244</link>
			<link type="Related" description="is related to">710</link>
			<link type="Related" description="is related to">94</link>
		</links>
	</bug>
	<bug id="63" opendate="2009-05-29 16:32:19" fixdate="2009-06-10 10:40:14" resolution="Fixed">
		<buginformation>
			<summary>script clinic.roo stops with "Script execution aborted"</summary>
			<description>If I follow these steps:
cd \java
mkdir clinic
cd clinic
roo
script clinic.roo
I get many lines from previous steps executed right and:
new controller automatic -name ~.web.OwnerController -formBackingObject ~.domain.Owner
Created SRC_MAIN_JAVA\com\springsource\petclinic\web\OwnerController.java
Created SRC_MAIN_JAVA\com\springsource\petclinic\domain\PetEditor.java
Created SRC_MAIN_JAVA\com\springsource\petclinic\web\OwnerController_Roo_Controller.aj
Created SRC_MAIN_WEBAPP\WEB-INF\jsp\owner
Created SRC_MAIN_WEBAPP\WEB-INF\jsp\owner\list.jsp
Created SRC_MAIN_WEBAPP\WEB-INF\jsp\owner\show.jsp
Undo create SRC_MAIN_WEBAPP\WEB-INF\jsp\owner\show.jsp
Undo create SRC_MAIN_WEBAPP\WEB-INF\jsp\owner\list.jsp
Undo create SRC_MAIN_WEBAPP\WEB-INF\jsp\owner
Undo create SRC_MAIN_JAVA\com\springsource\petclinic\web\OwnerController_Roo_Controller.aj
Undo create SRC_MAIN_JAVA\com\springsource\petclinic\domain\PetEditor.java
Undo create SRC_MAIN_JAVA\com\springsource\petclinic\web\OwnerController.java
Script execution aborted
roo&amp;gt;
if I try to execute by hand the rest of the "new controller automatic (Pet,Vet).", all undo the creation of files.</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1466</link>
		</links>
	</bug>
	<bug id="82" opendate="2009-06-10 07:36:50" fixdate="2009-06-10 15:59:13" resolution="Fixed">
		<buginformation>
			<summary>Problem with the many to many relationship, script line is not closed correct</summary>
			<description>When creating a many to many relationship, the following line contains an error
&amp;lt;script type="text/javascript"&amp;gt;Spring.addDecoration(new Spring.ElementDecoration(
{elementId : "_tasks", widgetType: "dijit.form.MultiSelect")); &amp;lt;/script&amp;gt;

Right after MultiSelect" a }
 is missing</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">81</link>
		</links>
	</bug>
	<bug id="78" opendate="2009-06-08 18:44:40" fixdate="2009-06-12 13:30:01" resolution="Fixed">
		<buginformation>
			<summary>Support for array types in parser</summary>
			<description>Roo&amp;amp;apos;s parser apparently has problems when dealing with array types:
@RooJavaBean
public class Foo 
{

  private String bar[];

}

will produce the following aspect, not recognizing that bar is an array:
privileged aspect Foo_Roo_JavaBean {
    public java.lang.String at.telekomaustria.zusdie.xml.Foo.getBar() 
{    
        return this.bar;        
    }
 
    public void at.telekomaustria.zusdie.xml.Foo.setBar(java.lang.String bar) 
{    
        this.bar = bar;        
    }
 
}
The alternative array syntax "String[] bar;" causes the whole aspect to be deleted, apparently because of a parsing failure.
Parser and code generation should support all legal Java array type declarations, as defined in the JLS 10.2, also nasties such as "byte[] rowvector, colvector, matrix[];"</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserFieldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserUtils.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.operations.jsr303.SetField.java</file>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="is depended on by">79</link>
		</links>
	</bug>
	<bug id="83" opendate="2009-06-11 06:29:12" fixdate="2009-06-12 14:37:20" resolution="Fixed">
		<buginformation>
			<summary>Integration test does not support entities which have timestamps as version</summary>
			<description>If an entity has a timestamp field specified as the versioning field (the field is annotated with @Version) then the generated integration test has a compile error as it compares obj.getVersionTimestamp() &amp;gt; currentVersion (assuming the annotated timestamp field is called versionTimestamp). Instead if the version field is a timestamp the comparison should presumably be made using obj.getVersionTimestamp().after(currentVersion).</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="86" opendate="2009-06-11 17:47:32" fixdate="2009-06-12 18:56:43" resolution="Fixed">
		<buginformation>
			<summary>Annotation attributes initialized with arrays are not parsed correctly.</summary>
			<description>Parsed annotation metadata (via JavaParserAnnotationMetadata) does not contain annotation initializers for attributes that have arrays as parameters (e.g. Hibernate&amp;amp;apos;s @Type(parameters = 
{...}
): The annotation attribute name is stored correctly inside the JavaParserAnnotationMetadata, whereas the AnnotationValue contains null for that attribute.
Steps to reproduce:
public @interface ArrayAnnot {
  public String[] value() default {};
}
public class Foo {
  @ArrayAnnot ( 
{ "1" }
)
  private String type;
}
Result: the FieldMetadata for Foo.type does have an annotation "@ArrayAnnot", but the value is null.
This bug is possibly related to http://jira.springsource.org/browse/ROO-78</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.details.AnnotationMetadataUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="84" opendate="2009-06-11 09:34:47" fixdate="2009-06-12 20:12:53" resolution="Fixed">
		<buginformation>
			<summary>Stray control characters on Windows</summary>
			<description>Stray  characters are being included in XML files generated by Roo. This was reported separately by Rod, Christian and Dave. Example:
 
&amp;lt;bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource"&amp;gt;
  &amp;lt;property name="driverClassName" value="$
{database.driverClassName}
"/&amp;gt;
  &amp;lt;property name="url" value="$
{database.url}
"/&amp;gt;
  &amp;lt;property name="username" value="$
{database.username}
"/&amp;gt;
  &amp;lt;property name="password" value="$
{database.password}
"/&amp;gt;
  &amp;lt;/bean&amp;gt;

(Logged by Ben on behalf of Rod)</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">100</link>
		</links>
	</bug>
	<bug id="95" opendate="2009-06-16 18:17:34" fixdate="2009-06-16 18:31:21" resolution="Fixed">
		<buginformation>
			<summary>Invalid package declaration for generated resources of classes in default package</summary>
			<description>For classes that reside in the default package, Roo generates source files that have a package declaration, but no package identifier.
Steps to reproduce:
create a class in the default package:
import org.springframework.roo.addon.tostring.RooToString;
@RooToString
public class Foo {
}
The generated file Bar_Roo_ToString.aj will contain a package declaration as such:
"package ;"
which is invalid. The package declaration should not be emitted if a class resides in the default package.</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
		</fixedFiles>
	</bug>
	<bug id="85" opendate="2009-06-11 09:54:24" fixdate="2009-06-16 18:32:56" resolution="Fixed">
		<buginformation>
			<summary>Hitting return/enter on a textarea field triggers form submit</summary>
			<description>Using the auto scaffolded UI, any field with a @Size() &amp;gt; 30 characters generates a textarea.  However, the Dojo form widget adds form submit to pressing return in the field, so multi-line text entries cannot be created.</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="is depended on by">440</link>
			<link type="Related" description="is related to">80</link>
		</links>
	</bug>
	<bug id="53" opendate="2009-05-27 08:29:54" fixdate="2009-06-17 12:28:22" resolution="Fixed">
		<buginformation>
			<summary>Generated date field validation doesn&amp;apos;t properly take I18N into account</summary>
			<description>Running through Ben&amp;amp;apos;s wedding example I noticed that the Selenium test will use a generated date that uses MM/dd/yyyy as the format, but the generated controller actually doesn&amp;amp;apos;t allow that as it expects yyyy-MM-dd when using a Dutch locale. This makes the test fail with a timeout, as the clickAndWait for saving the new Rsvp never progresses. 
The generated HTML currently has this Spring-JS snippet:
  &amp;lt;script type="text/javascript"&amp;gt;Spring.addDecoration(new Spring.ElementDecoration({elementId : "_confirmed", widgetType : "dijit.form.DateTextBox", widgetAttrs : {datePattern : "MM/dd/yyyy", required : false}})); &amp;lt;/script&amp;gt;
However, the widget will still output yyyy-MM-dd format and won&amp;amp;apos;t accept anything else.
The root cause seems to be http://jira.springframework.org/browse/SWF-844 which also has a solution/workaround to this issue. </description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.DojoUtils.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.shell.converters.DateConverter.java</file>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">1271</link>
		</links>
	</bug>
	<bug id="26" opendate="2009-05-19 05:53:17" fixdate="2009-06-17 15:09:17" resolution="Fixed">
		<buginformation>
			<summary>Missing JSPs in application without controller</summary>
			<description>If I create an application with a JPA provider but without a domainclass and without a controller some JSPs are missing.
Try this:
roo&amp;gt; create project -projectName simpleroo -topLevelPackage test
roo&amp;gt; install jpa -provider HIBERNATE -database HYPERSONIC_IN_MEMORY
mvn packge
deploy application in tomcat
open application in browser
this results in this exception:
SCHWERWIEGEND: Servlet.service() for servlet jsp threw exception
org.apache.jasper.JasperException: /index.jsp(2,0) File "/WEB-INF/jsp/includes.jsp" not found
	at org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:40)
	at org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:407)
	at org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:88)
	at org.apache.jasper.compiler.Parser.processIncludeDirective(Parser.java:345)
	at org.apache.jasper.compiler.Parser.parseIncludeDirective(Parser.java:378)
	at org.apache.jasper.compiler.Parser.parseXMLDirective(Parser.java:552)
	at org.apache.jasper.compiler.Parser.parseElements(Parser.java:1446)
	at org.apache.jasper.compiler.Parser.parse(Parser.java:138)
	at org.apache.jasper.compiler.ParserController.doParse(ParserController.java:216)
	at org.apache.jasper.compiler.ParserController.parse(ParserController.java:103)
	at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:154)
	at org.apache.jasper.compiler.Compiler.compile(Compiler.java:315)
	at org.apache.jasper.compiler.Compiler.compile(Compiler.java:295)
	at org.apache.jasper.compiler.Compiler.compile(Compiler.java:282)
	at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:586)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:317)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:342)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:267)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:845)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:613)
In the file /src/main/webapp/index.jsp are references to this JSP files:

/WEB-INF/jsp/includes.jsp
/WEB-INF/jsp/header.jsp
/WEB-INF/jsp/footer.jsp
none of them is generates, if no domain class and no controller exists.

</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperations.java</file>
			<file type="M">org.springframework.roo.addon.maven.ApplicationContextOperations.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
			<file type="D">org.springframework.roo.addon.maven.WebXmlOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">25</link>
		</links>
	</bug>
	<bug id="100" opendate="2009-06-17 09:02:52" fixdate="2009-06-17 15:11:10" resolution="Duplicate">
		<buginformation>
			<summary>Carriage return &amp;#13; inserted into XML</summary>
			<description>The XML that was inserted when creating the DriverManagerDataSource XML has several  characters in it.  Other cases of XML that is managed by ROO do not have this issue.
 
&amp;lt;bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource"&amp;gt;
        &amp;lt;property name="driverClassName" value="$
{database.driverClassName}
"/&amp;gt;
        &amp;lt;property name="url" value="$
{database.url}
"/&amp;gt;
        &amp;lt;property name="username" value="$
{database.username}
"/&amp;gt;
        &amp;lt;property name="password" value="$
{database.password}
"/&amp;gt;
    &amp;lt;/bean&amp;gt;

	&amp;lt;bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager"&amp;gt;
        &amp;lt;property name="entityManagerFactory" ref="entityManagerFactory"/&amp;gt;
    &amp;lt;/bean&amp;gt;

	&amp;lt;tx:annotation-driven mode="aspectj" transaction-manager="transactionManager"/&amp;gt;

	&amp;lt;bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="entityManagerFactory"&amp;gt;
        &amp;lt;property name="dataSource" ref="dataSource"/&amp;gt;
    &amp;lt;/bean&amp;gt;</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">84</link>
		</links>
	</bug>
	<bug id="93" opendate="2009-06-16 16:30:20" fixdate="2009-06-17 17:53:38" resolution="Fixed">
		<buginformation>
			<summary>Need to fix alignment issues in JSP forms</summary>
			<description>There are a number of form alignment issues that need to be fixed:
For example show.jsp: line alignments between labels and text</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.DojoUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="104" opendate="2009-06-17 21:03:40" fixdate="2009-06-17 21:04:43" resolution="Fixed">
		<buginformation>
			<summary>Selenium add-on should report clear error message instead of NPE if web scaffold metadata is unavailable</summary>
			<description>Attempts to create a Selenium test via Roo for a web controller that is not an automatically scaffolded controller will presently result in a NullPointerException:
NullPointerException at org.springframework.roo.addon.web.selenium.SeleniumOperations.generateTest(SeleniumOperations.java:76)
It is desirable that a more informative error message is displayed to the user instead.</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="123" opendate="2009-07-01 04:59:58" fixdate="2009-07-01 18:26:41" resolution="Fixed">
		<buginformation>
			<summary>Generated controller finder method loses case on length() check for mixed case string fields</summary>
			<description>If I generate a domain class that has a camel-cased name such as courseName, and then generate a dynamic finder based on the name, the length check within the Controller&amp;amp;apos;s find/findByFieldNameLike method incorrectly generates an all lower-case field name within the length check, although it is correct in the null check:
    @org.springframework.web.bind.annotation.RequestMapping(value = "find/ByCourseNameLike", method = org.springframework.web.bind.annotation.RequestMethod.GET)    
    public java.lang.String CourseController.findCoursesByCourseNameLike(@org.springframework.web.bind.annotation.RequestParam("coursename") java.lang.String courseName, org.springframework.ui.ModelMap modelMap) 
{    
        if(courseName == null || coursename.length() == 0) throw new IllegalArgumentException("A courseName is required.");        
        modelMap.addAttribute("courses", com.chariot.roo.demo.domain.Course.findCoursesByCourseNameLike(courseName).getResultList());        
        return "course/list";        
    }
 
Roo commands:
create project -topLevelPackage roodemo
install jpa -provider HIBERNATE -database HYPERSONIC_IN_MEMORY
new persistent class jpa -name ~.Course
add field string -fieldName courseName
list finders for -class roodemo.Course
install finder -finderName findCoursesByCourseNameLike
new controller automatic -name roodemo.CourseController -formBackingObject  roodemo.Course
Execute a mvn jetty:run to see the compiler error (or just mvn compile).  I get:
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Compiler errors : 
error at if(courseName == null || coursename.length() == 0) throw new IllegalArgumentException("A courseName is required."); 
Note the coursename.length() is the error.</description>
			<version>1.0.0.M2</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="116" opendate="2009-06-24 00:21:28" fixdate="2009-07-07 12:25:26" resolution="Fixed">
		<buginformation>
			<summary>Cannot install finder for entity with similarly named fields</summary>
			<description>When installing finder for an entity which has two fields that has similar names eg.:
name of field1: code, field2: codeGroup, finderName: findCodesByCodeAndCodeGroup
error:
Unable to match all fields of Code for CodeAndCodeGroup (remaining &amp;amp;apos;Group&amp;amp;apos;)
attached a .roo script which reproduces the bug.</description>
			<version>1.0.0.M2</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.finder.ReservedToken.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderTokenizer.java</file>
			<file type="M">org.springframework.roo.addon.finder.FieldToken.java</file>
			<file type="M">org.springframework.roo.addon.finder.Token.java</file>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServicesImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="134" opendate="2009-07-07 12:52:36" fixdate="2009-07-07 12:55:08" resolution="Fixed">
		<buginformation>
			<summary>MS SQL driver class definition incorrect</summary>
			<description>install jpa -database MSSQL currently yields: database.driverClassName=com.microsoft.jdbc.sqlserver.SQLServerDriver when it should be database.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver</description>
			<version>1.0.0.M2</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JdbcDatabase.java</file>
		</fixedFiles>
	</bug>
	<bug id="124" opendate="2009-07-01 06:41:20" fixdate="2009-07-07 17:50:37" resolution="Fixed">
		<buginformation>
			<summary>Roo does not clean up finder methods from UI navigation menu when removed from @RooEntity</summary>
			<description>Add a finder method to a roo entity.  Update and run, and see the finder method appear in navigation.
Remove the finder method from the @RooEntity annotation in the domain object.  Re-run Roo.  It cleans up the .aj files but does not rework the menu on the UI.</description>
			<version>1.0.0.M2</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.menu.MenuOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="136" opendate="2009-07-08 06:42:54" fixdate="2009-07-08 09:45:29" resolution="Fixed">
		<buginformation>
			<summary>WebFlow defined with -flowName when installing webflow - camel-cased name gets lowercased in navigation UI</summary>
			<description>When building a web flow with a given name, such as registerAttendees:
install web flow -flowName registerAttendees
When the UI generates the "Enter the registerAttendeesFlow" link on the navigation bar, it lowercases the URL.  The URL becomes:
/registerattendees
  This creates a flow not found situation; the flow is properly configured with the camel case name.  The correct flow URi is:
/registerAttendees
</description>
			<version>1.0.0.M2</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="96" opendate="2009-06-16 18:27:08" fixdate="2009-07-08 15:30:06" resolution="Fixed">
		<buginformation>
			<summary>Two textareas which are decorated with dijit.form.SimpleTextarea in the same page will sumit as a single parameter for POST submits</summary>
			<description>Currently, you cannot have two dijit.form.SimpleTextarea fields in the same page. Both fields (field &amp;amp;apos;a&amp;amp;apos; and field &amp;amp;apos;b&amp;amp;apos;) will end up being submitted as a single param (&amp;amp;apos;a&amp;amp;apos;) and the text entered in both will be merged under parameter &amp;amp;apos;a&amp;amp;apos;
field definitions to reproduce:
add field string -class ~.domain.Test -fieldName a -sizeMax 70
add field string -class ~.domain.Test -fieldName b -sizeMax 70
Firebug shows that a is submitted twice with different values (once the value from textarea &amp;amp;apos;a&amp;amp;apos; and once from &amp;amp;apos;b&amp;amp;apos;):
a TestA
a TestB
This results in field &amp;amp;apos;b&amp;amp;apos; not being populated in AbstractPerson and field &amp;amp;apos;a&amp;amp;apos; containing: &amp;amp;apos;TestA TestB&amp;amp;apos;</description>
			<version>1.0.0.M2</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.DojoUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="141" opendate="2009-07-09 10:34:37" fixdate="2009-07-09 10:39:18" resolution="Fixed">
		<buginformation>
			<summary>create project foo, followed by "mvn package" causes a build failure because there is no web.xml file</summary>
			<description>This problem was reported by Adrian Colyer in ROO-138.
Essentially we have changed the initial project generation to start without any Web artifacts (see ROO-26). This allows users to create a simple Spring project without any persistence or Web artefacts.
However, the project maven pom file still refers to packaging type &amp;amp;apos;war&amp;amp;apos; which causes &amp;amp;apos;mvn package&amp;amp;apos; to fail due to a missing web.xml which is expected in Web projects. </description>
			<version>1.0.0.M2</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.ProjectOperations.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">138</link>
		</links>
	</bug>
	<bug id="106" opendate="2009-06-18 02:53:28" fixdate="2009-07-09 19:10:39" resolution="Fixed">
		<buginformation>
			<summary>Unable to create project from petclinic sample script due to XPath exception</summary>
			<description>Running the clinic.roo script fails with: "org.apache.xpath.domapi.XPathStylesheetDOM3Exception: Prefix must resolve to a namespace: tx"
Attached log from the run.</description>
			<version>1.0.0.M2</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jms.JmsOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperations.java</file>
			<file type="M">org.springframework.roo.addon.email.MailOperations.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenOperations.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperations.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">105</link>
			<link type="Related" description="is related to">150</link>
			<link type="Related" description="is related to">112</link>
		</links>
	</bug>
	<bug id="143" opendate="2009-07-10 11:29:16" fixdate="2009-07-10 11:31:51" resolution="Fixed">
		<buginformation>
			<summary>Two MultiSelect boxes which are decorated with dijit.form.MultiSelect in the same page will sumit as a single parameter for POST submits</summary>
			<description>This issue has the same symptoms as described in ROO-96</description>
			<version>1.0.0.M2</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.DojoUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="142" opendate="2009-07-10 07:31:03" fixdate="2009-07-12 15:50:15" resolution="Fixed">
		<buginformation>
			<summary>Problem with new controller automatic when you use the same Class Name</summary>
			<description>This has happened to me a couple of times during testing when I accidentally give the controller the same name as the domain class (or I forgot i wasn&amp;amp;apos;t using grails).
roo&amp;gt;new persistent class jpa -name ~.domain.SomeClass
Created SRC_MAIN_JAVA\org\stjude\ri\bwfp\domain\SomeClass.java
Created SRC_MAIN_JAVA\org\stjude\ri\bwfp\domain\SomeClass_Roo_Entity.aj
Created SRC_MAIN_JAVA\org\stjude\ri\bwfp\domain\SomeClass_Roo_ToString.aj
Created SRC_MAIN_JAVA\org\stjude\ri\bwfp\domain\SomeClass_Roo_Configurable.aj
roo&amp;gt; add field string -fieldName SomeField
Managed SRC_MAIN_JAVA\org\stjude\ri\bwfp\domain\SomeClass.java
Created SRC_MAIN_JAVA\org\stjude\ri\bwfp\domain\SomeClass_Roo_JavaBean.aj
Managed SRC_MAIN_JAVA\org\stjude\ri\bwfp\domain\SomeClass_Roo_ToString.aj
roo&amp;gt; new controller automatic -formBackingObject ~.domain.SomeClass -name ~.web.SomeClass
Created SRC_MAIN_JAVA\org\stjude\ri\bwfp\web\SomeClass.java
Managed SRC_MAIN_WEBAPP\WEB-INF\web.xml
What happens is the generated controller looks like this
package org.stjude.ri.bwfp.web;
import org.springframework.roo.addon.web.mvc.controller.RooWebScaffold;
import org.stjude.ri.bwfp.domain.SomeClass;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.stereotype.Controller;
@RooWebScaffold(automaticallyMaintainView = true, formBackingObject = SomeClass.class)
@RequestMapping("/someclass/**")
@Controller
public class SomeClass {
}
The class will not compile because the import conflicts with the class name but from the roo command line there is no indication of an error.
 It&amp;amp;apos;s an annoyance level issue and is easily fixed but could be common for users with previous grails experience.
The new controller automatic command line needs to be able to detect if the provided classname in -name is the same as the provided classname in -formbackingobject and give an error, or be grails-like and append Controller to the generated class name.
</description>
			<version>1.0.0.M2</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="145" opendate="2009-07-12 18:45:50" fixdate="2009-07-13 13:19:50" resolution="Fixed">
		<buginformation>
			<summary>Not all current types in java.lang correctly recognized by JavaParserUtils</summary>
			<description>The @RooJavaBean creates invalid fully qualified package names for Iterable:
package foo.bar.baz;
import org.springframework.roo.addon.javabean.RooJavaBean;
@RooJavaBean
public class X {
  Iterable&amp;lt;Object&amp;gt; it;
}
produces a ITD with a method with the following declaration:
 public foo.bar.baz.Iterable&amp;lt;java.lang.Object&amp;gt; X.getIt()
For a other types sitting in java.lang, e.g., String the declaration is correct and refers to java.lang.String. As JavaBeanMetadata#getDeclaredGetter currently simply copies the type of the getter&amp;amp;apos;s field as its return type, I assumed that JavaParser&amp;amp;apos;s knowledge of java.lang is incomplete.</description>
			<version>1.0.0.M2</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="122" opendate="2009-06-30 20:01:25" fixdate="2009-07-13 14:05:46" resolution="Fixed">
		<buginformation>
			<summary>@RooConfigurable produces errornous ITD for parameterized types</summary>
			<description>The ITD created by @RooConfigurable uses the parameterized type name for accessing the annotated class:
@RooConfigurable
public class Foo&amp;lt;T&amp;gt; {
}
privileged aspect Foo_Roo_Configurable {
    declare @type: Foo&amp;lt;T&amp;gt;: @org.springframework.beans.factory.annotation.Configurable;    
}
This is an error in AspectJ: "T cannot be resolved to a type". The error can be resolved by removing the type parameter:
declare @type: Foo: @org.springframework.beans.factory.annotation.Configurable;    </description>
			<version>1.0.0.M2</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">94</link>
		</links>
	</bug>
	<bug id="153" opendate="2009-07-14 21:17:45" fixdate="2009-07-15 16:16:07" resolution="Fixed">
		<buginformation>
			<summary>Delete object using openJPA</summary>
			<description>Following error occurs when deleting any item from list.jsp
Internal error
org.springframework.web.bind.annotation.support.HandlerMethodInvocationException: Failed to invoke handler method [public java.lang.String com.nxp.web.PrefixController.delete(java.lang.Long)]; nested exception is java.lang.IllegalStateException: Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?) at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:154) at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:354) at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:342) at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:763) at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:709) at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:613) at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:558) at javax.servlet.http.HttpServlet.service(HttpServlet.java:643) at javax.servlet.http.HttpServlet.service(HttpServlet.java:717) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:646) at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:436) at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374) at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302) at org.tuckey.web.filters.urlrewrite.NormalRewrittenUrl.doRewrite(NormalRewrittenUrl.java:195) at org.tuckey.web.filters.urlrewrite.RuleChain.handleRewrite(RuleChain.java:159) at org.tuckey.web.filters.urlrewrite.RuleChain.doRules(RuleChain.java:141) at org.tuckey.web.filters.urlrewrite.UrlRewriter.processRequest(UrlRewriter.java:90) at org.tuckey.web.filters.urlrewrite.UrlRewriteFilter.doFilter(UrlRewriteFilter.java:417) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:68) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:113) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293) at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:847) at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583) at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:361) at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675) at java.lang.Thread.run(Thread.java:595) Caused by: java.lang.IllegalStateException: Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?) at com.nxp.key.Prefix_Roo_Entity.ajc$interMethod$com_nxp_key_Prefix_Roo_Entity$com_nxp_key_Prefix$remove(Prefix_Roo_Entity.aj:41) at com.nxp.key.Prefix.remove(Prefix.java:1) at com.nxp.key.Prefix_Roo_Entity.ajc$interMethodDispatch1$com_nxp_key_Prefix_Roo_Entity$com_nxp_key_Prefix$remove(Prefix_Roo_Entity.aj) at com.nxp.web.PrefixController_Roo_Controller.ajc$interMethod$com_nxp_web_PrefixController_Roo_Controller$com_nxp_web_PrefixController$delete(PrefixController_Roo_Controller.aj:62) at com.nxp.web.PrefixController.delete(PrefixController.java:1) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:585) at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.doInvokeMethod(HandlerMethodInvoker.java:626) at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:150) ... 41 more Cookies: JSESSIONID=[F714DDD9FAC5F3D79A3BA7EE0C890928]
used script:
install jpa -database HYPERSONIC_PERSISTENT -provider OPENJPA
add dependency -groupId javax.annotation -artifactId jsr250-api -version 1.0
new persistent class jpa -name ~.key.Prefix -testAutomatically
new persistent class jpa -name ~.key.Postfix -testAutomatically
new persistent class jpa -name ~.key.ProductGroup -testAutomatically
new persistent class jpa -name ~.key.Product -testAutomatically
add field string -class ~.key.Prefix -fieldName code -notNull -sizeMax 3
add field string -class ~.key.Postfix -fieldName code -notNull -sizeMax 3
add field string -class ~.key.ProductGroup -fieldName name -notNull -sizeMax 30
add field number -type integer -class ~.key.ProductGroup -fieldName index
add field string -class ~.key.Product -fieldName name -notNull -sizeMax 30
add field string -class ~.key.Product -fieldName prefix -notNull -sizeMax 3
add field string -class ~.key.Product -fieldName postfix -notNull -sizeMax 3
add field reference jpa -class ~.key.Prefix -fieldName productGroup -type ~.key.ProductGroup
add field reference jpa -class ~.key.Postfix -fieldName productGroup -type ~.key.ProductGroup
add field set jpa -class ~.key.ProductGroup -fieldName prefixes -element ~.key.Prefix -mappedBy productGroup -notNull
add field set jpa -class ~.key.ProductGroup -fieldName postfixes -element ~.key.Postfix -mappedBy productGroup -notNull
add field reference jpa -class ~.key.Product -fieldName productgroup -type ~.key.ProductGroup
new integration test
new controller automatic -name ~.web.PrefixController -formBackingObject ~.key.Prefix
new controller automatic -name ~.web.PostfixController -formBackingObject ~.key.Postfix
new controller automatic -name ~.web.ProductGroupController -formBackingObject ~.key.ProductGroup 
new controller automatic -name ~.web.ProductController -formBackingObject ~.key.Product
new selenium test -controller ~.web.PrefixController
new selenium test -controller ~.web.PostfixController
new selenium test -controller ~.web.ProductGroupController
new selenium test -controller ~.web.ProductController</description>
			<version>1.0.0.M1</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">5934</link>
		</links>
	</bug>
	<bug id="156" opendate="2009-07-15 16:31:12" fixdate="2009-07-16 12:57:02" resolution="Fixed">
		<buginformation>
			<summary>Roo generated web app does not work correctly in tomcat and dm Server</summary>
			<description>Using Roo from HEAD (July 15th) at r184, I generated a simple web application using the following script:
create project org.springsource.cddb.domain
install jpa -database HYPERSONIC_IN_MEMORY -provider HIBERNATE 
new persistent class jpa -name ~.CompactDisc 
add field string -fieldName title -notNull  
add field string -fieldName artist -notNull
install finder -finderName  findCompactDiscsByTitleLike
install finder -finderName  findCompactDiscsByArtistLike
new controller automatic ~.CompactDiscController
(note it&amp;amp;apos;s slightly unusual in that the Controller is in the same package as the domain entity)
mvn jetty:run works perfectly
mvn package, and then deploying the war file to either vanilla tomcat or dm Server fails. The home page comes up correctly, but following any of the links under "CompactDisc" (e.g. Create new CompactDisc) fails with a 404: The requested resource (/domain/compactdisc/form) is not available.</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.menu.MenuOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="is depended on by">138</link>
		</links>
	</bug>
	<bug id="161" opendate="2009-07-16 15:57:44" fixdate="2009-07-16 16:01:26" resolution="Fixed">
		<buginformation>
			<summary>Complex metadata dependency relationships behaving inconsistently between identical execution runs</summary>
			<description>Repeated execution of the following command will occasionally result in an exception:
rm -rf * .*; roo-dev script wedding.roo
An exception resulted on an intermittent basis. Research showed the WebScaffoldMetadata was reacting to an upstream dependency change and acquiring a particular instance of EntityMetadata. It would then iterate the dynamic finders declared by EntityMetadata and request a FinderMetadata instance. The FinderMetadata instance would be using a different instance of EntityMetadata (this was confirmed via System.identityHashCode(Object) calls). The problem is that EntityMetadata was not eagerly evicted from the cache. The intermittent nature of the problem was due to unordered Collection instances (specifically HashSet and HashMap) being used to store metadata dependency information, and the different ordering for notifications that subsequently resulted.</description>
			<version>1.0.0.A1</version>
			<fixedVersion>1.0.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.metadata.internal.DefaultMetadataService.java</file>
		</fixedFiles>
	</bug>
	<bug id="162" opendate="2009-07-19 23:34:19" fixdate="2009-07-26 18:50:51" resolution="Fixed">
		<buginformation>
			<summary>Parsing fails for types that are sub-subclasses of a type unknown to Roo</summary>
			<description>If Roo encounters a class hierarchy nested for at least 2 levels where the super class is unknown to Roo, then its parser barfs:
roo&amp;gt; create project -topLevelPackage test.sub.types

java.lang.Exception is unknown to Roo, this line is just to show Roo&amp;amp;apos;s error message
roo&amp;gt; new java file -name test.sub.types.Foo -extends java.lang.Exception
Unable to locate requested type&amp;amp;apos;java.lang.Exception&amp;amp;apos;

roo&amp;gt; new java file -name test.sub.types.Foo

Manually modify test.sub.types.Foo and let it extend Exception, save it


After saving Foo; inheritence from Foo works without problems
roo&amp;gt; new java file -name test.sub.types.Bar -extends ~.Foo
Created SRC_MAIN_JAVA\test\sub\types\Bar.java


Inheritence from a class that indirectly has Foo as a supertype does not work
roo&amp;gt; new java file -name foo.bar.baz.Baz -extends ~.Bar
Type &amp;amp;apos;foo.bar.baz.Bar&amp;amp;apos; exists on disk but cannot be parsed

If metadata trace is at level 1 or 2, its output suggests that Roo enters some recursion that finally aborts once a StackOverflowError is thrown.</description>
			<version>1.0.0.M2</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">170</link>
		</links>
	</bug>
	<bug id="171" opendate="2009-07-26 20:02:48" fixdate="2009-07-27 14:59:48" resolution="Fixed">
		<buginformation>
			<summary>Incorrect help text for "new integration test" shell command</summary>
			<description>If you type "help" at the roo prompt, the displayed help text includes these two lines:
...

new dod - Creates a new data on demand for the specified entity
new integration test - Creates a new data on demand for the specified entity
...

The second message of the two shown above seems to be an unintended duplicate.</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="172" opendate="2009-07-28 04:24:21" fixdate="2009-08-09 14:06:45" resolution="Fixed">
		<buginformation>
			<summary>Misplaced tr and thead in List all... generated tables</summary>
			<description>Hi,
Currently the JsPDocumentHelper class of the mvc-jsp addon generates a table to list all entities of a kind. This tables have a misplaced tr and thead like this
&amp;lt;table&amp;gt;
   &amp;lt;tr&amp;gt;
       &amp;lt;thead&amp;gt;
             &amp;lt;th&amp;gt;...&amp;lt;/th&amp;gt;
             &amp;lt;th&amp;gt;...&amp;lt;/th&amp;gt;
               ..............
      &amp;lt;/thead&amp;gt;
  &amp;lt;/tr&amp;gt;
The tr tag should be a child of the thead tag instead
&amp;lt;table&amp;gt;
   &amp;lt;thead&amp;gt;
       &amp;lt;tr&amp;gt;
             &amp;lt;th&amp;gt;...&amp;lt;/th&amp;gt;
             &amp;lt;th&amp;gt;....&amp;lt;/th&amp;gt;
      &amp;lt;/tr&amp;gt;
  &amp;lt;/thead&amp;gt;
The change is pretty trivial, patch attached
Regards</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="190" opendate="2009-08-31 04:09:02" fixdate="2009-09-06 17:41:51" resolution="Fixed">
		<buginformation>
			<summary>Date fields does not allow null values</summary>
			<description>1. Create new pojo with jdk or jpa date field - no validations at all
2. mvn tomcat:run
3. try to save empty form






Failed to convert property value of type [java.lang.String] to required type [java.util.Date] for property someDate; nested exception is java.lang.IllegalArgumentException: Could not parse date: Unparseable date: ""






Hmm... </description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="186" opendate="2009-08-20 01:31:31" fixdate="2009-09-13 14:48:57" resolution="Fixed">
		<buginformation>
			<summary>&amp;apos;list finders for&amp;apos; command not working (ambigious command)</summary>
			<description>    ____  ____  ____
   / __ \/ __ \/ __ \
  / /_/ / / / / / / /
 / , _/ // / /_/ /
// ||___/___/    1.0.0.RC1 [rev 198]
Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.
roo&amp;gt; list finders for -class ~.Foo
Ambigious command &amp;amp;apos;list finders for -class ~.Foo&amp;amp;apos; (for assistance press TAB or type "hint" then hit ENTER)
help command gives a hint:
roo&amp;gt; help list finders for

list finders for - List all finders for a given target (must be an entity
new java jms listener - Create a new type which is a asynchronous JMS consumer

</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
		</fixedFiles>
	</bug>
	<bug id="192" opendate="2009-09-02 23:47:02" fixdate="2009-09-15 15:37:42" resolution="Fixed">
		<buginformation>
			<summary>Very long startup times</summary>
			<description>When I added couple of hundreds of other java files to roo project (some java files, some new pom dependencies and some jsp pages) I experience a massive slowdown in startup times of roo. 
Ctrl+Break shows following:






"main" prio=6 tid=0x008b7000 nid=0x10b4 runnable [0x0097c000..0x0099fe54]




   java.lang.Thread.State: RUNNABLE




        at japa.parser.ASTParser$GTToken.newToken(ASTParser.java:115)




        at japa.parser.ASTParserTokenManager.jjFillToken(ASTParserTokenManager.java:2107)




        at japa.parser.ASTParserTokenManager.getNextToken(ASTParserTokenManager.java:2189)




        at japa.parser.ASTParser.jj_ntk(ASTParser.java:7618)




        at japa.parser.ASTParser.AllocationExpression(ASTParser.java:2727)




        at japa.parser.ASTParser.PrimaryPrefix(ASTParser.java:2462)




        at japa.parser.ASTParser.PrimaryExpression(ASTParser.java:2371)




        at japa.parser.ASTParser.PostfixExpression(ASTParser.java:2306)




        at japa.parser.ASTParser.UnaryExpressionNotPlusMinus(ASTParser.java:2290)




        at japa.parser.ASTParser.UnaryExpression(ASTParser.java:2202)




        at japa.parser.ASTParser.MultiplicativeExpression(ASTParser.java:2099)




        at japa.parser.ASTParser.AdditiveExpression(ASTParser.java:2062)




        at japa.parser.ASTParser.ShiftExpression(ASTParser.java:2025)




        at japa.parser.ASTParser.RelationalExpression(ASTParser.java:1978)




        at japa.parser.ASTParser.InstanceOfExpression(ASTParser.java:1959)




        at japa.parser.ASTParser.EqualityExpression(ASTParser.java:1923)




        at japa.parser.ASTParser.AndExpression(ASTParser.java:1900)




        at japa.parser.ASTParser.ExclusiveOrExpression(ASTParser.java:1878)




        at japa.parser.ASTParser.InclusiveOrExpression(ASTParser.java:1856)




        at japa.parser.ASTParser.ConditionalAndExpression(ASTParser.java:1834)




        at japa.parser.ASTParser.ConditionalOrExpression(ASTParser.java:1812)




        at japa.parser.ASTParser.ConditionalExpression(ASTParser.java:1792)




        at japa.parser.ASTParser.Expression(ASTParser.java:1716)




        at japa.parser.ASTParser.ThrowStatement(ASTParser.java:3664)




        at japa.parser.ASTParser.Statement(ASTParser.java:2920)




        at japa.parser.ASTParser.IfStatement(ASTParser.java:3254)




        at japa.parser.ASTParser.Statement(ASTParser.java:2899)




        at japa.parser.ASTParser.BlockStatement(ASTParser.java:3043)




        at japa.parser.ASTParser.Statements(ASTParser.java:1369)




        at japa.parser.ASTParser.Block(ASTParser.java:2980)




        at japa.parser.ASTParser.Statement(ASTParser.java:2864)




        at japa.parser.ASTParser.IfStatement(ASTParser.java:3254)




        at japa.parser.ASTParser.Statement(ASTParser.java:2899)




        at japa.parser.ASTParser.BlockStatement(ASTParser.java:3043)




        at japa.parser.ASTParser.Statements(ASTParser.java:1369)




        at japa.parser.ASTParser.Block(ASTParser.java:2980)




        at japa.parser.ASTParser.MethodDeclaration(ASTParser.java:1089)




        at japa.parser.ASTParser.ClassOrInterfaceBodyDeclaration(ASTParser.java:831)




        at japa.parser.ASTParser.ClassOrInterfaceBody(ASTParser.java:755)




        at japa.parser.ASTParser.ClassOrInterfaceDeclaration(ASTParser.java:438)




        at japa.parser.ASTParser.TypeDeclaration(ASTParser.java:365)




        at japa.parser.ASTParser.CompilationUnit(ASTParser.java:178)




        at japa.parser.JavaParser.parse(JavaParser.java:81)




        at japa.parser.JavaParser.parse(JavaParser.java:94)




        at org.springframework.roo.classpath.javaparser.JavaParserClassMetadata.&amp;lt;init&amp;gt;(JavaParserClassMetadata.java:56)




        at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.get(JavaParserMetadataProvider.java:153)




        at org.springframework.roo.metadata.internal.DefaultMetadataService.get(DefaultMetadataService.java:106)




        at org.springframework.roo.metadata.internal.DefaultMetadataService.notify(DefaultMetadataService.java:153)




        at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:224)




        at org.springframework.roo.metadata.internal.DefaultMetadataService.notify(DefaultMetadataService.java:156)




        at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:224)




        at org.springframework.roo.metadata.internal.DefaultMetadataService.notify(DefaultMetadataService.java:156)




        at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:224)




        at org.springframework.roo.metadata.internal.DefaultMetadataService.notify(DefaultMetadataService.java:156)




        at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:224)




        at org.springframework.roo.metadata.internal.DefaultMetadataService.notify(DefaultMetadataService.java:156)




        at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:224)




        at org.springframework.roo.metadata.internal.DefaultMetadataService.notify(DefaultMetadataService.java:156)




        at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:224)




        at org.springframework.roo.metadata.internal.DefaultMetadataService.notify(DefaultMetadataService.java:156)




        at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:224)




        at org.springframework.roo.metadata.internal.DefaultMetadataService.notify(DefaultMetadataService.java:156)




        at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:224)




.....very very long





</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
			<file type="M">org.springframework.roo.model.JavaSymbolName.java</file>
			<file type="M">org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.java</file>
			<file type="M">org.springframework.roo.shell.jline.JLineShell.java</file>
			<file type="M">org.springframework.roo.shell.Shell.java</file>
			<file type="M">org.springframework.roo.bootstrap.Bootstrap.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.TilesOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">198</link>
			<link type="Related" description="is related to">195</link>
		</links>
	</bug>
	<bug id="205" opendate="2009-09-21 17:37:38" fixdate="2009-09-21 17:39:21" resolution="Fixed">
		<buginformation>
			<summary>JavaType.equals(Object) fails to take into account data type</summary>
			<description>The second assertion check incorrectly fails:






	@Test




	public void test() {




		JavaType t1 = JavaType.BOOLEAN_PRIMITIVE;




		JavaType t2 = JavaType.BOOLEAN_PRIMITIVE;




		JavaType t3 = JavaType.BOOLEAN_OBJECT;




		Assert.assertTrue(t1.equals(t2));




		Assert.assertFalse(t1.equals(t3));




	}





</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
		</fixedFiles>
	</bug>
	<bug id="206" opendate="2009-09-21 18:43:46" fixdate="2009-09-21 18:45:34" resolution="Fixed">
		<buginformation>
			<summary>DataOnDemand fails to properly support common primitive data types</summary>
			<description>DataOnDemand attempts to present null to mutators for primitive fields.
Reproduce by script clinic.roo, modifying Pet&amp;amp;apos;s "sendReminders" from Boolean to boolean, and then executing the test. The error will be:
PetDataOnDemand_Roo_DataOnDemand.aj:19:0::0 The method setSendReminders(boolean) in the type Pet is not applicable for the arguments (null)</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">234</link>
		</links>
	</bug>
	<bug id="194" opendate="2009-09-03 23:41:36" fixdate="2009-09-22 12:36:59" resolution="Fixed">
		<buginformation>
			<summary>Maps fields not supported by mvc plugin</summary>
			<description>Either it needs to be marked as caveat in release doc that map fields are unsupported or it is a bug.
In 1.0.0.RC1 , roo cannot decide on plural name for Map&amp;lt;String,Entity&amp;gt; - it tries to find a plural for first param instead of second , specifying @RooPlural on String is out of question  . Not sure how the gui should look like for a map - probably list of entries....</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">90</link>
		</links>
	</bug>
	<bug id="184" opendate="2009-08-17 00:14:48" fixdate="2009-09-22 13:09:30" resolution="Fixed">
		<buginformation>
			<summary>Dropdown disappears after validation error</summary>
			<description>Dropdown controls disappear from forms upon validation errors. This appears to be a problem with the AspectJ controller files generated by Spring Roo generally. The petclinic sample application provides one example. Specifically, the "createForm" method in the auto-generated file OwnerController_Roo_Controller.aj maps "pets" to the result set from a call to ~.domain.Pet.findAllPets(); but this mapping does not occur in the "create" method prior to returning with the String "owner/create." Consequently, the pets model object is lost in the process of returning from validation.</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="203" opendate="2009-09-17 04:40:09" fixdate="2009-09-24 16:40:02" resolution="Fixed">
		<buginformation>
			<summary>upper case member names are ignored in generated jsp files</summary>
			<description>If I generate a persistent class wherein the member names are all upper case, the generated jsp files, for the generated controller, ignore these names:
e.g.:
new persistent class jpa -name ~.domain.document -testAutomatically
add field string -fieldName TLE1 -notNull
add field string -fieldName TLE2 -notNull
add field string -fieldName TLE3 -notNull
new controller automatic -name ~.web.DocumentController -formBackingObject ~.domain.Document
The fields TLE1, TLE2 and TLE3 do not appear in the maintenance jsp files (e.g. update.jsp)</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.beaninfo.BeanInfoMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">303</link>
		</links>
	</bug>
	<bug id="217" opendate="2009-09-25 18:36:21" fixdate="2009-09-25 18:36:55" resolution="Fixed">
		<buginformation>
			<summary>JavaParserUtils incorrectly identifies methods returning "void" as being JavaType Void objects instead of JavaType void primitives</summary>
			<description>Declaring a method in a .java file with a "void" return type will be incorrectly represented by JavaParserUtils. The method should be reported as a JavaType.VOID_PRIMITIVE.</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="229" opendate="2009-09-30 11:48:58" fixdate="2009-09-30 11:50:41" resolution="Fixed">
		<buginformation>
			<summary>Filters inserted into web.xml do not adhere to ordering requirements</summary>
			<description>Currently, the OpenEntityManagerInViewFilter required for JPA and also the SpringSecurityFilterChain required by Spring Security are inserted into the web.xml when required. However, their location in the web.xml is not correct. </description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.security.SecurityOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="238" opendate="2009-09-30 19:39:21" fixdate="2009-09-30 19:41:39" resolution="Fixed">
		<buginformation>
			<summary>JavaParserUtils.importTypeIfRequired(...) fails to handle primitive JavaType conversion</summary>
			<description>JavaParserUtils.importTypeIfRequired(...) fails to handle primitive JavaType conversion</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="is depended on by">234</link>
		</links>
	</bug>
	<bug id="242" opendate="2009-10-01 12:55:57" fixdate="2009-10-01 13:04:25" resolution="Fixed">
		<buginformation>
			<summary>Integration tests fail when executed against OpenJPA due to flush timing and result list mutability</summary>
			<description>script clinic.roo when persistence is OPENJPA will fail due to two errors:
1. Flushing is required so that the identifier is assigned to newly-persisted entities (integration test add-on).
2. The List&amp;lt;EntityClass&amp;gt; returned from the finder is immutable, so subsequent attempts to add newly-created transient entities to that list will fail (data on demand add-on).</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="187" opendate="2009-08-20 18:27:17" fixdate="2009-10-01 16:04:39" resolution="Fixed">
		<buginformation>
			<summary>Inconsistency in external JPA implementation causes duplicate entry for key</summary>
			<description>See forum topic.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
			<file type="M">org.springframework.roo.classpath.operations.jsr303.SetField.java</file>
		</fixedFiles>
	</bug>
	<bug id="244" opendate="2009-10-01 17:05:49" fixdate="2009-10-01 18:30:27" resolution="Fixed">
		<buginformation>
			<summary>JavaParser metadata fails to correctly resolve package names if simple type names are part of java.lang</summary>
			<description>Steps to Reproduce:

Create a project.
Install JPA.
Create a persistence class with the following command: new persistent class jpa -name ~.domain.Package
Create a field with the following command: add field string -fieldName name -notNull

Expected Behavior:
The user should be told that "Package" is a reserved word at the time of the persistent class creation, and no files should be generated.
Actual Behavior:
The creation of the persistent class appears to succeed, but the user gets the following error when adding the field:
Java source code details unavailable for type SRC_MAIN_JAVA/com.pedantus.package
repository.domain.Package
java.lang.IllegalArgumentException: Java source code details unavailable for typ
e SRC_MAIN_JAVA/com.pedantus.packagerepository.domain.Package
    at org.springframework.roo.support.util.Assert.notNull(Assert.java:112)
    at org.springframework.roo.classpath.operations.ClasspathOperations.addField
(ClasspathOperations.java:170)
    at org.springframework.roo.classpath.operations.FieldCommands.insertField(Fi
eldCommands.java:89)
    at org.springframework.roo.classpath.operations.FieldCommands.addFieldString
(FieldCommands.java:140)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
    at java.lang.reflect.Method.invoke(Unknown Source)
    at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(Reflect
ionUtils.java:191)
    at org.springframework.roo.bootstrap.ProcessManagerHostedExecutionStrategy$1
.callback(ProcessManagerHostedExecutionStrategy.java:33)
    at org.springframework.roo.process.manager.internal.DefaultProcessManager.do
Transactionally(DefaultProcessManager.java:127)
    at org.springframework.roo.process.manager.internal.DefaultProcessManager.ex
ecute(DefaultProcessManager.java:90)
    at org.springframework.roo.bootstrap.ProcessManagerHostedExecutionStrategy.e
xecute(ProcessManagerHostedExecutionStrategy.java:31)
    at org.springframework.roo.shell.internal.AbstractShell.executeCommand(Abstr
actShell.java:120)
    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java
:80)
    at org.springframework.roo.bootstrap.Bootstrap.run(Bootstrap.java:109)
    at org.springframework.roo.bootstrap.Bootstrap.main(Bootstrap.java:49)</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">49</link>
		</links>
	</bug>
	<bug id="204" opendate="2009-09-20 23:01:19" fixdate="2009-10-02 08:35:20" resolution="Fixed">
		<buginformation>
			<summary>datepicker semi-language dependent</summary>
			<description>Just ran clinic.roo script and try to add an owner.
The datepicker widget doesn&amp;amp;apos;t if I set my windows locale to dutch (netherlands). It will pick a date as 14-9-2009 instead of 14-sep-2009. It will say:
Failed to convert property value of type [java.lang.String] to required type [java.util.Date] for property birthDay; nested exception is java.lang.IllegalArgumentException: Could not parse date: Unparseable date: "14-9-2009"
may not be null
When changing my locale to english, it works (on IE8, but not in FF3.5).
Also, non-required fields are rejected when not filled in.</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.RooWebScaffold.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldAnnotationValues.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">210</link>
		</links>
	</bug>
	<bug id="253" opendate="2009-10-03 17:00:54" fixdate="2009-10-04 09:59:12" resolution="Duplicate">
		<buginformation>
			<summary>Web views need to be aware of enums</summary>
			<description>The web add-on is not aware of enum concepts. It creates an empty drop-down list for an enum, whereas it should be populated with enum options. Refer to ROO-75 for an example script fragment for wedding.roo to reproduce, then try to create a "Rsvp" via the web UI.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC2</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspUtils.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">254</link>
			<link type="Related" description="is related to">75</link>
		</links>
	</bug>
	<bug id="262" opendate="2009-10-05 07:34:17" fixdate="2009-10-05 10:31:07" resolution="Fixed">
		<buginformation>
			<summary>"process" commands in MavenCommands should set current working directory for spawned Maven process</summary>
			<description>The MavenCommands.mvn method does not set the working directory of  the maven process. This causes the command to fail if running embedded  
inside STS (the current directory is not the Roo project directory).  You can fix that by passing the working directory to the  "Runtime.exec" call: Runtime.getRuntime().exec("mvn clean eclipse:clean", new String[0], new File("/file/system/path/ roo-1.0.0.RC2/clinic"));</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenOperations.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">327</link>
			<link type="Related" description="is related to">273</link>
		</links>
	</bug>
	<bug id="263" opendate="2009-10-05 07:35:24" fixdate="2009-10-05 10:32:52" resolution="Fixed">
		<buginformation>
			<summary>"process clean" command removes Eclipse metadata, causing poor user experience within Eclipse and STS</summary>
			<description>When running "process clean" the Eclipse project meta data will get  deleted. This is not very nice if running inside STS or Eclipse. It should really only do a "clean".</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="261" opendate="2009-10-05 07:32:42" fixdate="2009-10-05 14:08:09" resolution="Fixed">
		<buginformation>
			<summary>JspDocumentHelper NullPointerException (NPE) when using a Roo 1.0.0.RC1-created project with new 1.0.0.RC2 release</summary>
			<description>If you create a project with RC1 and then open a RC2 shell for that  project you get:
NullPointerException at  
org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.&amp;lt;init&amp;gt; 
(JspDocumentHelper.java:74)
This is easy to reproduce:

Open RC1 shell
roo&amp;gt; script clinic.roo
roo&amp;gt; exit
Open RC2 shell
see above error

</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">265</link>
			<link type="Related" description="is related to">183</link>
			<link type="Related" description="is related to">264</link>
			<link type="Related" description="is related to">273</link>
		</links>
	</bug>
	<bug id="276" opendate="2009-10-06 22:29:05" fixdate="2009-10-07 15:40:47" resolution="Fixed">
		<buginformation>
			<summary>The "field other" comment is inconsistent with other "field" commands</summary>
			<description>When using field other the field name is specified via a --name option.  For all other field types it is --fieldName.
The --path option is required, even though the command will default to the last used class in the usual way if --class is not specified.  The path must specify the correct maven location or that class won&amp;amp;apos;t be found.
Auto-complete seems to behave differently.
  field string --&amp;lt;tab&amp;gt;  generates a list of the available options
  field other --&amp;lt;tab&amp;gt;  auto-completes --class
Running "help field other" to list the possible options --notNull is not listed.  However --notNull can be specified (but it won&amp;amp;apos;t be auto-completed) and the field will be created with no warning.  However the @NotNull annotation will be missing.  Either notNull is supported and should be available in help and auto-complete, or it should generate a warning that it is being ignore, or an error that it is not supported should be generated.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
			<file type="M">org.springframework.roo.classpath.operations.jsr303.FieldDetails.java</file>
		</fixedFiles>
	</bug>
	<bug id="277" opendate="2009-10-07 10:30:11" fixdate="2009-10-07 16:02:39" resolution="Fixed">
		<buginformation>
			<summary>"backup" command does not work under Windows</summary>
			<description>"backup" on Windows 2000 gives the following exception when in development mode:
The filename, directory name, or volume label syntax is incorrect
java.io.IOException: The filename, directory name, or volume label syntax is incorrect
    at java.io.WinNTFileSystem.canonicalize0(Native Method)
    at java.io.Win32FileSystem.canonicalize(Unknown Source)
    at java.io.File.getCanonicalPath(Unknown Source)
    at org.springframework.roo.file.monitor.event.FileDetails.getCanonicalPath(FileDetails.java:83)
    at org.springframework.roo.addon.backup.BackupOperations.backup(BackupOperations.java:62)
    at org.springframework.roo.addon.backup.BackupCommands.backup(BackupCommands.java:33)</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.backup.BackupOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">376</link>
		</links>
	</bug>
	<bug id="288" opendate="2009-10-12 10:55:13" fixdate="2009-10-15 03:51:04" resolution="Fixed">
		<buginformation>
			<summary>Backup does not include empty directories (like src/main/resources)</summary>
			<description>The "backup" command does not include empty directories.
This causes problems if people use the backup command to make a ZIP file that other person attempt to then use with Eclipse (via mvn eclipse:eclipse). Eclipse reports a missing src/main/resources directory.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.backup.BackupOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="291" opendate="2009-10-12 23:41:23" fixdate="2009-10-15 12:54:10" resolution="Fixed">
		<buginformation>
			<summary>the "Show Object" icon in the generated list view does not use the custom controller path</summary>
			<description>As mikej stated in the above forum post, he noticed that the "Show Object" icon in the generated list view does not use the custom controller path. 
E.g., he creates a controller with:






controller scaffold --name ~.web.home.TaskController --entity ~.domain.Task --path appuser/task






And then he navigates to /myapp/appuser/task. In the list of tasks the "show task" icon for each task row is mapped to the wrong url, e.g.:






&amp;lt;form id="command" action="/myapp/task/23" method="GET"&amp;gt;






Note that the "action" in this case should be "/myapp/appuser/task/23".</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="M">org.springframework.roo.addon.web.menu.MenuOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="290" opendate="2009-10-12 23:29:33" fixdate="2009-10-15 12:54:39" resolution="Fixed">
		<buginformation>
			<summary>user-configured controller paths with more than one path element produce invalid expressions in jsp files</summary>
			<description>I have tried the new RC2 feature "user-configured controller paths".
But it does not seem to work for paths with more than one element.
My commands are:






controller scaffold --name ~.web.MyEntityController --entity ~.model.MyEntity --path admin/myentity




controller scaffold --name ~.web.MyOtherEntityController --entity ~.model.MyOtherEntity --path /admin/myotherentity/






This is the generated view code:






&amp;lt;li id="web_mvc_jsp_create_admin/myentity_menu_item"&amp;gt;




    &amp;lt;c:url value="/admin/myentity/form" var="web_mvc_jsp_create_admin/myentity_menu_item_url"/&amp;gt;




    &amp;lt;a href="${web_mvc_jsp_create_admin/myentity_menu_item_url}"&amp;gt;




        &amp;lt;spring:message arguments="MyEntity" code="global.menu.new"/&amp;gt;




    &amp;lt;/a&amp;gt;




&amp;lt;/li&amp;gt;




...




&amp;lt;li id="web_mvc_jsp_create_admin/myotherentity/_menu_item"&amp;gt;




    &amp;lt;c:url value="/admin/myotherentity//form" var="web_mvc_jsp_create_admin/myotherentity/_menu_item_url"/&amp;gt;




    &amp;lt;a href="${web_mvc_jsp_create_admin/myotherentity/_menu_item_url}"&amp;gt;




        &amp;lt;spring:message arguments="MyOtherEntity" code="global.menu.new"/&amp;gt;




    &amp;lt;/a&amp;gt;




&amp;lt;/li&amp;gt;






And this is the result:






&amp;lt;a href="0"&amp;gt;Create new MyEntity&amp;lt;/a&amp;gt;




...




&amp;lt;a href="NaN"&amp;gt;Create new MyOtherEntity&amp;lt;/a&amp;gt;






It seems that the variable generation strategy produces invalid expressions.
Cheers
      Tim</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="M">org.springframework.roo.addon.web.menu.MenuOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="286" opendate="2009-10-10 13:54:51" fixdate="2009-10-15 22:50:20" resolution="Fixed">
		<buginformation>
			<summary>Title pane widget creates conflict with "title" object property</summary>
			<description>For example, if I have an object with a "title" property (say, employee.title or book.title), roo generates pages with conflicting id attributes on html elements. In my own case, I had a create.jspx page that created the following jsp code:
Line 3:    &amp;lt;div id="_title" style="width: 100%"&amp;gt;
Line 34:                 &amp;lt;form:textarea cssStyle="width:250px" id="_title" path="title"/&amp;gt;
Line 37:                 &amp;lt;form:errors cssClass="errors" id="_title" path="title"/&amp;gt;
I&amp;amp;apos;m not sure about the last one, which may not create an html element in the generated html, but the first two create html elements both with id="_title". (As a result, due to js errors, that page doesn&amp;amp;apos;t even display.) 
Perhaps Roo ought to use more complex naming on its non-user-specified elements such as the title pane widget&amp;amp;apos;s div.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.DojoUtils.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspUtils.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="is depended on by">293</link>
		</links>
	</bug>
	<bug id="308" opendate="2009-10-22 06:02:50" fixdate="2009-10-25 06:21:20" resolution="Fixed">
		<buginformation>
			<summary>Controllers created outside toplevel package break the application</summary>
			<description>I did a &amp;amp;apos;controller all&amp;amp;apos; on a small sample app, but made a typo in the package. The result is that the @Controller classes are generated in the specified package, but since webmvc-config only contains a component-scan directive for @Controller classes under the toplevel package they&amp;amp;apos;re never picked up. Hence all URLs that should be handled by these controllers will go to the default UrlFilenameViewController instead.
Roo should either give an error-msg (seems like the best choice) or add an extra component-scan directive when the user creates controllers outside the toplevel package.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="303" opendate="2009-10-21 03:05:32" fixdate="2009-10-25 07:04:05" resolution="Fixed">
		<buginformation>
			<summary>Uppercase field names not working with scaffold</summary>
			<description>Execute the following script (note the uppercase letter in the field name):
project --topLevelPackage org.test.rootask
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY 
entity --name ~.domain.Task
field string Name
controller all --package ~.web 
Run it and browse to: http://localhost:8080/rootask/task/form
It throws an error:
org.springframework.beans.NotReadablePropertyException: Invalid property &amp;amp;apos;Name&amp;amp;apos; of bean class [org.test.rootask.domain.Task]: Bean property &amp;amp;apos;Name&amp;amp;apos; is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
This code works:
project --topLevelPackage org.test.rootask
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY 
entity --name ~.domain.Task
field string name
controller all --package ~.web 
</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.DojoUtils.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspUtils.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">203</link>
			<link type="Related" description="is related to">446</link>
		</links>
	</bug>
	<bug id="298" opendate="2009-10-16 01:38:17" fixdate="2009-10-25 07:26:24" resolution="Fixed">
		<buginformation>
			<summary> Error rendering datepicker in finder view</summary>
			<description>If you run petclinic sample and uses any date involved finder like "Find by Visit Date Between", the date inputs does not renders the calendar picker for Date fields. I think it may be a bug because the picker rendering seems ok while creating new entities.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.DojoUtils.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="305" opendate="2009-10-21 05:57:32" fixdate="2009-10-26 01:03:58" resolution="Fixed">
		<buginformation>
			<summary>Bug in external Inflector library reports StringIndexOutOfBoundsException when attempting to uppercase characters</summary>
			<description>Inflector bug shows a StringIndexOutOfBoundsException when attempting to pluralize type names ending in uppercase characters.
[code]
roo&amp;gt; entity --name ~.foo.BarBO
Created SRC_MAIN_JAVA/com/foo/foo
Created SRC_MAIN_JAVA/com/foo/foo/BarBO.java
Undo create SRC_MAIN_JAVA/com/foo/foo/BarBO.java
Undo create SRC_MAIN_JAVA/com/foo/foo
String index out of range: -1
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
    at java.lang.String.substring(String.java:1937)
    at org.jvnet.inflector.rule.SuffixInflectionRule.apply(SuffixInflectionRule.java:57)
    at org.jvnet.inflector.RuleBasedPluralizer.pluralizeInternal(RuleBasedPluralizer.java:169)
    at org.jvnet.inflector.RuleBasedPluralizer.pluralize(RuleBasedPluralizer.java:147)
    at org.jvnet.inflector.RuleBasedPluralizer.pluralize(RuleBasedPluralizer.java:121)
    at org.jvnet.inflector.Noun.pluralOf(Noun.java:121)
    at org.jvnet.inflector.Noun.pluralOf(Noun.java:89)
    at org.springframework.roo.addon.plural.PluralMetadata.&amp;lt;init&amp;gt;(PluralMetadata.java:59)
    at org.springframework.roo.addon.plural.PluralMetadataProvider.getMetadata(PluralMetadataProvider.java:30)
[code]</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.plural.PluralMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="307" opendate="2009-10-21 10:03:43" fixdate="2009-10-26 02:59:24" resolution="Fixed">
		<buginformation>
			<summary>JavaParser fails for annotation values that contain the string concatenation operator</summary>
			<description>Replacing this:






@NamedQueries({




        @NamedQuery(name = "photo.findByEventIdAndScanNumFetchRoll",




                   query = "SELECT p FROM Photo p INNER JOIN FETCH p.roll WHERE p.eventId = :eventId AND p.scanNum = :scanNum AND p.access &amp;lt;&amp;gt; &amp;amp;apos;D&amp;amp;apos; ")




})






with this:






@NamedQueries({




        @NamedQuery(name = "photo.findByEventIdAndScanNumFetchRoll",




                   query = "SELECT p FROM Photo p INNER JOIN FETCH p.roll WHERE" +




 " p.eventId = :eventId AND p.scanNum = :scanNum AND p.access &amp;lt;&amp;gt; &amp;amp;apos;D&amp;amp;apos; ")




})






causes this:
[timerFactory] Deleted SRC_MAIN_JAVA/test/MyEntity_Roo_Configurable.aj
[timerFactory] Deleted SRC_MAIN_JAVA/test/MyEntity_Roo_Entity.aj
[timerFactory] Deleted SRC_MAIN_JAVA/test/MyEntity_Roo_ToString.aj
[timerFactory] Deleted SRC_MAIN_JAVA/test/MyEntity_Roo_JavaBean.aj</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="327" opendate="2009-10-30 02:25:07" fixdate="2009-10-30 03:31:56" resolution="Duplicate">
		<buginformation>
			<summary>Eclipse Tooling: Maven "perform" commands do not work from Eclipse Console</summary>
			<description>From within the STS/Eclipse Roo shell:
roo&amp;gt; perform clean
[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: &amp;amp;apos;eclipse&amp;amp;apos;.
[INFO] ------------------------------------------------------------------------
[INFO] Building Maven Default Project
[INFO]    task-segment: [clean, eclipse:clean]
[INFO] ------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Cannot execute mojo: clean. It requires a project with an existing pom.xml, but the build is not using one.
[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: &amp;lt; 1 second
[INFO] Finished at: Thu Oct 29 19:26:26 MDT 2009
[INFO] Final Memory: 6M/104M
[INFO] ------------------------------------------------------------------------</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenOperations.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">262</link>
			<link type="Related" description="is related to">363</link>
		</links>
	</bug>
	<bug id="329" opendate="2009-10-31 03:22:14" fixdate="2009-10-31 03:23:49" resolution="Fixed">
		<buginformation>
			<summary>EditorMetadata erroneously attempts to introduce various members when they are already defined in the target type</summary>
			<description>Similar to ROO-328, the EditorMetadata erroneously attempts to introduce various members when they are already defined in the target type. This is exhibited when undertaking a push-in refactor. The Roo ITDs should never contain members separately provided in the standard .java file. The Roo system correctly reports the error on the console, but the property editor add-on next to be fixed to not attempt this in the first place.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.property.editor.EditorMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">328</link>
		</links>
	</bug>
	<bug id="328" opendate="2009-10-31 00:53:36" fixdate="2009-10-31 03:25:02" resolution="Fixed">
		<buginformation>
			<summary>EntityMetadata erroneously attempts to introduce EntityManager when it is already defined in the target type</summary>
			<description>If a user creates a Roo project and then performs a push-in refactor of all ITD types, Roo will report an error if the user has not yet deleted the @RooEntity annotation(s) from the target types. The error is cleared when @RooEntity is deleted as this indicates to Roo to no longer attempt to introduce an EntityManager field. This is a bug because Roo should always default to a "hands off" approach if the user has already defined a given member in the target type.
Exception fragment:






Method &amp;amp;apos;entityManager&amp;amp;apos; already defined in target type &amp;amp;apos;com.foo.Food&amp;amp;apos; (ITD target &amp;amp;apos;com.foo.Food_Roo_Entity&amp;amp;apos;)




java.lang.IllegalArgumentException: Method &amp;amp;apos;entityManager&amp;amp;apos; already defined in target type &amp;amp;apos;com.foo.Food&amp;amp;apos; (ITD target &amp;amp;apos;com.foo.Food_Roo_Entity&amp;amp;apos;)




    at org.springframework.roo.support.util.Assert.isNull(Assert.java:89)




    at org.springframework.roo.classpath.details.DefaultItdTypeDetailsBuilder.addMethod(DefaultItdTypeDetailsBuilder.java:93)




    at org.springframework.roo.addon.entity.EntityMetadata.&amp;lt;init&amp;gt;(EntityMetadata.java:143)




    at org.springframework.roo.addon.entity.EntityMetadataProvider.getMetadata(EntityMetadataProvider.java:73)





</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">329</link>
		</links>
	</bug>
	<bug id="321" opendate="2009-10-29 02:54:18" fixdate="2009-10-31 04:06:45" resolution="Fixed">
		<buginformation>
			<summary>Creation of integration test for abstract classes is possible by running the command explicitly</summary>
			<description>The command






entity --abstract --name ~.model.AbstractEntity --testAutomatically 






produces this message






Automatic tests cannot be created for an abstract entity; remove the --testAutomatically or --abstract option






However the explicit creation of the integration test is possible:






entity --abstract --name ~.model.AbstractEntity




test integration --entity tld.domain.project.model.AbstractEntity






This surely does not compile because AbstractEntity cannot be instantiated:






AbstractEntityDataOnDemand_Roo_DataOnDemand.aj






tld.domain.project.model.AbstractEntity obj = new tld.domain.project.model.AbstractEntity();






Maybe "test integration" on an abstract class should fail like "entity --abstract --testAutomatically".</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="is depended on by">316</link>
		</links>
	</bug>
	<bug id="316" opendate="2009-10-27 01:22:18" fixdate="2009-10-31 07:34:47" resolution="Fixed">
		<buginformation>
			<summary>DataOnDemand ITD references non-existing abstract class if the corresponding member is @NotNull</summary>
			<description>the following roo script






 




project --topLevelPackage tld.domain.project --java 6 --projectName icc_roo2









persistence setup --database HYPERSONIC_IN_MEMORY --provider HIBERNATE














entity --abstract --name ~.model.AbstractEntity









entity --name ~.model.ConcreteEntity --testAutomatically




field reference --fieldName reference --type ~.model.AbstractEntity --notNull yes






produces the entity






@Entity




@RooJavaBean




@RooToString




@RooEntity




public class ConcreteEntity {









    @NotNull




    @ManyToOne(targetEntity = AbstractEntity.class)




    @JoinColumn




    private AbstractEntity reference;




}






and the following DataOnDemand ITD






privileged aspect ConcreteEntityDataOnDemand_Roo_DataOnDemand {




[...]




    @Autowired    




    private AbstractEntityDataOnDemand ConcreteEntityDataOnDemand.abstractEntityDataOnDemand;    




[...]






Unfortunately AbstractEntityDataOnDemand does not exist. 
And it can not be created because --testAutomatically is not allowed for abstract classes.
The reference to abstractEntityDataOnDemand is only included if the corresponding class member is marked as @NotNull.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperations.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">321</link>
		</links>
	</bug>
	<bug id="331" opendate="2009-11-01 09:28:17" fixdate="2009-11-01 09:31:30" resolution="Fixed">
		<buginformation>
			<summary>Finder add-on creates incorrect JQL queries when joining conditions</summary>
			<description>Finder add-on creates incorrect JQL queries when joining conditions</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.finder.FinderMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="333" opendate="2009-11-02 14:44:55" fixdate="2009-11-02 14:47:30" resolution="Fixed">
		<buginformation>
			<summary>Introduction of new annotation to a JavaType is not flushed to disk</summary>
			<description>Invoking MutableClassOrInterfaceTypeDetails.addTypeAnnotation(AnnotationMetadata) does not add the annotation to the physical source code.
</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="334" opendate="2009-11-02 16:16:30" fixdate="2009-11-02 16:18:32" resolution="Fixed">
		<buginformation>
			<summary>ITD source file imported types are not aware of generics</summary>
			<description>When calling DefaultItdTypeDetailsBuilder.addImplementsType(JavaType) generics applied to the JavaType are ignored.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
		</fixedFiles>
	</bug>
	<bug id="339" opendate="2009-11-04 00:37:05" fixdate="2009-11-04 00:41:53" resolution="Duplicate">
		<buginformation>
			<summary>Get rid of Active Record pattern and use Repository &amp; Criteria pattern instead </summary>
			<description>Get rid of Active Record pattern and use Repository &amp;amp; Criteria pattern instead
Active Record pattern is not useful in big projects because entities have dependencies on persistence. It&amp;amp;apos;s likely that these entities will be serializable or even can be stored in different stores - DB, XML, JMS. Using of ActiveRecord pattern create a lot of unnecessary code and make entities not serializable and dependent only on DB store.
I do propose to use Repository pattern instead of ActiveRecord. This will dramatically reduce number of generated code. Make entities independent from DB specific.
Using Criteria pattern eliminate necessity to create finders in entities or on DAO layer.
As result repository will looks like:
public interface Repository&amp;lt;T extends Entity&amp;gt; 
{

	T create(T obj);

	T update(T obj);

	T read(Serializable key);

	void delete(Serializable key);

	List&amp;lt;T&amp;gt; load(IFilter filter);

}
Where Filter is tree of Criterias
</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManagerImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerProviderTest.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaLayerProviderTest.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceClassMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfManagedBeanMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityLayerProvider.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerProvider.java</file>
			<file type="D">org.springframework.roo.addon.entity.EntityLayerProviderTest.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerService.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaAnnotationValuesTest.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryLayerMethodTest.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.email.MailOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.shell.jline.osgi.JLineShellComponent.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdTypeDetailsProvidingMetadataItem.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.persistence.PersistenceMemberLocatorImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceCommands.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaLayerProviderTest.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.JavaTypePersistenceMetadataDetails.java</file>
			<file type="M">org.springframework.roo.classpath.details.ClassOrInterfaceTypeDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.addon.property.editor.EditorMetadata.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrJspMetadataListener.java</file>
			<file type="M">org.springframework.roo.classpath.persistence.PersistenceMemberLocator.java</file>
			<file type="M">org.springframework.roo.classpath.layers.MemberTypeAdditions.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceClassMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.property.editor.EditorMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceLocatorImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaLocatorImpl.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerCustomDataKeys.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataService.java</file>
			<file type="D">org.springframework.roo.project.layers.MemberTypeAdditions.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaLayerMethod.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerTypeMatcher.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerService.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerProvider.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.project.layers.Priority.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerType.java</file>
			<file type="D">org.springframework.roo.project.layers.CoreLayerProvider.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerAdapter.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerMethod.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerMethodTest.java</file>
			<file type="D">org.springframework.roo.project.layers.MemberTypeAdditionsTest.java</file>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.Identifier.java</file>
			<file type="D">org.springframework.roo.classpath.persistence.PersistenceIdentifierLocatorImpl.java</file>
			<file type="D">org.springframework.roo.classpath.persistence.PersistenceIdentifierLocator.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityLayerMethod.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityLayerMethodTest.java</file>
			<file type="M">org.springframework.roo.addon.serializable.SerializableMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryLayerMethodTest.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.RooService.java</file>
			<file type="D">org.springframework.roo.addon.layers.repository.RepositoryLayerMethod.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RooRepositoryJpa.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerUtils.java</file>
			<file type="M">org.springframework.roo.model.JavaSymbolName.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserConstructorMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.ArrayAttributeValue.java</file>
			<file type="M">org.springframework.roo.addon.plural.PluralMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserFieldMetadata.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserClassOrInterfaceTypeDetails.java</file>
			<file type="M">org.springframework.roo.classpath.PhysicalTypeDetails.java</file>
			<file type="M">org.springframework.roo.classpath.PhysicalTypeIdentifier.java</file>
			<file type="M">org.springframework.roo.classpath.PhysicalTypeIdentifierNamingUtils.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.DefaultAnnotationMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.AnnotationAttributeValue.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.AnnotationMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.java</file>
			<file type="M">org.springframework.roo.support.util.Pair.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaCommands.java</file>
			<file type="D">org.springframework.roo.project.layers.PersistenceMethod.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerServiceImplTest.java</file>
			<file type="M">org.springframework.roo.classpath.details.MemberHoldingTypeDetails.java</file>
			<file type="M">org.springframework.roo.classpath.details.DefaultItdTypeDetails.java</file>
			<file type="M">org.springframework.roo.classpath.details.DefaultClassOrInterfaceTypeDetails.java</file>
			<file type="D">org.springframework.roo.project.layers.Crud.java</file>
			<file type="D">org.springframework.roo.project.layers.CrudKey.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.DaoJpaLayerProvider.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.RooDaoJpa.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.DaoJpaMetadataProvider.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.DaoJpaMetadata.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.DaoJpaAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceOperationsImpl.java</file>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
			<file type="D">org.springframework.roo.layers.LayerService.java</file>
			<file type="D">org.springframework.roo.layers.Crud.java</file>
			<file type="D">org.springframework.roo.layers.LayerProvider.java</file>
			<file type="D">org.springframework.roo.layers.CrudKey.java</file>
			<file type="D">org.springframework.roo.layers.LayerServiceImpl.java</file>
			<file type="D">org.springframework.roo.layers.LayerUtils.java</file>
			<file type="D">org.springframework.roo.layers.MemberTypeAdditions.java</file>
			<file type="D">org.springframework.roo.layers.LayerAdapter.java</file>
			<file type="D">org.springframework.roo.layers.Priority.java</file>
			<file type="D">org.springframework.roo.layers.LayerType.java</file>
			<file type="D">org.springframework.roo.addon.layers.service.ServiceMetadataProvider.java</file>
			<file type="D">org.springframework.roo.addon.layers.service.ServiceMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.populator.AutoPopulationUtils.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaOperationsImpl.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.DaoJpaMetadata.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RepositoryJpaLayerProvider.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.RooDaoJpa.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.DaoJpaAnnotationValues.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.DaoJpaLayerProvider.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RepositoryJpaMetadataProvider.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RepositoryJpaMetadata.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RepositoryJpaAnnotationValues.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RooRepositoryJpa.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.DaoJpaMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">301</link>
			<link type="Related" description="is related to">340</link>
		</links>
	</bug>
	<bug id="343" opendate="2009-11-04 02:46:56" fixdate="2009-11-04 08:39:00" resolution="Fixed">
		<buginformation>
			<summary>ClassCastException in file monitoring</summary>
			<description>I tried to use file monitoring service from another Spring project. If I add monitoring request for a file followed by a directory, I get ClassCastException in PollingFileMonitorService.add(MonitoringRequest). The fix is simple (patch attached)</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.file.monitor.polling.PollingFileMonitorService.java</file>
		</fixedFiles>
	</bug>
	<bug id="347" opendate="2009-11-06 05:17:37" fixdate="2009-11-07 12:39:45" resolution="Fixed">
		<buginformation>
			<summary>TilesOperations fails on Windows with spaces in path and also consumes root exceptions</summary>
			<description>If you run script vote.roo on Windows from an empty directory that appears in a path containing a space, you get:
java.lang.IllegalStateException: Unable to parse the tiles C:\springsource\roo-1
.0.0.RC2\vote 3\src\main\webapp\WEB-INF\views\views.xml file
    at org.springframework.roo.addon.mvc.jsp.TilesOperations.&amp;lt;init&amp;gt;(TilesOperations.java:94)
    at org.springframework.roo.addon.security.SecurityOperations.installSecurity(SecurityOperations.java:87)
The real root exception is also swallowed by the handling approach of:
} catch (Exception e) {
  throw new IllegalStateException("Unable to parse the tiles " + viewFile + " file");
}
It would probably be useful to retain the root exception and pass it to the IllegalStateException constructor.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.TilesOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="254" opendate="2009-10-03 22:40:15" fixdate="2009-11-07 12:43:29" resolution="Fixed">
		<buginformation>
			<summary>enums cannot be entered in web interface</summary>
			<description>The new enum facility does not work with the web-interface.  The enumerator field appears as two empty drop-downs.  See attached screenshot.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspUtils.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">6190</link>
			<link type="Duplicate" description="is duplicated by">253</link>
			<link type="Related" description="is related to">3389</link>
			<link type="Related" description="is related to">75</link>
		</links>
	</bug>
	<bug id="354" opendate="2009-11-07 22:20:15" fixdate="2009-11-08 02:29:05" resolution="Fixed">
		<buginformation>
			<summary>Dependencies incorrectly parsed when unexpected &lt;type&gt; element appearing in pom.xml</summary>
			<description>I&amp;amp;apos;ve changed some part of my pom.xml with Eclipse editor, something like add new Plugin and properties or Tabbed some dependencies for putting them in right format.
Now after create a new Controller then pom.xml will include 10 repeated dependencies.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.Dependency.java</file>
		</fixedFiles>
	</bug>
	<bug id="364" opendate="2009-11-10 10:34:10" fixdate="2009-11-10 16:17:19" resolution="Fixed">
		<buginformation>
			<summary>Problem with custom controller path</summary>
			<description>Using revision 401 (which is RC3)






 




roo&amp;gt; controller scaffold --name ~.web.MyEntityController --entity ~.domain.Ent1 --path admin/ent1




Created SRC_MAIN_JAVA/com/test/web/MyEntityController.java




Managed SRC_MAIN_WEBAPP/WEB-INF/web.xml




Managed ROOT/pom.xml




Created SRC_MAIN_JAVA/com/test/web/MyEntityController_Roo_Controller.aj




Created SRC_MAIN_WEBAPP/WEB-INF/views/admin/ent1




Created SRC_MAIN_WEBAPP/WEB-INF/views/admin/ent1/list.jspx




Created SRC_MAIN_WEBAPP/WEB-INF/views/admin/ent1/show.jspx




Created SRC_MAIN_WEBAPP/WEB-INF/views/admin/ent1/create.jspx




Undo create SRC_MAIN_WEBAPP/WEB-INF/views/admin/ent1/create.jspx




Undo create SRC_MAIN_WEBAPP/WEB-INF/views/admin/ent1/show.jspx




Undo create SRC_MAIN_WEBAPP/WEB-INF/views/admin/ent1/list.jspx




Undo create SRC_MAIN_WEBAPP/WEB-INF/views/admin/ent1




Undo create SRC_MAIN_JAVA/com/test/web/MyEntityController_Roo_Controller.aj




Undo manage ROOT/pom.xml




Undo manage SRC_MAIN_WEBAPP/WEB-INF/web.xml




Undo create SRC_MAIN_JAVA/com/test/web/MyEntityController.java




Illegal name &amp;amp;apos;admin/ent1&amp;amp;apos; (illegal character)






This used to work before, I am currently using revision 362 and have controllers with admin/... path.  Upgrading to RC3 breaks my project with the same error (I am also using automaticallyMaintainView=true)</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperations.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.menu.MenuOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="is depended on by">375</link>
		</links>
	</bug>
	<bug id="367" opendate="2009-11-10 14:24:22" fixdate="2009-11-10 17:22:13" resolution="Fixed">
		<buginformation>
			<summary>@NotNull enum field causes drop down boxes to be rendered twice.</summary>
			<description>Will attach sample project and screenshot.</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.DojoUtils.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="368" opendate="2009-11-10 20:53:49" fixdate="2009-11-10 21:16:40" resolution="Fixed">
		<buginformation>
			<summary>revision417  roo-dev version builds error </summary>
			<description>
Test PC : Window Vista, JDK 1.6
Action : svn checkout and, ~\spring-roo\trunk&amp;gt;mvn clean install site assembly:assembly
Error message is,

===============================================================================
...
[INFO] ------------------------------------------------------------------------
[INFO] Building Spring Roo - Addon - Web MVC JSP View
[INFO]    task-segment: [clean, install, site]
[INFO] ------------------------------------------------------------------------
[INFO] [clean:clean]
[INFO] Deleting directory D:\JAVA_PROJECT\ROO\spring-roo\trunk\addon-web-mvc-jsp\target
[INFO] [buildnumber:create 
{execution: default}
]
[INFO] Checking for local modifications: skipped.
[INFO] Updating project files from SCM: skipped.
[INFO] Executing: cmd.exe /X /C "svn --non-interactive info"
[INFO] Working directory: D:\JAVA_PROJECT\ROO\spring-roo\trunk\addon-web-mvc-jsp
[INFO] Storing buildNumber: 417 at timestamp: 1257935315168
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:compile]
[INFO] Compiling 7 source files to D:\JAVA_PROJECT\ROO\spring-roo\trunk\addon-web-mvc-jsp\target\classes
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Compilation failure
D:\JAVA_PROJECT\ROO\spring-roo\trunk\addon-web-mvc-jsp\src\main\java\org\springframework\roo\addon\mvc\jsp\JspDocumentHe
lper.java:[37,17] cannot find symbol
symbol  : class DevPollSelectorProvider
location: package sun.nio.ch
...
===============================================================================</description>
			<version>1.0.0.RC4</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="374" opendate="2009-11-10 23:35:50" fixdate="2009-11-11 07:55:34" resolution="Fixed">
		<buginformation>
			<summary>Typo in doc section A.4.2</summary>
			<description>--entity The entity which /will/ this data on demand class will create and modify as required</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="377" opendate="2009-11-11 14:04:32" fixdate="2009-11-11 14:25:25" resolution="Fixed">
		<buginformation>
			<summary>Roo generated finder has a sql syntax error in it</summary>
			<description>Copying over from STS-626:
I am using PSQL and hibernate for persistence.
I generated a finder to find Researchers by Interests. The Roo generated finder has a SQL error in it (look for WHERE AND). Here is the generated method:






public static Query Researcher.findResearchersByInterests(Set&amp;lt;Interest&amp;gt; interests) {




   if (interests == null) throw new IllegalArgumentException("The interests argument is required");




   EntityManager em = Researcher.entityManager();




   StringBuilder queryBuilder = new StringBuilder("SELECT Researcher FROM Researcher AS researcher WHERE AND");




   for (int i = 0; i &amp;lt; interests.size(); i++) { 




      if (i &amp;gt; 0) queryBuilder.append(" AND"); 




      queryBuilder.append(" :interests_item").append(i).append(" MEMBER OF researcher.interests"); 




   }




   Query q = em.createQuery(queryBuilder.toString());




   int i = 0;




   for (Interest interest: interests) { 




      q.setParameter("interests_item" + i++, interest); 




   }




   return q;




}






When I try to use this finder in my app i get a org.hibernate.hql.ast.QuerySyntaxException: unexpected token: AND near line 1, column 81 [SELECT Researcher FROM edu.drexel.goodwin.domain.Researcher AS researcher WHERE AND :interests_item0 MEMBER OF researcher.interests]
That word AND shouldn&amp;amp;apos;t be right after the WHERE.</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.finder.FinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServicesImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="379" opendate="2009-11-12 20:26:29" fixdate="2009-11-12 20:29:02" resolution="Fixed">
		<buginformation>
			<summary>Shell tab completion irregularity when default options are used</summary>
			<description>(Logged by Ben on behalf of Paul)
If I run Roo RC3:
roo&amp;gt; project --[TAB]
project --java           project --projectName    project --template
roo&amp;gt; project --t[TAB]
project --template           project --topLevelPackage
Why don&amp;amp;apos;t I get ----topLevelPackage appear in the first list, only in the second?  Is this a bug or expected behaviour?</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.ParserUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="378" opendate="2009-11-12 04:15:58" fixdate="2009-11-12 22:19:02" resolution="Fixed">
		<buginformation>
			<summary>Tests are failing when @OneToOne relationship is present</summary>
			<description>Here are the steps to reproduce:






 




roo&amp;gt; project --topLevelPackage com.test --projectName Test --template STANDARD_PROJECT




roo&amp;gt; persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY




roo&amp;gt; entity --name Region --testAutomatically




roo&amp;gt; field string --fieldName name




roo&amp;gt; entity --name Survey --testAutomatically




roo&amp;gt; field string --fieldName name




roo&amp;gt; perform tests






Everything works as expected.
In my case you can only have one survey per region.  And you can create a region without creating a survey.
So I manually (because I don&amp;amp;apos;t see a Roo command to add one-to-one relationship) add the following:
in Survey.java






 




    @NotNull




    @OneToOne(cascade = CascadeType.ALL, optional=false)




    @JoinColumn(name = "region_id")




    private Region region;






in Region.java






 




    @OneToOne(mappedBy="region", optional=true)




    private Survey survey;






I now run the tests again:  






 




roo&amp;gt; perform tests




-------------------------------------------------------




 T E S T S




-------------------------------------------------------




Running com.test.RegionIntegrationTest




Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.755 sec




Running com.test.SurveyIntegrationTest




Tests run: 9, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 0.094 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!









Results :









Tests in error: 




  testFlush(com.test.SurveyIntegrationTest)




  testMerge(com.test.SurveyIntegrationTest)




  testPersist(com.test.SurveyIntegrationTest)




  testRemove(com.test.SurveyIntegrationTest)




  testCountSurveys(com.test.SurveyIntegrationTest)




  testFindSurvey(com.test.SurveyIntegrationTest)




  testFindAllSurveys(com.test.SurveyIntegrationTest)




  testFindSurveyEntries(com.test.SurveyIntegrationTest)









Tests run: 18, Failures: 0, Errors: 8, Skipped: 0






Looking at the Survey&amp;amp;apos;s integration test report:
javax.persistence.PersistenceException: org.hibernate.PropertyValueException: not-null property references a null or transient value: com.test.Survey.region
I believe the problem is in the Survey&amp;amp;apos;s data on demand (region is being set to null):






     




public Survey SurveyDataOnDemand.getNewTransientSurvey(int index) {    




    com.test.Survey obj = new com.test.Survey();        




    obj.setName("name_" + index);        




    obj.setRegion(null);        




    return obj;        




}    





 </description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="363" opendate="2009-11-10 07:07:11" fixdate="2009-11-15 00:57:20" resolution="Fixed">
		<buginformation>
			<summary>Perform commands do not work in RC3</summary>
			<description>Just dowloaded RC3. 
Perform commands seem not to work at all. Same behavior in sts and in standalone roo shell.
Just looks like this:
roo&amp;gt; perform package
roo&amp;gt;
I have Maven 2.10 in my path. 
In previous version (RC2) it did work  (besides the known issue in STS ...)</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">392</link>
			<link type="Related" description="is related to">327</link>
		</links>
	</bug>
	<bug id="387" opendate="2009-11-16 00:22:07" fixdate="2009-11-16 09:05:39" resolution="Fixed">
		<buginformation>
			<summary>The database settings (url / username / password) do not get saved if you specify them when installing JPA</summary>
			<description>You need to edit the props file or change the properties from the command line because it ignores them if you pass them as parameters when installing JPA</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="388" opendate="2009-11-16 00:34:06" fixdate="2009-11-16 12:58:52" resolution="Fixed">
		<buginformation>
			<summary>Error when setting versionField="" on @RooEntity</summary>
			<description>There is this exception:
[timerFactory] NullPointerException at org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.getUpdateDocument(JspDocumentHelper.java:425)
whenever  I try to rule out the version field (according to the docs it should not be used anymore if set to empty string)</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="390" opendate="2009-11-16 23:19:33" fixdate="2009-11-17 15:37:56" resolution="Fixed">
		<buginformation>
			<summary>RooIntegrationTest.findAllMaximum attribute is ignored</summary>
			<description>I have some 500 - 1000 rows in a few tables, findAll test fails as the default for findAllMaximum is 250 but setting it to 1000 with @RooIntegrationTest(entity = Lab.class, findAllMaximum=1000) has no effect, the test still fails</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="376" opendate="2009-11-11 13:30:32" fixdate="2009-11-17 15:41:43" resolution="Duplicate">
		<buginformation>
			<summary>Not able to create field on an existing entity</summary>
			<description>Created an entity named Employee added some fields
Created another entity named EmpDetails and added some fields
Tried adding one more field to Employee but failed
Tried adding field to EmpDetails and succeeded
Not sure if I am using the rite versions (Java 1.6?)
Also not sure how to use backup
roo&amp;gt; backup
The filename, directory name, or volume label syntax is incorrect
roo&amp;gt; hint backup
Cannot find topic &amp;amp;apos;backup&amp;amp;apos;</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.backup.BackupOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">277</link>
		</links>
	</bug>
	<bug id="404" opendate="2009-11-19 01:17:15" fixdate="2009-11-19 01:19:11" resolution="Fixed">
		<buginformation>
			<summary>&amp;apos;addon install&amp;apos; should clean up after itself</summary>
			<description>Roo RC3 leaves addon zips in the temp dir after installing them: they should be removed if possible.</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.bootstrap.AddOnOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="394" opendate="2009-11-17 20:24:13" fixdate="2009-11-19 12:51:59" resolution="Duplicate">
		<buginformation>
			<summary>Roo should facilitate creation of Repository interface and classes as per DDD concepts for domain objects </summary>
			<description>Roo should facilitate creation of Repository interface and classes as per DDD concepts for domain objects and all the finder methods should be visible as part of that Repository interface. E.g. If product is a domain object created with Roo, then there should be another interface and its implementation created with name IProductRepository and ProductRepositoryImpl etc. This would make Roo in compliance to basic DDD concepts. Also, Roo should introduce Annotations for AggregateRoot, Entity etc. to be used more effectively for DDD based development</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManagerImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerProviderTest.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaLayerProviderTest.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceClassMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfManagedBeanMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityLayerProvider.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerProvider.java</file>
			<file type="D">org.springframework.roo.addon.entity.EntityLayerProviderTest.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerService.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaAnnotationValuesTest.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryLayerMethodTest.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.email.MailOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.shell.jline.osgi.JLineShellComponent.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdTypeDetailsProvidingMetadataItem.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.persistence.PersistenceMemberLocatorImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceCommands.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaLayerProviderTest.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.JavaTypePersistenceMetadataDetails.java</file>
			<file type="M">org.springframework.roo.classpath.details.ClassOrInterfaceTypeDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.addon.property.editor.EditorMetadata.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrJspMetadataListener.java</file>
			<file type="M">org.springframework.roo.classpath.persistence.PersistenceMemberLocator.java</file>
			<file type="M">org.springframework.roo.classpath.layers.MemberTypeAdditions.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceClassMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.property.editor.EditorMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceLocatorImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaLocatorImpl.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerCustomDataKeys.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataService.java</file>
			<file type="D">org.springframework.roo.project.layers.MemberTypeAdditions.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaLayerMethod.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerTypeMatcher.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerService.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerProvider.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.project.layers.Priority.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerType.java</file>
			<file type="D">org.springframework.roo.project.layers.CoreLayerProvider.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerAdapter.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerMethod.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerMethodTest.java</file>
			<file type="D">org.springframework.roo.project.layers.MemberTypeAdditionsTest.java</file>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.Identifier.java</file>
			<file type="D">org.springframework.roo.classpath.persistence.PersistenceIdentifierLocatorImpl.java</file>
			<file type="D">org.springframework.roo.classpath.persistence.PersistenceIdentifierLocator.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityLayerMethod.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityLayerMethodTest.java</file>
			<file type="M">org.springframework.roo.addon.serializable.SerializableMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryLayerMethodTest.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.RooService.java</file>
			<file type="D">org.springframework.roo.addon.layers.repository.RepositoryLayerMethod.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RooRepositoryJpa.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerUtils.java</file>
			<file type="M">org.springframework.roo.model.JavaSymbolName.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserConstructorMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.ArrayAttributeValue.java</file>
			<file type="M">org.springframework.roo.addon.plural.PluralMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserFieldMetadata.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserClassOrInterfaceTypeDetails.java</file>
			<file type="M">org.springframework.roo.classpath.PhysicalTypeDetails.java</file>
			<file type="M">org.springframework.roo.classpath.PhysicalTypeIdentifier.java</file>
			<file type="M">org.springframework.roo.classpath.PhysicalTypeIdentifierNamingUtils.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.DefaultAnnotationMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.AnnotationAttributeValue.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.AnnotationMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.java</file>
			<file type="M">org.springframework.roo.support.util.Pair.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaCommands.java</file>
			<file type="D">org.springframework.roo.project.layers.PersistenceMethod.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerServiceImplTest.java</file>
			<file type="M">org.springframework.roo.classpath.details.MemberHoldingTypeDetails.java</file>
			<file type="M">org.springframework.roo.classpath.details.DefaultItdTypeDetails.java</file>
			<file type="M">org.springframework.roo.classpath.details.DefaultClassOrInterfaceTypeDetails.java</file>
			<file type="D">org.springframework.roo.project.layers.Crud.java</file>
			<file type="D">org.springframework.roo.project.layers.CrudKey.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.DaoJpaLayerProvider.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.RooDaoJpa.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.DaoJpaMetadataProvider.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.DaoJpaMetadata.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.DaoJpaAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceOperationsImpl.java</file>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
			<file type="D">org.springframework.roo.layers.LayerService.java</file>
			<file type="D">org.springframework.roo.layers.Crud.java</file>
			<file type="D">org.springframework.roo.layers.LayerProvider.java</file>
			<file type="D">org.springframework.roo.layers.CrudKey.java</file>
			<file type="D">org.springframework.roo.layers.LayerServiceImpl.java</file>
			<file type="D">org.springframework.roo.layers.LayerUtils.java</file>
			<file type="D">org.springframework.roo.layers.MemberTypeAdditions.java</file>
			<file type="D">org.springframework.roo.layers.LayerAdapter.java</file>
			<file type="D">org.springframework.roo.layers.Priority.java</file>
			<file type="D">org.springframework.roo.layers.LayerType.java</file>
			<file type="D">org.springframework.roo.addon.layers.service.ServiceMetadataProvider.java</file>
			<file type="D">org.springframework.roo.addon.layers.service.ServiceMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.populator.AutoPopulationUtils.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaOperationsImpl.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.DaoJpaMetadata.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RepositoryJpaLayerProvider.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.RooDaoJpa.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.DaoJpaAnnotationValues.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.DaoJpaLayerProvider.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RepositoryJpaMetadataProvider.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RepositoryJpaMetadata.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RepositoryJpaAnnotationValues.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RooRepositoryJpa.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.DaoJpaMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">301</link>
		</links>
	</bug>
	<bug id="392" opendate="2009-11-17 14:15:49" fixdate="2009-11-19 12:56:55" resolution="Duplicate">
		<buginformation>
			<summary>perform command not working on Win 7</summary>
			<description>I was following the Roo documentation, specifically section 1.4, and when running the 3 perform commands I get no output.  I was assuming the "perform tests" command would generate something similiar to the output I get when running tests from Maven.
Here is the output:
roo&amp;gt; version
    ____  ____  ____
   / __ \/ __ \/ __ \
  / /_/ / / / / / / /
 / , _/ // / /_/ /
// ||___/___/    1.0.0.RC3 [rev 401]
roo&amp;gt; per
perform assembly    perform clean       perform command     perform eclipse
perform package     perform tests       persistence setup
roo&amp;gt; perform tests
roo&amp;gt; perform package
roo&amp;gt; perform eclipse
roo&amp;gt;</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">363</link>
		</links>
	</bug>
	<bug id="419" opendate="2009-11-22 09:40:34" fixdate="2009-11-22 09:42:24" resolution="Fixed">
		<buginformation>
			<summary>Controller ITDs do not adjust when a referenced type changes plural</summary>
			<description>Currently when an entity&amp;amp;apos;s plural name is changed the relevant controller ITD is updated correctly, however, the controller ITD also needs to be updated when a type referenced by that entity changes.</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="375" opendate="2009-11-11 08:17:53" fixdate="2009-11-22 09:43:33" resolution="Fixed">
		<buginformation>
			<summary>Custom path controller on the existing project (Reference bug ROO-364)</summary>
			<description>Bug ROO-364 has been fixed per my request as of build 415.  However the fix only worked for a brand new project.  I have an existing project with custom path controllers(data/...), and when I ran the latest roo build (419) on it, I get the error message:
[timerFactory] Illegal name &amp;amp;apos;data/site&amp;amp;apos; (illegal character)</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperations.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">364</link>
			<link type="Duplicate" description="is duplicated by">396</link>
			<link type="Duplicate" description="is duplicated by">422</link>
		</links>
	</bug>
	<bug id="396" opendate="2009-11-18 03:45:46" fixdate="2009-11-22 09:44:25" resolution="Fixed">
		<buginformation>
			<summary>Controller path doesn&amp;apos;t work</summary>
			<description>I&amp;amp;apos;m trying to create a controller scalfold into path: "admin/client" but I&amp;amp;apos;m receiving a error:
controller scaffold --name ~.model.ClientController --entity ~.model.Client --path  admin/client
error: Illegal name &amp;amp;apos;admin/client&amp;amp;apos; (illegal character)</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperations.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">375</link>
		</links>
	</bug>
	<bug id="420" opendate="2009-11-22 11:07:57" fixdate="2009-11-22 19:20:18" resolution="Fixed">
		<buginformation>
			<summary>Roo fails to start on windows with an installed addon</summary>
			<description>After a plugin is deployed Roo-Dev fails to start with the following error:
    java.lang.NoClassDefFoundError: org/springframework/roo/shell/CommandMarker
This is a problem with a classpath which is caused by the use of "-Djava.ext.dirs" system property in the roo-dev.bat to load addons. 
A way to fix this issue is to load addons on the classpath using Java 6 classpath wildwards:
  rem Append addons and jre\lib\ext to the classpath, (Java 6+ is required)
  set EXT_DIRS=%USERPROFILE%\roo-dev\work*;%JAVA_HOME%\jre\lib\ext*
  set ROO_CP=%ROO_CP%;%EXT_DIRS%
Then just remove the use of "-Djava.ext.dirs"
  java -Djline.nobell=true -DdevelopmentMode=true %ROO_OPTS% -Droo.home="%USERPROFILE%\roo-dev" -cp %ROO_CP% org.springframework.roo.bootstrap.Bootstrap "classpath:/roo-bootstrap.xml" %*
The only downside to this solution is Java 6+ dependency as it utilizes classpath wildcards.</description>
			<version>1.0.0.RC3</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.bootstrap.AddOnCommands.java</file>
			<file type="M">org.springframework.roo.shell.ExitShellRequest.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="is depended on by">357</link>
		</links>
	</bug>
	<bug id="357" opendate="2009-11-08 08:28:44" fixdate="2009-11-22 19:24:22" resolution="Fixed">
		<buginformation>
			<summary>workdir jars not removed on addon uninstall on Windows</summary>
			<description>Addon jars remain in the work dir after an addon uninstall on Windows. AddOnOperations.cleanUp() uses File.deleteOnExit() for the deletion: my guess is that these files are still locked when the JVM tries to remove them because these jars are listed in java.ext.dirs, and Windows supports locking files that are in use. 
The only solution I can come up with is that Roo should create a simple text file containing the files to delete and would leave it up to the roo.bat script to delete these files before starting the JVM (could even be done by another Java program started by the script instead of a &amp;amp;apos;del&amp;amp;apos; command, as long as that JVM command doesn&amp;amp;apos;t list the work dir in the java.ext.dirs). 
Every Java-based solution running just in the Roo JVM will suffer from the fact that the jars are locked already by the same JVM that tries to remove them, so this takes more than a simple code patch; a 2-step process in the .bat file seems like the best bet to me.</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.bootstrap.AddOnCommands.java</file>
			<file type="M">org.springframework.roo.shell.ExitShellRequest.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">420</link>
		</links>
	</bug>
	<bug id="422" opendate="2009-11-24 09:33:44" fixdate="2009-11-24 10:55:10" resolution="Fixed">
		<buginformation>
			<summary>scaffold does not allow "/" in "path" option</summary>
			<description>For a project contains hundreds of pages, it&amp;amp;apos;ll be better if ROO allow more than one level for path of views.
e.g. I want to put all reference data maintenance pages under /reference/[resource_name]/[pages]
It works in RC2, though I notice there&amp;amp;apos;s a minor bug in generated menu.jspx which uses "/" in element id.</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperations.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">375</link>
		</links>
	</bug>
	<bug id="397" opendate="2009-11-18 07:02:26" fixdate="2009-11-24 11:44:59" resolution="Fixed">
		<buginformation>
			<summary>Tiles not set up and javax.validation not added to pom when just adding simple controller</summary>
			<description>When I create a new project with roo and then do something like this:
controller class --name ~web.WelcomeController
I get the Spring-MVC infrastructure set up, but the webmvc-config.xml now refers to the non-existing Tiles configuration (/WEB-INF/layouts/layouts.xml): that layouts directory is not created. BTW, it looks like the pom is properly updated to contain all the Tiles jars. 
This means the application will fail when accessed. 
Also, while trying to reproduce this I encountered another runtime error when running an app built like this:
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Error loading class [org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] for bean with name &amp;amp;apos;validator&amp;amp;apos; defined in ServletContext resource [/WEB-INF/config/webmvc-config.xml]: problem with class file or dependent class; nested exception is java.lang.NoClassDefFoundError: javax/validation/ValidatorFactory
That should&amp;amp;apos;ve been added to the pom when adding the controller, but apparently wasn&amp;amp;apos;t.</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.TilesOperations.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspOperations.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.menu.MenuOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">385</link>
			<link type="Related" description="is related to">269</link>
		</links>
	</bug>
	<bug id="406" opendate="2009-11-19 04:15:45" fixdate="2009-11-27 20:14:37" resolution="Fixed">
		<buginformation>
			<summary>Little bug with message.properties with scaffold</summary>
			<description>If a have a entity B that has a @manyToOne to entity A and generate a scaffold to B and A and after that I change the plural of A, roo doens&amp;amp;apos;t update all jsp references. So, to resolve this bug I need to have 2 entries in my message.properties:

"label.old_name_of_A= ..." and "label.new_name_of_A=..."

I know, it is a very small bug.</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.menu.MenuOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="447" opendate="2009-12-01 11:23:48" fixdate="2009-12-01 11:26:05" resolution="Fixed">
		<buginformation>
			<summary>Form for finders with enum type are not generated correctly</summary>
			<description>Form for finders with enum types are not generated correctly</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="446" opendate="2009-12-01 10:55:22" fixdate="2009-12-04 16:18:06" resolution="Fixed">
		<buginformation>
			<summary>Uppercase domain properties are not used correctly in views</summary>
			<description>I have a domain object called country_master with the fields defined as (excluding ID field etc.): 
    @NotNull
    @Column(name = "COUNTRY_NAME")
    private String name;
    @NotNull
    @Column(name = "COUNTRY_ISO_CODE")
    private String ISOCODE;
When I generate the view using ROO scaffolding, the generated view viz. show.jspx has the ISOCODE field generated as: 
&amp;lt;div class="box" id="_iSOCODE"&amp;gt;$
{country.iSOCODE}
&amp;lt;/div&amp;gt; 
instead of 
&amp;lt;div class="box" id="_iSOCODE"&amp;gt;$
{country.ISOCODE}
&amp;lt;/div&amp;gt;
This field&amp;amp;apos;s usage was incorrectly generated in all the view related JSPs such as create.jspx, list.jspx etc.</description>
			<version>1.0.0.RC3</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.DojoUtils.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspUtils.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">6491</link>
			<link type="Related" description="is related to">303</link>
		</links>
	</bug>
	<bug id="451" opendate="2009-12-07 07:47:51" fixdate="2009-12-07 13:55:38" resolution="Fixed">
		<buginformation>
			<summary>Roo auto-generated finder has sql error when fiinding based on two fields</summary>
			<description>The Roo-generated finder for my researcher findResearchersBySkillsAndInterests is missing an AND between the interests and the skills
org.hibernate.hql.ast.QuerySyntaxException: unexpected token: : near line 1, column 123 [SELECT Researcher FROM edu.drexel.goodwin.domain.Researcher AS researcher WHERE :skills_item0 MEMBER OF researcher.skills :interests_item0 MEMBER OF researcher.interests]</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.finder.FinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServicesImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="455" opendate="2009-12-09 12:46:03" fixdate="2009-12-09 12:47:29" resolution="Fixed">
		<buginformation>
			<summary>JavaParserMutableClassOrInterfaceTypeDetails.createType(..) fails to create types with correct "implements" references</summary>
			<description>The JavaParserMutableClassOrInterfaceTypeDetails.createType(..) can be used to create new types. The arguments passed to the method include the list of types the new type should extend, and the list of types the new type should implement. Line 406 of JavaParserMutableClassOrInterfaceTypeDetails appears to be incorrectly handling the types to be implemented.</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.java</file>
		</fixedFiles>
	</bug>
	<bug id="459" opendate="2009-12-14 02:40:32" fixdate="2009-12-14 07:53:41" resolution="Fixed">
		<buginformation>
			<summary>Hibernate syntaxt exception on finder method for boolean field</summary>
			<description>I get a hibernate exception when searching for a boolean value.
org.hibernate.hql.ast.QuerySyntaxException: unexpected token: : near line 1, column 102 [SELECT Contact FROM ...domain.Contact AS contact WHERE contact.callback NOT :callback]
the field definition is:






    @NotNull




    private Boolean callback;






the generated finder is:






    public static Query Contact.findContactsByCallbackNot(Boolean callback) {    




        if (callback == null) throw new IllegalArgumentException("The callback argument is required");        




        EntityManager em = Contact.entityManager();        




        Query q = em.createQuery("SELECT Contact FROM Contact AS contact WHERE contact.callback NOT :callback");        




        q.setParameter("callback", callback);        




        return q;        




    }    






As there is nothing special in my class I think this affects every Boolean fields so I ommited the complete script as this should be reproducable.</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServicesImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="462" opendate="2009-12-15 02:44:12" fixdate="2009-12-15 14:13:14" resolution="Fixed">
		<buginformation>
			<summary>Malformed Query in Finder - Missing AND Token</summary>
			<description>In some cases And tokens are ignored.
If the first query parameter is an Equals query, isFieldApplied will be set to true upon processing the Equals token. When a subsequent And token is processed, the AND keyword is not appended.
This should occur with other tokens than Equals, but I have not tested them (NotEquals, LessThan, etc.).</description>
			<version>1.0.0.RC4</version>
			<fixedVersion>1.0.0.RC4</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServicesImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="467" opendate="2009-12-17 05:00:46" fixdate="2009-12-17 07:51:51" resolution="Fixed">
		<buginformation>
			<summary>Problem with scaffolded JSP when using RooEntity + identifierField + ManyToOne</summary>
			<description>I&amp;amp;apos;m getting a NotReadablePropertyException in the scaffolded &amp;amp;apos;create&amp;amp;apos; and &amp;amp;apos;update&amp;amp;apos; JSPs when using RooEntity + identifierField + ManyToOne.
I&amp;amp;apos;ve created two entities: Director and Movie. 1 Director has N Movies, and 1 Movie has 1 Director.
The Movie has a non default identifierField, as shown below.






@Entity




@RooJavaBean




@RooToString




@RooEntity




public class Director {









    private String name;









    @OneToMany(cascade = CascadeType.ALL, mappedBy = "director")




    private Set&amp;lt;Movie&amp;gt; movies = new HashSet&amp;lt;Movie&amp;gt;();




}












@Entity




@RooJavaBean




@RooToString




@RooEntity(identifierField="codMovie")




public class Movie {









    private String title;









    @Max(10L)




    private Long rating;









    @ManyToOne(targetEntity = Director.class)




    @JoinColumn




    private Director director;




}






In the &amp;amp;apos;create&amp;amp;apos; and &amp;amp;apos;update&amp;amp;apos; JSPs for the Movie entity, the combo box for selecting the Director is using the id from Movie, as shown below:






&amp;lt;form:select cssStyle="width:250px" id="_director_id" path="director"&amp;gt;




  &amp;lt;form:options itemValue="codMovie" items="${directors}"/&amp;gt;




&amp;lt;/form:select&amp;gt;






I had a quick look in the JspDocumentHelper source code, and I think that the problem is on the  following line of the createFieldsForCreateAndUpdate method.






ifElement.appendChild(JspUtils.getSelectBox(document, field.getFieldName(), plural, entityMetadata.getIdentifierField()));






It&amp;amp;apos;s using the strong entityMetadata strong variable to get the identifier field, but that is the Movie. It should use the strong typeEntityMetadata strong, that is actually the Director.
Is my analysis correct?</description>
			<version>1.0.0.RC4</version>
			<fixedVersion>1.0.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="475" opendate="2009-12-22 01:54:09" fixdate="2009-12-22 06:37:06" resolution="Fixed">
		<buginformation>
			<summary>No postgres driver dependency when choosing postgres as database</summary>
			<description>I tried following along with the wedding project using Roo RC4 and decided to switch the database to postgres (using 8.4 right now). When I get to the perform tests step things fail:
Running com.wedding.domain.RsvpIntegrationTest
Cannot load JDBC driver class &amp;amp;apos;org.postgresql.Driver&amp;amp;apos;
java.lang.ClassNotFoundException: org.postgresql.Driver
This:
dependency add --artifactId postgresql --groupId postgresql --version 8.4-701.jdbc4
fixes the problem, I would have expected this to work ootb.</description>
			<version>1.0.0.RC4</version>
			<fixedVersion>1.0.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JdbcDatabase.java</file>
		</fixedFiles>
	</bug>
	<bug id="476" opendate="2009-12-22 08:02:26" fixdate="2009-12-22 10:45:21" resolution="Fixed">
		<buginformation>
			<summary>Scaffold broken if we remove client-side validation on entities with more than one word (e.g. FooBar)</summary>
			<description>
entity --class ~.domain.FooBar
field date --fieldName today --type java.util.Date --class ~.domain.FooBar
controller scaffold --class ~.web.FooBarController
After remove scripts from create form , and submit with invalid date pattern then you would see below exceptions:

java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name &amp;amp;apos;foobar&amp;amp;apos; available as request attribute
	at org.springframework.web.servlet.support.BindStatus.&amp;lt;init&amp;gt;(BindStatus.java:141)
	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:175)
	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:195)
	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getName(AbstractDataBoundFormElementTag.java:161)
	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.writeDefaultAttributes(AbstractDataBoundFormElementTag.java:124)
	at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.writeDefaultAttributes(AbstractHtmlElementTag.java:409)
	at org.springframework.web.servlet.tags.form.InputTag.writeTagContent(InputTag.java:140)
	at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:91)
	at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:78)
...
IO Error executing tag: JSPException including path &amp;amp;apos;/WEB-INF/views/foobar/create.jspx&amp;amp;apos;.
org.apache.tiles.util.TilesIOException: JSPException including path &amp;amp;apos;/WEB-INF/views/foobar/create.jspx&amp;amp;apos;.
	at org.apache.tiles.servlet.context.ServletUtil.wrapServletException(ServletUtil.java:232)
	at org.apache.tiles.jsp.context.JspTilesRequestContext.include(JspTilesRequestContext.java:105)
	at org.apache.tiles.jsp.context.JspTilesRequestContext.dispatch(JspTilesRequestContext.java:96)
	at org.apache.tiles.renderer.impl.UntypedAttributeRenderer.write(UntypedAttributeRenderer.java:61)
	at org.apache.tiles.renderer.impl.AbstractBaseAttributeRenderer.render(AbstractBaseAttributeRenderer.java:103)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:669)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:337)
	at org.apache.tiles.jsp.taglib.InsertAttributeTag.render(InsertAttributeTag.java:234)
	at org.apache.tiles.jsp.taglib.InsertAttributeTag.render(InsertAttributeTag.java:211)
	at org.apache.tiles.jsp.taglib.RenderTag.doEndTag(RenderTag.java:220)
....
Note: Create form will work as expected after change modelAttribute in jsp and controller to &amp;amp;apos;fooBar&amp;amp;apos;(not foobar).</description>
			<version>1.0.0.RC4</version>
			<fixedVersion>1.0.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="483" opendate="2009-12-25 20:24:31" fixdate="2009-12-27 12:47:34" resolution="Fixed">
		<buginformation>
			<summary>Comment handling in scripts</summary>
			<description>When running scripts, Roo does not recognise a comment without a space after it, e.g.
// Comment
works, but
//Comment
does not.</description>
			<version>1.0.0.RC4</version>
			<fixedVersion>1.0.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.internal.AbstractShell.java</file>
		</fixedFiles>
	</bug>
	<bug id="501" opendate="2009-12-30 23:45:28" fixdate="2010-01-12 10:29:25" resolution="Fixed">
		<buginformation>
			<summary>CLONE -Persistence setup options not taking effect</summary>
			<description>seems these options do not have the correct effect.
When I do:
persistence setup --provider HIBERNATE --database MYSQL --databaseName roofeed --userName root
Managed SRC_MAIN_RESOURCES/META-INF/persistence.xml
Managed SRC_MAIN_RESOURCES/META-INF/spring/database.properties
please enter your database details in src/main/resources/database.properties
Managed SRC_MAIN_RESOURCES/META-INF/spring/applicationContext.xml
I end up with this database.properties:
#Updated at Thu Dec 10 17:16:33 CET 2009
#Thu Dec 10 17:16:33 CET 2009
database.password=
database.url=jdbc\:mysql\://localhost\:3306
database.username=
database.driverClassName=com.mysql.jdbc.Driver</description>
			<version>1.0.0.RC3</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.internal.AbstractShell.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">517</link>
		</links>
	</bug>
	<bug id="512" opendate="2010-01-03 10:51:48" fixdate="2010-01-12 10:31:52" resolution="Fixed">
		<buginformation>
			<summary>ROO managed applications are susceptible to XSS attacks</summary>
			<description>Generate an application using the following commands:
project --topLevelPackage com.bloudraak.sample.xss
persistence setup --provider HIBERNATE --database MYSQL 
entity --class ~.models.Item --table items
field string --fieldName title 
field string --fieldName body --sizeMax 4096
controller all --package ~.controllers
exit
Start the application by executing "mvn tomcat:run".  Create a new "Item" and enter "&amp;lt;script&amp;gt;alert(&amp;amp;apos;Hello Dude&amp;amp;apos;)&amp;lt;/script&amp;gt;" in the description field and save.  Notice a dialog appearing that says "Hello Dude".  Also note that when listing all items, the website is "broken". 
Also note that I can "break" the application by entering an HTML comment, such as "&amp;lt;!--". 
You can find a few things to check for using this cheat sheet   I would strongly suggest that ROO generates tests to cover these cases so that a developer knows when he breaks the security.  
</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="534" opendate="2010-01-13 08:20:57" fixdate="2010-01-13 20:39:25" resolution="Duplicate">
		<buginformation>
			<summary>database URL being truncated</summary>
			<description>When creating a project using the following:
persistence setup --provider HIBERNATE --database MYSQL
database properties set --key database.url --value jdbc:mysql://localhost:3306/mydatabase
database properties set --key database.username --value myuser
database properties set --key database.password --value mypassword
The database.properties file shows:
#Updated at Thu Jan 14 11:05:58 NZDT 2010
#Thu Jan 14 11:05:58 NZDT 2010
database.password=mypassword
database.url=jdbc\:mysql\         &amp;lt;&amp;lt; THIS IS GETTING TRUNCATED 
database.username=myuser
database.driverClassName=com.mysql.jdbc.Driver
It is easily fixed my manually updating the database.url to &amp;amp;apos;database.url=jdbc\:mysql\://localhost\:3306/mydatabase&amp;amp;apos;.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.internal.AbstractShell.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">517</link>
		</links>
	</bug>
	<bug id="533" opendate="2010-01-12 21:03:15" fixdate="2010-01-14 13:28:45" resolution="Fixed">
		<buginformation>
			<summary>NullPointerException when setting versionField="" on @RooEntity</summary>
			<description>I got this message:






    ____  ____  ____  




   / __ \/ __ \/ __ \ 




  / /_/ / / / / / / / 




 / _, _/ /_/ / /_/ /  




/_/ |_|\____/\____/    1.0.0.RELEASE [rev 564]














Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.




Managed SRC_MAIN_JAVA/es/gva/cit/testjpa2/domain/Entidad1_Roo_ToString.aj




Undo manage SRC_MAIN_JAVA/es/gva/cit/testjpa2/domain/Entidad1_Roo_ToString.aj




NullPointerException at org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.getUpdateDocument(JspDocumentHelper.java:392)




roo&amp;gt; 











This has happened when I set @RooEntity(versionfield="".
I&amp;amp;apos;ve looked at source and this can be a possible patch:





Eclipse Workspace Patch 1.0
#P org.springframework.roo.addon.web.mvc.jsp
Index: src/main/java/org/springframework/roo/addon/mvc/jsp/JspDocumentHelper.java
===================================================================


src/main/java/org/springframework/roo/addon/mvc/jsp/JspDocumentHelper.java	(revision 570)
+++ src/main/java/org/springframework/roo/addon/mvc/jsp/JspDocumentHelper.java	(working copy)
@@ -389,7 +389,6 @@
 		Document document = builder.newDocument();		





 		String idFieldName = Introspector.decapitalize(StringUtils.capitalize(entityMetadata.getIdentifierField().getFieldName().getSymbolName()));

String versionFieldName = Introspector.decapitalize(StringUtils.capitalize(entityMetadata.getVersionField().getFieldName().getSymbolName()));

 		//add document namespaces
 		Element div = new XmlElementBuilder("div", document)
@@ -442,6 +441,7 @@
 		formHiddenId.setAttribute("id", "_" + idFieldName + "_id");
 		formElement.appendChild(formHiddenId);
 		if (null != entityMetadata.getVersionField()) {
+			String versionFieldName = Introspector.decapitalize(StringUtils.capitalize(entityMetadata.getVersionField().getFieldName().getSymbolName()));
 			Element formHiddenVersion = document.createElement("form:hidden");
 			formHiddenVersion.setAttribute("path", versionFieldName);
 			formHiddenVersion.setAttribute("id", "_" + versionFieldName + "_id");</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="526" opendate="2010-01-08 08:07:01" fixdate="2010-01-14 13:59:45" resolution="Fixed">
		<buginformation>
			<summary>Pluralization seems to not work for Enum types</summary>
			<description>I am getting a "Could not determine the plural name" error in the final line of the following script.
// start of script
project --topLevelPackage com.myco.testapp --projectName testapp
persistence setup --provider HIBERNATE --database HYPERSONIC_PERSISTENT
enum type --class ~.reference.AuditEventType
enum constant --name SomeEventType
enum constant --name AnotherEventType
entity --class ~.base.AuditEvent
field date --fieldName ts --notNull --class ~.base.AuditEvent --type java.util.Date
field ref --fieldName eventType --notNull --type ~.reference.AuditEventType
field string --fieldName description --notNull
controller all --package ~.web
// end of script
The exact error is
Could not determine the plural name for the &amp;amp;apos;eventType&amp;amp;apos; field in AuditEvent
So, I added added a @RooPlural("eventTypes") above the eventType field in the AuditEvent class, but continue to get the same message.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="541" opendate="2010-01-18 21:32:14" fixdate="2010-01-19 01:41:58" resolution="Duplicate">
		<buginformation>
			<summary>Roo running jdk 1.6 update 18 can&amp;apos;t display messages of green color.</summary>
			<description>Roo running jdk 1.6 update 18 can&amp;amp;apos;t display messages of green color.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.email.MailOperations.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultProcessManager.java</file>
			<file type="M">org.springframework.roo.file.undo.internal.DeleteDirectory.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperations.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperations.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderOperations.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
			<file type="M">org.springframework.roo.addon.jms.JmsOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperations.java</file>
			<file type="M">org.springframework.roo.addon.backup.BackupOperations.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenOperations.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserClassMetadata.java</file>
			<file type="M">org.springframework.roo.bootstrap.Bootstrap.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
			<file type="M">org.springframework.roo.file.monitor.event.LoggingFileEventListener.java</file>
			<file type="M">org.springframework.roo.file.undo.internal.UpdateFile.java</file>
			<file type="M">org.springframework.roo.bootstrap.AddOnOperations.java</file>
			<file type="M">org.springframework.roo.support.logging.HandlerUtils.java</file>
			<file type="M">org.springframework.roo.file.monitor.polling.PollingFileMonitorService.java</file>
			<file type="M">org.springframework.roo.file.undo.internal.CreateFile.java</file>
			<file type="M">org.springframework.roo.file.undo.internal.CreateDirectory.java</file>
			<file type="M">org.springframework.roo.shell.internal.AbstractShell.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperations.java</file>
			<file type="M">org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.java</file>
			<file type="M">org.springframework.roo.file.undo.internal.DeleteFile.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">539</link>
		</links>
	</bug>
	<bug id="535" opendate="2010-01-13 20:11:05" fixdate="2010-01-19 09:44:09" resolution="Fixed">
		<buginformation>
			<summary>Compiler error on _Roo_Entity.aj  when identifierType is a primitive</summary>
			<description>I&amp;amp;apos;ve tried to use a primitive type like identifier. This is an example:






E1.java






@Entity




@RooJavaBean




@RooToString




@RooEntity(identifierType=int.class)




public class E1{














    @Size(max = 30)




    private String nombre;









}






Roo generates the ".aj" files with no problems. But when I&amp;amp;apos;ve tried to compile with a &amp;amp;apos;perform package&amp;amp;apos; command Maven says:











[INFO] [aspectj:compile {execution: default}]




[ERROR] The operator == is undefined for the argument type(s) int, null




[WARNING] advice defined in org.springframework.orm.jpa.aspectj.JpaExceptionTranslatorAspect has not been applied [Xlint:adviceDidNotMatch]




[WARNING] advice defined in org.springframework.mock.staticmock.AnnotationDrivenStaticEntityMockingControl has not been applied [Xlint:adviceDidNotMatch]




[WARNING] advice defined in org.springframework.mock.staticmock.AbstractMethodMockingControl has not been applied [Xlint:adviceDidNotMatch]




[INFO] ------------------------------------------------------------------------




[ERROR] BUILD ERROR




[INFO] ------------------------------------------------------------------------




[INFO] Compiler errors : 




error at if (id == null) throw new IllegalArgumentException("An identifier is required to retrieve an instance of E1");        




    ^




/home/jmvivo/projects/test-roo/test_jpa3/src/main/java/es/gva/cit/testjpa3/domain/E1_Roo_Entity.aj:75:0::0 The operator == is undefined for the argument type(s) int, null










</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">472</link>
		</links>
	</bug>
	<bug id="548" opendate="2010-01-20 14:37:43" fixdate="2010-01-21 02:48:14" resolution="Fixed">
		<buginformation>
			<summary>Plugins in pom.xml that are missing a groupId result in an error message</summary>
			<description>I added this to my pom in order to encode my sources with UTF-8:
&amp;lt;plugin&amp;gt;
   &amp;lt;artifactId&amp;gt;maven-resources-plugin&amp;lt;/artifactId&amp;gt;
   &amp;lt;version&amp;gt;2.2&amp;lt;/version&amp;gt;
   &amp;lt;configuration&amp;gt;
      &amp;lt;encoding&amp;gt;UTF-8&amp;lt;/encoding&amp;gt;
   &amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;
When I start up Roo, it gives me this error:
Depenency XML format not supported or is missing a mandatory node (&amp;amp;apos;[plugin: null]&amp;amp;apos;)</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.Dependency.java</file>
		</fixedFiles>
	</bug>
	<bug id="553" opendate="2010-01-21 04:32:40" fixdate="2010-01-21 05:53:12" resolution="Duplicate">
		<buginformation>
			<summary>create.jspx and update.jspx voilates DRY</summary>
			<description>I&amp;amp;apos;ve compared the generated files create.jspx and update.jspx for the input mask of an entity. They are nearly identical and this voilates for my understanding the principle of DRY. In particular the tags for the input fields are all the same. So I suggest to use a common file form.jspx and include this in both files like this: &amp;lt;jsp:include page="form.jspx" /&amp;gt;</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperations.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspOperations.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.menu.MenuOperations.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspRoundTripper.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.DojoUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspUtils.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperations.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.TilesOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperations.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspMenuHelper.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">8</link>
		</links>
	</bug>
	<bug id="539" opendate="2010-01-16 16:48:39" fixdate="2010-01-22 12:45:29" resolution="Fixed">
		<buginformation>
			<summary>Console does not produce output on jdk 1.6.0_18</summary>
			<description>Console does not produce output when running on Sun JDK 1.6.0_18.
I had to re-install Sun JDK 1.6.0_17 in order to get it working.
Note that a similar problem was reported in http://forum.springsource.org/showthread.php?t=80983 , except I was using Sun JDK.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.email.MailOperations.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultProcessManager.java</file>
			<file type="M">org.springframework.roo.file.undo.internal.DeleteDirectory.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperations.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperations.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderOperations.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
			<file type="M">org.springframework.roo.addon.jms.JmsOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperations.java</file>
			<file type="M">org.springframework.roo.addon.backup.BackupOperations.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenOperations.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserClassMetadata.java</file>
			<file type="M">org.springframework.roo.bootstrap.Bootstrap.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
			<file type="M">org.springframework.roo.file.monitor.event.LoggingFileEventListener.java</file>
			<file type="M">org.springframework.roo.file.undo.internal.UpdateFile.java</file>
			<file type="M">org.springframework.roo.bootstrap.AddOnOperations.java</file>
			<file type="M">org.springframework.roo.support.logging.HandlerUtils.java</file>
			<file type="M">org.springframework.roo.file.monitor.polling.PollingFileMonitorService.java</file>
			<file type="M">org.springframework.roo.file.undo.internal.CreateFile.java</file>
			<file type="M">org.springframework.roo.file.undo.internal.CreateDirectory.java</file>
			<file type="M">org.springframework.roo.shell.internal.AbstractShell.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperations.java</file>
			<file type="M">org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.java</file>
			<file type="M">org.springframework.roo.file.undo.internal.DeleteFile.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">541</link>
		</links>
	</bug>
	<bug id="536" opendate="2010-01-13 23:04:42" fixdate="2010-01-22 13:31:50" resolution="Fixed">
		<buginformation>
			<summary>Generated entity unit tests don&amp;apos;t work correctly with numerical data types smaller than int</summary>
			<description>In generated unit test *DataOnDemand_Roo_DataOnDemand aspect and its method DataOnDemand.getNewTransientVideoPart(int index) the object&amp;amp;apos;s field is not set properly if it is of a numerical data type smaller than int. Than the project does not compile.
Example:
My entity:

@Entity
@RooJavaBean
@RooToString
@RooEntity
public class VideoPart {
    private short partId;
}
and generated test for it:

public VideoPart VideoPartDataOnDemand.getNewTransientVideoPart(int index) {    
        com.moteve.domain.VideoPart obj = new com.moteve.domain.VideoPart();        
        obj.setCaptureTime(new java.util.Date());        
        obj.setPartId(1); 
. . .
here 1 (int) can&amp;amp;apos;t be converted to a short without casting it explicitly.
For B/byte it&amp;amp;apos;s also similar.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1176</link>
		</links>
	</bug>
	<bug id="508" opendate="2010-01-02 05:31:11" fixdate="2010-01-22 14:04:00" resolution="Fixed">
		<buginformation>
			<summary>Creating an entity called &amp;apos;Entity&amp;apos; results in compile error</summary>
			<description>Creating an entity called Entity in some package results in a Java file that can&amp;amp;apos;t be compiled b/o the import of the javax.persistence.Entity annotation. Roo should either not allow this class name for entities, or it should fully qualify the @Entity annotation in this case instead of using an import.
Compile error:






[INFO] [aspectj:compile {execution: default}]




[ERROR] The import javax.persistence.Entity conflicts with a type defined in the same file




[ERROR] Type mismatch: cannot convert from Entity to Annotation




[WARNING] advice defined in org.springframework.orm.jpa.aspectj.JpaExceptionTranslatorAspect has not been applied [Xlint:adviceDidNotMatch]




[WARNING] advice defined in org.springframework.mock.staticmock.AnnotationDrivenStaticEntityMockingControl has not been applied [Xlint:adviceDidNotMatch]




[WARNING] advice defined in org.springframework.mock.staticmock.AbstractMethodMockingControl has not been applied [Xlint:adviceDidNotMatch]




[WARNING] advice defined in org.springframework.mock.staticmock.AbstractMethodMockingControl has not been applied [Xlint:adviceDidNotMatch]




[INFO] ------------------------------------------------------------------------




[ERROR] BUILD ERROR




[INFO] ------------------------------------------------------------------------




[INFO] Compiler errors :




error at import javax.persistence.Entity;




       ^^^^^^^^^^^^^^^^^^^^^^^




C:\java\roo-projects\GA\src\main\java\com\springsource\rootest\Entity.java:3:0::0 The import javax.persistence.Entity conflicts with a type defined in the same file




error at @Entity




 ^^^^^




C:\java\roo-projects\GA\src\main\java\com\springsource\rootest\Entity.java:9:0::0 Type mismatch: cannot convert from Entity to Annotation





</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserFieldMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserUtils.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">576</link>
		</links>
	</bug>
	<bug id="517" opendate="2010-01-05 03:44:21" fixdate="2010-01-22 14:09:59" resolution="Fixed">
		<buginformation>
			<summary>Shell treatment of // as an inline comment marker is too aggressive, breaking valid options like &amp;apos;http://abcd&amp;apos;</summary>
			<description>It seems like in 1.0.0.RELEASE the roo shell ignores any string input after //.
For example, when we try to install a new roo addon
addon install --url http://www.xyz.com/aaa.zip
We get following error message
Add-ons URLs must end with .zip
If we try something like
addon install --url http:aaa.zip//www.xyz.com/aaa.zip
We will get following error message
Downloading http:aaa.zip
NullPointerException at sun.net.www.ParseUtil.toURI(Unknown Source).
It happens on both Windows box and Linux box.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.internal.AbstractShell.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">501</link>
			<link type="Duplicate" description="is duplicated by">534</link>
			<link type="Related" description="is related to">1116</link>
		</links>
	</bug>
	<bug id="559" opendate="2010-01-27 08:41:45" fixdate="2010-01-27 09:06:22" resolution="Fixed">
		<buginformation>
			<summary>Doco error: incorrect explanation of sizeMax and sizeMin options for "field set" command</summary>
			<description>The reference docs for the "field set" command (http://static.springsource.org/spring-roo/reference/html/command-index.html#command-index-field-set) contain these argument descriptions:
--sizeMin The minimum string length; no default value
--sizeMax The maximum string length; no default value 
As agreed by Stefan in the forum and as documented here for the @Size annotation:
http://java.sun.com/javaee/6/docs/api/index.html?javax/validation/constraints/Size.html
... these arguments actually relate to the minimum and maximum size of the set (i.e. the number of elements it contains), not the length of any strings.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="562" opendate="2010-01-27 11:59:04" fixdate="2010-01-27 12:37:18" resolution="Fixed">
		<buginformation>
			<summary>DataOnDemand doesn&amp;apos;t work with non-null self-references</summary>
			<description>When I run this script:






project --topLevelPackage foo




persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY




entity --class ~.Person --testAutomatically




field reference --fieldName lastChangedBy --type ~.Person --notNull





I get this error:






project --topLevelPackage foo




Created G:\workspace-sts\asset-manager\pom.xml




Created SRC_MAIN_JAVA




Created SRC_MAIN_RESOURCES




Created SRC_TEST_JAVA




Created SRC_TEST_RESOURCES




Created SRC_MAIN_WEBAPP




Created SRC_MAIN_RESOURCES\META-INF\spring




Created SRC_MAIN_RESOURCES\META-INF\spring\applicationContext.xml




Created SRC_MAIN_RESOURCES\META-INF\spring\log4j.properties




persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY




Created SRC_MAIN_RESOURCES\META-INF\persistence.xml




Created SRC_MAIN_RESOURCES\META-INF\spring\database.properties




Managed SRC_MAIN_RESOURCES\META-INF\spring\applicationContext.xml




Managed ROOT\pom.xml




entity --class ~.Person --testAutomatically




Created SRC_MAIN_JAVA\foo




Created SRC_MAIN_JAVA\foo\Person.java




Created SRC_TEST_JAVA\foo




Created SRC_TEST_JAVA\foo\PersonDataOnDemand.java




Created SRC_TEST_JAVA\foo\PersonIntegrationTest.java




Created SRC_MAIN_JAVA\foo\Person_Roo_Entity.aj




Created SRC_MAIN_JAVA\foo\Person_Roo_ToString.aj




Created SRC_MAIN_JAVA\foo\Person_Roo_Configurable.aj




Created SRC_TEST_JAVA\foo\PersonDataOnDemand_Roo_Configurable.aj




Created SRC_TEST_JAVA\foo\PersonDataOnDemand_Roo_DataOnDemand.aj




Created SRC_TEST_JAVA\foo\PersonIntegrationTest_Roo_Configurable.aj




Created SRC_TEST_JAVA\foo\PersonIntegrationTest_Roo_IntegrationTest.aj




field reference --fieldName lastChangedBy --type ~.Person --notNull




Managed SRC_MAIN_JAVA\foo\Person.java




Created SRC_MAIN_JAVA\foo\Person_Roo_JavaBean.aj




Managed SRC_MAIN_JAVA\foo\Person_Roo_ToString.aj




Undo manage SRC_MAIN_JAVA\foo\Person_Roo_ToString.aj




Undo create SRC_MAIN_JAVA\foo\Person_Roo_JavaBean.aj




Undo manage SRC_MAIN_JAVA\foo\Person.java




Upstream dependency cannot be the same as the downstream dependency (&amp;amp;apos;MID:org.springframework.roo.addon.dod.DataOnDemandMetadata#SRC_TEST_JAVA?foo.PersonDataOnDemand&amp;amp;apos;)




Script execution aborted






If I remove either the --testAutomatically or the --notNull, the script works fine.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="540" opendate="2010-01-18 17:48:44" fixdate="2010-01-27 14:21:00" resolution="Fixed">
		<buginformation>
			<summary>create.jspx and update.jspx missing fields from entity</summary>
			<description>When creating an entity with a ManyToOne relationship, the create.jspx and update.jspx for the entity at the One end of the relationship does not include a UI component for the Many end. This is fine, but sometimes when an entity includes this type of relationship then other fields (for example, of type string) are not generated.
There appears to be a bug in:
https://anonsvn.springframework.org/svn/spring-roo/release-1.0.0.RELEASE/addon-web-mvc-jsp/src/main/java/org/springframework/roo/addon/mvc/jsp/JspDocumentHelper.java
In the createFieldsForCreateAndUpdate() method. See line 674. There is a return statement which would stop the generation of any subsequent fields.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="543" opendate="2010-01-19 07:18:44" fixdate="2010-01-27 15:05:14" resolution="Fixed">
		<buginformation>
			<summary>Multiselect not getting fully selected on update</summary>
			<description>I have a Researcher object that has many Interests and Skills. When I edit a researcher the skills and interests multiselect boxes do not get correctly bound, so if I just submit they will be almost all erased (all but the first interest). 
The weird thing is that if you view source the correct skills and interests option tags are marked as selected="selected", although they are not highlighted for me as a user and they are not considered selected when I submit the form (because if I submit they are wiped out).
Is there something wrong with dojo MultiSelect widgit? 
You might be able to reproduce the problem with this partial script:
..all of the project and persistence setup
entity --class ~.domain.Interest 
field string --fieldName name
entity --class ~.domain.Skill 
field string --fieldName name
entity --class ~.domain.Researcher 
field set --fieldName interests --element ~.domain.Interest 
field set --fieldName skills --element ~.domain.Skill 
controller scaffold all
If you create a few skills and interests and then create a researcher you should see the problem.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="563" opendate="2010-01-28 06:25:00" fixdate="2010-01-28 07:45:19" resolution="Fixed">
		<buginformation>
			<summary>"finder list" only listing "NOT" option for boolean field</summary>
			<description>Exactly as I wrote in the forum.
Hi guys!
I&amp;amp;apos;ve got an entity that has a boolean field.
When I type the command "finder list" in Roo Shell, it only lists the corresponding finder with the NOT modifier. For example:
Let&amp;amp;apos;s suppose an entity named "Foo" with a boolean field named "enabled", if I type the command "finder list", Roo will show:
.....
findFoosByEnabledNot(Boolean enabled)
...
And not the option
...
findFoosByEnabled(Boolean enabled)
...
Nevertheless Roo only doesn&amp;amp;apos;t list it, because if I type:
...
finder add --finderName findFoosByEnabled
Roo effectively generates the corresponding code.
What I&amp;amp;apos;m pointing in this post is that this situation is a bit confusing and sometimes funny, in my case i used the findFoosByEnabledNot option and of course it was listing the opposite option I was looking for!!!!
I&amp;amp;apos;m submitting the corresponding JIRA later </description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServicesImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="570" opendate="2010-01-29 07:23:44" fixdate="2010-01-31 10:53:01" resolution="Fixed">
		<buginformation>
			<summary>Outdated DTD on Tiles configuration files</summary>
			<description>The generated Tiles configuration files use the following DTD:
&amp;lt;!DOCTYPE tiles-definitions PUBLIC "-//Apache Software Foundation//DTD Tiles Configuration 2.0//EN" "http://tiles.apache.org/dtds/tiles-config_2_0.dtd"&amp;gt;
which is for the 2.0 release and doesn&amp;amp;apos;t contain some features found in the 2.1 release
should be:
&amp;lt;!DOCTYPE tiles-definitions PUBLIC "-//Apache Software Foundation//DTD Tiles Configuration 2.1//EN" "http://tiles.apache.org/dtds/tiles-config_2_1.dtd"&amp;gt;</description>
			<version>1.0.1.RELEASE</version>
			<fixedVersion>1.0.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.TilesOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="574" opendate="2010-01-31 10:04:03" fixdate="2010-02-04 15:05:20" resolution="Fixed">
		<buginformation>
			<summary>Flawed persistence when using Hypersonic</summary>
			<description>When using a persistent Hypersonic database (via persistence setup --provider HIBERNATE --database HYPERSONIC_PERSISTENT), two artifacts should be generated differently:
(1) META-INF/spring/database.properties: the connection string should contain the parameter ;shutdown=true, so that HSQLDB correctly writes any changes to disk when you stop Tomcat
(2) persistence.xml: the default setting for hibernate.hbm2ddl.auto should be update
Everything else will lead to side-effects which a user will not expect from a persistent setup.
Apart from that ... keep up the great work! I&amp;amp;apos;m excited to see where Roo will go.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JdbcDatabase.java</file>
		</fixedFiles>
	</bug>
	<bug id="578" opendate="2010-02-01 09:10:04" fixdate="2010-02-04 15:08:18" resolution="Fixed">
		<buginformation>
			<summary>Incorrect help text for "finder add" command when invalid finder name entered</summary>
			<description>For any entity, enter this command:






finder add --finderName f






Roo will respond with:






required --finderName: The finder string as generated with &amp;amp;apos;list finders for&amp;amp;apos;; no default value






The problem is that there is no "list finders for" command; it&amp;amp;apos;s actually the "finder list" command.</description>
			<version>1.0.1.RELEASE</version>
			<fixedVersion>1.0.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.finder.FinderCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="575" opendate="2010-01-31 10:44:04" fixdate="2010-02-14 12:37:10" resolution="Fixed">
		<buginformation>
			<summary>Tab expansion fails for "script --file" if using ~ in the path name</summary>
			<description>(Logged by Ben on behalf of rj)
Entering "script --file ~/Do" then hitting TAB will blow up:






balex@tara:~/t2$ roo-dev




    ____  ____  ____  




   / __ \/ __ \/ __ \ 




  / /_/ / / / / / / / 




 / _, _/ /_/ / /_/ /  




/_/ |_|\____/\____/    ENGINEERING BUILD [rev 601:602]














Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.




roo&amp;gt; script --file ~/DoException in thread "main" java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true




	at org.springframework.roo.support.util.Assert.isTrue(Assert.java:65)




	at org.springframework.roo.support.util.Assert.isTrue(Assert.java:77)




	at org.springframework.roo.shell.converters.FileConverter.populate(FileConverter.java:42)




	at org.springframework.roo.shell.converters.FileConverter.getAllPossibleValues(FileConverter.java:35)




	at org.springframework.roo.shell.SimpleParser.complete(SimpleParser.java:633)




	at org.springframework.roo.shell.jline.JLineCompletorAdapter.complete(JLineCompletorAdapter.java:30)




	at jline.ConsoleReader.complete(ConsoleReader.java:832)




	at jline.ConsoleReader.readLine(ConsoleReader.java:518)




	at jline.ConsoleReader.readLine(ConsoleReader.java:448)




	at jline.ConsoleReader.readLine(ConsoleReader.java:300)




	at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:150)




	at org.springframework.roo.bootstrap.Bootstrap.run(Bootstrap.java:114)




	at org.springframework.roo.bootstrap.Bootstrap.main(Bootstrap.java:53)





</description>
			<version>1.0.1.RELEASE</version>
			<fixedVersion>1.0.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.converters.FileConverter.java</file>
		</fixedFiles>
	</bug>
	<bug id="615" opendate="2010-02-11 16:05:25" fixdate="2010-02-15 14:09:38" resolution="Fixed">
		<buginformation>
			<summary>Incorrect elementId in finder view for multi-word fields</summary>
			<description>If you create a project using this script:






project --topLevelPackage casing




persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY 




entity --class Car




entity --class Person




field reference --fieldName rentalCar --type ~.Car




finder list --class ~.Person




finder add --finderName findPeopleByRentalCar




controller all --package ~.web






Then the generated findPeopleByRentalCar.jspx view will contain this markup (tidied a bit here):






&amp;lt;label for="_rentalcar_id"&amp;gt;Rental Car:&amp;lt;/label&amp;gt;




&amp;lt;select id="_rentalcar_id" name="rentalcar"&amp;gt;




    &amp;lt;c:forEach items="${cars}" var="rentalcar_item"&amp;gt;




        &amp;lt;option value="${rentalcar_item.id}"&amp;gt;${rentalcar_item}&amp;lt;/option&amp;gt;




    &amp;lt;/c:forEach&amp;gt;




&amp;lt;/select&amp;gt;




&amp;lt;script type="text/javascript"&amp;gt;




    Spring.addDecoration(new Spring.ElementDecoration({




        elementId: &amp;amp;apos;_rentalCar_id&amp;amp;apos;,




        widgetType: &amp;amp;apos;dijit.form.FilteringSelect&amp;amp;apos;,




        widgetAttrs: {hasDownArrow : true}




    }));




&amp;lt;/script&amp;gt;






The bug is that the decoration&amp;amp;apos;s elementId "_rentalCar_id" is differently cased to the select tag&amp;amp;apos;s id of "_rentalcar_id". The impact is that the decoration is not applied, so the drop-down looks and behaves like a plain HTML dropdown.</description>
			<version>1.0.1.RELEASE</version>
			<fixedVersion>1.0.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.DojoUtils.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="619" opendate="2010-02-15 09:05:20" fixdate="2010-02-15 14:14:10" resolution="Fixed">
		<buginformation>
			<summary>@RooJavaBean does not allow for final fields when settersByDefault is set to false</summary>
			<description>@RooJavaBean has a "settersByDefault" attribute that you can set to false to only generate getters for all your properties.  As a user, I was expecting to also be able to mark such properties final.  However, once I did that Roo no longer managed those fields.</description>
			<version>1.0.1.RELEASE</version>
			<fixedVersion>1.0.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">36</link>
		</links>
	</bug>
	<bug id="618" opendate="2010-02-14 17:52:17" fixdate="2010-02-15 14:31:49" resolution="Fixed">
		<buginformation>
			<summary>AutoPopulationUtils fails to set @AutoPopulate fields with array value unless input annotation in array form</summary>
			<description>If I have a Roo-managed "Pizza" entity annotated thus:






@RooEntity






and I add this "finders" element to it:






@RooEntity(finders = "findPizzasByName")






then nothing happens in the Roo shell. It&amp;amp;apos;s only when I add the curly braces like this:






@RooEntity(finders = {"findPizzasByName"})






that Roo creates the Pizza_Roo_Finder.aj file. Yet the compiler is happy without the braces, and all other annotations I&amp;amp;apos;ve worked with are equally happy without the braces. Ben reckons this looks like a Roo bug.</description>
			<version>1.0.1.RELEASE</version>
			<fixedVersion>1.0.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.details.annotations.populator.AutoPopulationUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="568" opendate="2010-01-28 18:08:58" fixdate="2010-02-15 16:12:42" resolution="Fixed">
		<buginformation>
			<summary>DataOnDemand for OneToOne relationships should be more robust</summary>
			<description>This bug is closely related to the linked issues about @OneToOne (cyclic toString() bug and "field reference" imrpovement).
Generated tests for "reference" relationships pick random target entity when feeding the reference.
This is fine for @ManyToOne relationships, but wrong for @OneToOne : randomisation will return several time same target entity.
So DataOnDemand should pick random target entity out of remaining ones when relationship is @OneToOne.
Here is a minimal script to reproduce, along with a little manual editing :
project --topLevelPackage fr.free.hd.ch4mp.onetoone
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY
entity --class ~.domain.Person --testAutomatically
entity --class ~.domain.DrivingLicense --testAutomatically
field string firstName --notNull --class ~.domain.Person
field string lastName --notNull --class ~.domain.Person
field number --fieldName points --type java.lang.Integer --notNull --min 0 --max 12 --class ~.domain.DrivingLicense
controller all --package ~.web
DrivingLicense.java editing :
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
...
    @NotNull
    @OneToOne(targetEntity = Person.class)
    @JoinColumn
    private Person owner;
Person.java editing :
import javax.persistence.CascadeType;
import javax.persistence.OneToOne;
...
    @OneToOne(targetEntity = DrivingLicense.class, cascade = CascadeType.ALL, mappedBy = "owner")
    private DrivingLicense drivingLicense;
perform test should fail.
Editing DrivingLicenseDataOnDemand_Roo_DataOnDemand.aj and changing personDataOnDemand.getRandomPerson() call to Person.findPerson(new Long(index)) would be sufficient for tests to pass.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.0.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">325</link>
			<link type="Related" description="is related to">569</link>
			<link type="Related" description="is related to">569</link>
		</links>
	</bug>
	<bug id="589" opendate="2010-02-04 23:43:49" fixdate="2010-02-15 18:42:00" resolution="Fixed">
		<buginformation>
			<summary>Setting method names to blank on @RooEntity does not prevent those methods from being generated</summary>
			<description>Setting methods names to blank on @RooEntity does not prevent those methods from being generated the same way versionField="" does, the settings appear to be ignored.
My specific requirement is to make an Entity read only (persistMethod="", removeMethod="", mergeMethod="") but all of the method name attributes should probably work the same way.</description>
			<version>1.0.1.RELEASE</version>
			<fixedVersion>1.0.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="576" opendate="2010-01-31 13:28:00" fixdate="2010-02-15 19:09:27" resolution="Fixed">
		<buginformation>
			<summary>Restore handling of imports in generated .java types</summary>
			<description>Currently, Roo generated .java files contain only fully qualified types. The import resolution mechanism seems broken.
This looks like a regression between the 1.0.0 release and 1.0.1 release.</description>
			<version>1.0.1.RELEASE</version>
			<fixedVersion>1.0.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">508</link>
		</links>
	</bug>
	<bug id="633" opendate="2010-02-17 02:21:57" fixdate="2010-02-17 13:41:16" resolution="Fixed">
		<buginformation>
			<summary>date finder: wrong date format</summary>
			<description>App:
project --topLevelPackage com.hz.doc
persistence setup --provider HIBERNATE --database HYPERSONIC_PERSISTENT 
entity --class ~.dto.Document
field string --fieldName title --sizeMax 25 --notNull true 
field string --fieldName body --sizeMax 1024
field date --fieldName publishDate --type java.util.Date --notNull true
controller all --package ~.web
finder list --class com.hz.doc.dto.Document --depth 2 --filter title,date
finder add --finderName findDocumentsByPublishDateBetweenAndTitleEquals
Try to find entity by date between --&amp;gt; exception:
Unable to convert value 2010-02-01 from type &amp;amp;apos;java.lang.String&amp;amp;apos; to type &amp;amp;apos;java.util.Date&amp;amp;apos;; nested exception is org.springframework.core.convert.ConversionFailedException: Unable to convert value 2010-02-01 from type &amp;amp;apos;java.lang.String&amp;amp;apos; to type &amp;amp;apos;java.util.Date&amp;amp;apos;; nested exception is java.lang.IllegalArgumentException: Invalid format: "2010-02-01" is malformed at "10-02-01"</description>
			<version>1.0.1.RELEASE</version>
			<fixedVersion>1.0.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="679" opendate="2010-03-06 22:06:14" fixdate="2010-03-08 10:36:30" resolution="Complete">
		<buginformation>
			<summary>The command line parser fails when there is more than a single space after the command</summary>
			<description>If you have more than a single space after the command (for example "project.." instead of "project."), then the parser doesn&amp;amp;apos;t recognize the command anymore and TAB completion will fail.</description>
			<version>1.0.1.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
		</fixedFiles>
	</bug>
	<bug id="691" opendate="2010-03-10 14:09:24" fixdate="2010-03-10 16:44:58" resolution="Complete">
		<buginformation>
			<summary>custom controller paths not supported in 1.1.0.M1 (#674)</summary>
			<description>While checking in on your ongoing UI improvements, I built a development build of Roo and discovered that custom controller paths with nested directories (e.g., "--path secure/vote") no longer work. Trying to use one results in the following error:

Illegal name &amp;amp;apos;secured/vote&amp;amp;apos; (illegal character)
Script execution aborted
Here&amp;amp;apos;s a script you can use to replicate:






project --topLevelPackage com.springsource.vote









persistence setup --provider HIBERNATE --database HYPERSONIC_PERSISTENT









logging setup --level DEBUG --package WEB









entity --class Vote




field string ip --notNull --sizeMin 7 --sizeMax 15




controller scaffold ~.web.VoteController --path secured/vote









security setup






Here is the original feature request and some related issues:
ROO-183 (original feature request)
ROO-290 
ROO-364
ROO-375 (similar error reported/fixed)</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.security.SecurityOperations.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="674" opendate="2010-03-04 21:29:02" fixdate="2010-03-11 08:18:43" resolution="Complete">
		<buginformation>
			<summary>Spring Roo 1.0.2 DB2 trailing space in driver class name prevents its loading.</summary>
			<description>Spring Roo v1.0.2 add a trailing space to the database.properties database.driverClassName=com.ibm.db2.jcc.DB2Driver when setting DB2 as database in persistence setup preventing to load Driver class at compile time and runtime.
This issue is visible when launching maven with trace enabled (-e switch) reading the Driver class name it is looking for ("...DB2Driver ")</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JdbcDatabase.java</file>
		</fixedFiles>
	</bug>
	<bug id="650" opendate="2010-02-23 12:30:27" fixdate="2010-03-11 16:21:04" resolution="Complete">
		<buginformation>
			<summary>"List All" link contains "&amp;amp;" instead of "&amp;"</summary>
			<description>Create a simple Roo app as follows:






project --topLevelPackage pizza




persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY 




entity --class ~.Pizza 




controller all --package ~.web






Start the app using mvn jetty:run. In the left-hand navigation menu, the target of the "List all Pizzas" links will be:






http://myhost:8080/pizza/pizza?page=1&amp;amp;amp;size=10






... instead of:






http://myhost:8080/pizza/pizza?page=1&amp;amp;size=10






This causes the Pizza controller to use the wrong value for the "size" parameter.</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="699" opendate="2010-03-14 14:50:06" fixdate="2010-03-14 15:25:04" resolution="Complete">
		<buginformation>
			<summary>show.tagx cannot use ${object.class.name} directly due to issues with OpenJPA proxies</summary>
			<description>When attempting to create an entity in the DB with OpenJPA using the ROO-generated UI, exception is thrown:
SEVERE: Servlet.service() for servlet jsp threw exception
javax.servlet.jsp.JspTagException: No message found under code &amp;amp;apos;label.org.apache.openjpa.enhance.com$springsource$simple$domain$employee$pcsubclass&amp;amp;apos; for locale &amp;amp;apos;en_US&amp;amp;apos;.
        at org.springframework.web.servlet.tags.MessageTag.doStartTagInternal(MessageTag.java:184)
        at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:78)
        at org.apache.jsp.tag.web.form.show_tagx._jspx_meth_spring_005fmessage_005f0(show_tagx.java:205)
        at org.apache.jsp.tag.web.form.show_tagx._jspx_meth_c_005fif_005f0(show_tagx.java:177)
        at org.apache.jsp.tag.web.form.show_tagx.doTag(show_tagx.java:133)
        at org.apache.jsp.WEB_002dINF.views.employees.show_jspx._jspx_meth_page_005fshow_005f0(show_jspx.java:90)
        at org.apache.jsp.WEB_002dINF.views.employees.show_jspx._jspService(show_jspx.java:60)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:374)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:337)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:630)
        at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:535)
        at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:472)
        at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:968)
        at org.apache.jasper.runtime.PageContextImpl.doInclude(PageContextImpl.java:638)
        at org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.java:632)
        at org.apache.tiles.jsp.context.JspTilesRequestContext.include(JspTilesRequestContext.java:103)
        at org.apache.tiles.jsp.context.JspTilesRequestContext.dispatch(JspTilesRequestContext.java:96)
        at org.apache.tiles.renderer.impl.UntypedAttributeRenderer.write(UntypedAttributeRenderer.java:61)
        at org.apache.tiles.renderer.impl.AbstractBaseAttributeRenderer.render(AbstractBaseAttributeRenderer.java:103)
        at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:669)
        at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:337)
        at org.apache.tiles.jsp.taglib.InsertAttributeTag.render(InsertAttributeTag.java:234)
        at org.apache.tiles.jsp.taglib.InsertAttributeTag.render(InsertAttributeTag.java:211)
        at org.apache.tiles.jsp.taglib.RenderTag.doEndTag(RenderTag.java:220)
        at org.apache.jsp.WEB_002dINF.layouts.default_jspx._jspx_meth_tiles_005finsertAttribute_005f1(default_jspx.java:493)
        at org.apache.jsp.WEB_002dINF.layouts.default_jspx._jspService(default_jspx.java:147)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:374)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:337)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="696" opendate="2010-03-13 22:08:16" fixdate="2010-03-14 15:25:58" resolution="Complete">
		<buginformation>
			<summary>wrong calculation of modelAttribute name in create.tagx and update.tagx</summary>
			<description>In Roo 1.1.0.M1 [rev 684]:
In create.tagx and update.tagx, the modelAttribute of the form tag is calculated like this:






&amp;lt;form:form ... modelAttribute="${fn:toLowerCase(object.class.simpleName)}"&amp;gt;






This gives wrong results for Entity names that consist of more than one "part". Consider, f.e.  an Entity "FooBar". the model attribute would become "foobar" in the code above. On the other hand, the according controller would add a model attribute "fooBar" to the model map, which does not match with "foobar".
This results in 






java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name &amp;amp;apos;foobar&amp;amp;apos; available as request attribute




	at org.springframework.web.servlet.support.BindStatus.&amp;lt;init&amp;gt;(BindStatus.java:141)




	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:174)




	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:194)




	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getName(AbstractDataBoundFormElementTag.java:160)




	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.writeDefaultAttributes(AbstractDataBoundFormElementTag.java:123)




	at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.writeDefaultAttributes(AbstractHtmlElementTag.java:409)




	at org.springframework.web.servlet.tags.form.InputTag.writeTagContent(InputTag.java:140)




	at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:102)




	at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:79)




	at org.apache.jsp.tag.web.form.fields.input_tagx._jspx_meth_form_005finput_005f0(input_tagx.java:579)




	at org.apache.jsp.tag.web.form.fields.input_tagx.doTag(input_tagx.java:294)






</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="697" opendate="2010-03-14 03:37:28" fixdate="2010-03-14 16:49:58" resolution="Complete">
		<buginformation>
			<summary>Compiler errors in generated registerConverters() method, when entity has only one property</summary>
			<description>In Roo 1.1.0.M1 [rev 684]:
If an entity has only one field, an this field has for instance an enum type, than the generated  registerConverters() in the accoding controller yields compiler errors, since the enum cannot be converted to string.
Let&amp;amp;apos;s assume we have this entity: 






class Person { GenderEnum gender;}






than, the generated code in the controller will be:






@Override




public String convert(Question question) {




   return person.getGender();




}






This yields compiler error, since person.getGender() is no String.
</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="695" opendate="2010-03-13 04:09:56" fixdate="2010-03-14 17:27:11" resolution="Complete">
		<buginformation>
			<summary>JspViewManager tries to ignore Maps, but fails to do it...</summary>
			<description>In Roo 1.1.0.M1 [rev 684]:
In  JspViewManager.getFieldType, Maps are ignored in response to ROO-194:






//currently there is no scaffolding available for Maps (see ROO-194)




			if(field.getFieldType().equals(new JavaType(Map.class.getName()))) {




				return null;




			}






However, this leads to a violated AssertStatement and thus makes JSP scaffolding impossible for entities with Map properties. (The complete generation is rolled back with message "Could not determine the plural name")
For example, in line 394 od JspVieManager:






EntityMetadata typeEntityMetadata = getFieldType(field);




Assert.notNull(typeEntityMetadata, "Could not determine the plural name for the &amp;amp;apos;" + Introspector.decapitalize(StringUtils.capitalize(field.getFieldName().getSymbolName())) + "&amp;amp;apos; field in " + beanInfoMetadata.getJavaBean().getSimpleTypeName());	






</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServicesImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">694</link>
		</links>
	</bug>
	<bug id="694" opendate="2010-03-13 03:53:21" fixdate="2010-03-14 17:28:22" resolution="Complete">
		<buginformation>
			<summary>CLONE -Maps fields not supported by mvc plugin - Assert statement seems to rollback everything...</summary>
			<description>Either it needs to be marked as caveat in release doc that map fields are unsupported or it is a bug.
In 1.0.0.RC1 , roo cannot decide on plural name for Map&amp;lt;String,Entity&amp;gt; - it tries to find a plural for first param instead of second , specifying @RooPlural on String is out of question  . Not sure how the gui should look like for a map - probably list of entries....</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServicesImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">695</link>
		</links>
	</bug>
	<bug id="645" opendate="2010-02-21 10:18:32" fixdate="2010-03-14 17:33:20" resolution="Complete">
		<buginformation>
			<summary>Shell reports incorrect location of database.properties</summary>
			<description>If you configure a new project using Oracle, like this:






project --topLevelPackage foo




persistence setup --provider HIBERNATE --database ORACLE






... the shell will respond to the second command as follows:






Created SRC_MAIN_RESOURCES\META-INF\persistence.xml




Created SRC_MAIN_RESOURCES\META-INF\spring\database.properties




please enter your database details in src/main/resources/database.properties




Managed SRC_MAIN_RESOURCES\META-INF\spring\applicationContext.xml




Managed ROOT\pom.xml






The bug is that database.properties is actually located in src\main\resources\META-INF\spring, not src/main/resources as the third line indicates. </description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="707" opendate="2010-03-15 17:35:49" fixdate="2010-03-15 17:37:33" resolution="Complete">
		<buginformation>
			<summary>Dependency type only detects first exclusion if multiple are defined</summary>
			<description>Dependency type only detects first exclusion if multiple are defined</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.Dependency.java</file>
		</fixedFiles>
	</bug>
	<bug id="704" opendate="2010-03-15 08:50:40" fixdate="2010-03-17 15:52:10" resolution="Complete">
		<buginformation>
			<summary>spring:eval in  display.tagx  leads to errors for properties of type Map, since no converters are registered.</summary>
			<description>[Rev. 692]
ROO-702 introduced &amp;lt;spring:eval&amp;gt; in display.tagx.
Since in the generated show.jspx, Map-typed properties are not excluded (like in create.jspx and update.jspx), and no Converters are registered for Map-&amp;gt;String in the controller there is the following exception:






org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from [java.util.Map] to [java.lang.String]




	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:136)




	at org.springframework.expression.spel.support.StandardTypeConverter.convertValue(StandardTypeConverter.java:70)




	at org.springframework.expression.common.ExpressionUtils.convertTypedValue(ExpressionUtils.java:68)




	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:98)




	at org.springframework.web.servlet.tags.EvalTag.doEndTag(EvalTag.java:108)




	at org.apache.jsp.tag.web.form.fields.display_tagx._jspx_meth_spring_005feval_005f0(display_tagx.java:498)




	at org.apache.jsp.tag.web.form.fields.display_tagx._jspx_meth_c_005fotherwise_005f0(display_tagx.java:471)




	at org.apache.jsp.tag.web.form.fields.display_tagx._jspx_meth_c_005fchoose_005f0(display_tagx.java:352)




	at org.apache.jsp.tag.web.form.fields.display_tagx.doTag(display_tagx.java:200)




	at org.apache.jsp.WEB_002dINF.views.questions.show_jspx._jspx_meth_field_005fdisplay_005f1(show_jspx.java:134)




	at org.apache.jsp.WEB_002dINF.views.questions.show_jspx.access$1(show_jspx.java:117)




	at org.apache.jsp.WEB_002dINF.views.questions.show_jspx$Helper.invoke0(show_jspx.java:221)




	at org.apache.jsp.WEB_002dINF.views.questions.show_jspx$Helper.invoke(show_jspx.java:244)






Proposed solution:  Add converter for Map properties or suppress Map properties in show views (and maybe also in list view, if use of spring:eval is planned in table.tagx as well) </description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="677" opendate="2010-03-06 02:58:59" fixdate="2010-03-17 17:09:40" resolution="Complete">
		<buginformation>
			<summary>date field not working properly when the fieldname starts with uppercase</summary>
			<description>When run the below code &amp;amp;apos;field1&amp;amp;apos; will work correctly (with datetime picker), &amp;amp;apos;Field2&amp;amp;apos; will not display datetime picker and manual input of a date (copied from first field) will not work. The problem goes away when you rename the fieldname.
project --topLevelPackage nl.hotitem.ucasetest
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY
entity --class ~.ucasetest --testAutomatically
field date --fieldName field1 --type java.util.Date
field date --fieldName Field2 --type java.util.Date 
controller all --package ~.web
selenium test --controller ~.web.UcasetestController
logging setup --level DEBUG</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="708" opendate="2010-03-15 22:19:57" fixdate="2010-03-18 11:30:31" resolution="Complete">
		<buginformation>
			<summary>Compile error in WebScaffold controller</summary>
			<description>There is an error in &amp;amp;apos;_Roo_Controler.aj&amp;amp;apos; generated by @RooWebScaffold than produces this compile error:













[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Compiler errors : 
error at public String convert(Entity1 entity1) {
              ^^^^^^^
/home/jmvivo/projects/test-roo/test-strategy/src/main/java/org/test/strategy/web/Entity1Controller_Roo_Controller.aj:86:0::0 The method convert(Entity1) of type new Converter&amp;lt;Entity1,String&amp;gt;(){} must override a superclass method
{noforma}
</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="716" opendate="2010-03-19 10:05:33" fixdate="2010-03-19 10:07:07" resolution="Complete">
		<buginformation>
			<summary>Generated Selenium scripts do not comply with new URI conventions</summary>
			<description>Generated Selenium scripts do not comply with new URI conventions. &amp;amp;apos;form&amp;amp;apos; is now a param rather than part of the URI itself.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="732" opendate="2010-03-22 16:16:38" fixdate="2010-03-22 16:22:18" resolution="Complete">
		<buginformation>
			<summary>Roo generated data on demand types are not aware of Calendar types and Enum types</summary>
			<description>Roo generated data on demand types are not aware of Calendar types and Enum types (annotated with JSR 303 @Enumerated)</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="647" opendate="2010-02-22 16:46:59" fixdate="2010-03-23 17:03:05" resolution="Complete">
		<buginformation>
			<summary>roo generated create.jspx for entities with names ending with &amp;apos;s&amp;apos; and @OneToMany relation with it self cause  internal server error error </summary>
			<description>
Steps to re generate the bug:
	
Run the following roo script






test-roo.roo






// Spring Roo 1.0.1.RELEASE [rev 601] log opened at 2010-02-23 08:15:39




project --topLevelPackage com.bzone.test --projectName test-roo




persistence setup --provider HIBERNATE --database MYSQL --userName ** --password ** --databaseName rootest




entity --class ~.domain.Series




field string --fieldName seriesName




field reference --type com.bzone.test.domain.Series --fieldName parentSeries




field set --fieldName subSeriesList --element com.bzone.test.domain.Series --cardinality MANY_TO_MANY --mappedBy parentSeries




controller scaffold --class com.bzone.test.web.SeriesController --entity com.bzone.test.domain.Series












now run the application (I use mvn jetty:run) and try to access "Create new Series" link.




what happens:
internal server see the stack trace 






roo-exception.txt






2010-02-23 08:26:20.275::WARN:  Nested in org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.tiles.impl.CannotRenderException: ServletException including path &amp;amp;apos;/WEB-INF/layouts/default.jspx&amp;amp;apos;.:




org.apache.tiles.impl.CannotRenderException: ServletException including path &amp;amp;apos;/WEB-INF/layouts/default.jspx&amp;amp;apos;.




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:691)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:643)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:626)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:322)




	at org.springframework.web.servlet.view.tiles2.TilesView.renderMergedOutputModel(TilesView.java:100)




	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:250)




	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1060)




	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:798)




	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:716)




	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:647)




	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:552)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)




	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)




	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)




	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)




	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)




	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)




	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)




	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:285)




	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:126)




	at org.tuckey.web.filters.urlrewrite.NormalRewrittenUrl.doRewrite(NormalRewrittenUrl.java:195)




	at org.tuckey.web.filters.urlrewrite.RuleChain.handleRewrite(RuleChain.java:159)




	at org.tuckey.web.filters.urlrewrite.RuleChain.doRules(RuleChain.java:141)




	at org.tuckey.web.filters.urlrewrite.UrlRewriter.processRequest(UrlRewriter.java:90)




	at org.tuckey.web.filters.urlrewrite.UrlRewriteFilter.doFilter(UrlRewriteFilter.java:417)




	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)




	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:71)




	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)




	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)




	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)




	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)




	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)




	at org.springframework.web.filter.ShallowEtagHeaderFilter.doFilterInternal(ShallowEtagHeaderFilter.java:57)




	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)




	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)




	at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:113)




	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)




	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)




	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)




	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)




	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)




	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)




	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)




	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)




	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)




	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)




	at org.mortbay.jetty.Server.handle(Server.java:324)




	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)




	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:829)




	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)




	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)




	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)




	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)




	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:488)




Caused by: org.apache.tiles.util.TilesIOException: ServletException including path &amp;amp;apos;/WEB-INF/layouts/default.jspx&amp;amp;apos;.




	at org.apache.tiles.servlet.context.ServletUtil.wrapServletException(ServletUtil.java:232)




	at org.apache.tiles.servlet.context.ServletTilesRequestContext.forward(ServletTilesRequestContext.java:243)




	at org.apache.tiles.servlet.context.ServletTilesRequestContext.dispatch(ServletTilesRequestContext.java:222)




	at org.apache.tiles.renderer.impl.TemplateAttributeRenderer.write(TemplateAttributeRenderer.java:44)




	at org.apache.tiles.renderer.impl.AbstractBaseAttributeRenderer.render(AbstractBaseAttributeRenderer.java:103)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:669)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:689)




	... 54 more




Caused by: org.apache.tiles.util.TilesIOException: JSPException including path &amp;amp;apos;/WEB-INF/views/series/create.jspx&amp;amp;apos;.




	at org.apache.tiles.servlet.context.ServletUtil.wrapServletException(ServletUtil.java:232)




	at org.apache.tiles.jsp.context.JspTilesRequestContext.include(JspTilesRequestContext.java:105)




	at org.apache.tiles.jsp.context.JspTilesRequestContext.dispatch(JspTilesRequestContext.java:96)




	at org.apache.tiles.renderer.impl.UntypedAttributeRenderer.write(UntypedAttributeRenderer.java:61)




	at org.apache.tiles.renderer.impl.AbstractBaseAttributeRenderer.render(AbstractBaseAttributeRenderer.java:103)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:669)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:337)




	at org.apache.tiles.jsp.taglib.InsertAttributeTag.render(InsertAttributeTag.java:234)




	at org.apache.tiles.jsp.taglib.InsertAttributeTag.render(InsertAttributeTag.java:211)




	at org.apache.tiles.jsp.taglib.RenderTag.doEndTag(RenderTag.java:220)




	at org.apache.jsp.WEB_002dINF.layouts.default_jspx._jspx_meth_tiles_insertAttribute_1(org.apache.jsp.WEB_002dINF.layouts.default_jspx:469)




	at org.apache.jsp.WEB_002dINF.layouts.default_jspx._jspService(org.apache.jsp.WEB_002dINF.layouts.default_jspx:144)




	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)




	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)




	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:470)




	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:364)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)




	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)




	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)




	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)




	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)




	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)




	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)




	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:285)




	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:126)




	at org.apache.tiles.servlet.context.ServletTilesRequestContext.forward(ServletTilesRequestContext.java:241)




	... 59 more




Caused by: org.springframework.beans.NotReadablePropertyException: Invalid property &amp;amp;apos;seriesName&amp;amp;apos; of bean class [java.util.ArrayList]: Bean property &amp;amp;apos;seriesName&amp;amp;apos; is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?




	at org.springframework.beans.BeanWrapperImpl.getPropertyValue(BeanWrapperImpl.java:665)




	at org.springframework.beans.BeanWrapperImpl.getPropertyValue(BeanWrapperImpl.java:657)




	at org.springframework.web.servlet.support.BindStatus.&amp;lt;init&amp;gt;(BindStatus.java:147)




	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:175)




	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:195)




	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getName(AbstractDataBoundFormElementTag.java:161)




	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.writeDefaultAttributes(AbstractDataBoundFormElementTag.java:124)




	at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.writeDefaultAttributes(AbstractHtmlElementTag.java:409)




	at org.springframework.web.servlet.tags.form.InputTag.writeTagContent(InputTag.java:140)




	at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:91)




	at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:78)




	at org.apache.jsp.WEB_002dINF.views.series.create_jspx._jspx_meth_form_input_0(org.apache.jsp.WEB_002dINF.views.series.create_jspx:512)




	at org.apache.jsp.WEB_002dINF.views.series.create_jspx._jspService(org.apache.jsp.WEB_002dINF.views.series.create_jspx:147)




	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)




	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)




	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:470)




	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:364)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)




	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)




	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)




	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)




	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)




	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)




	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)




	at org.mortbay.jetty.servlet.Dispatcher.include(Dispatcher.java:192)




	at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:997)




	at org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.java:682)




	at org.apache.tiles.jsp.context.JspTilesRequestContext.include(JspTilesRequestContext.java:103)




	... 84 more




2010-02-23 08:26:20.322::WARN:  /test-roo/series/form




org.apache.tiles.impl.CannotRenderException: ServletException including path &amp;amp;apos;/WEB-INF/layouts/default.jspx&amp;amp;apos;.




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:691)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:643)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:626)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:322)




	at org.springframework.web.servlet.view.tiles2.TilesView.renderMergedOutputModel(TilesView.java:100)




	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:250)




	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1060)




	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:798)




	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:716)




	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:647)




	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:552)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)




	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)




	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)




	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)




	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)




	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)




	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)




	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:285)




	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:126)




	at org.tuckey.web.filters.urlrewrite.NormalRewrittenUrl.doRewrite(NormalRewrittenUrl.java:195)




	at org.tuckey.web.filters.urlrewrite.RuleChain.handleRewrite(RuleChain.java:159)




	at org.tuckey.web.filters.urlrewrite.RuleChain.doRules(RuleChain.java:141)




	at org.tuckey.web.filters.urlrewrite.UrlRewriter.processRequest(UrlRewriter.java:90)




	at org.tuckey.web.filters.urlrewrite.UrlRewriteFilter.doFilter(UrlRewriteFilter.java:417)




	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)




	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:71)




	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)




	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)




	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)




	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)




	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)




	at org.springframework.web.filter.ShallowEtagHeaderFilter.doFilterInternal(ShallowEtagHeaderFilter.java:57)




	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)




	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)




	at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:113)




	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)




	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)




	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)




	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)




	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)




	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)




	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)




	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)




	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)




	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)




	at org.mortbay.jetty.Server.handle(Server.java:324)




	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)




	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:829)




	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)




	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)




	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)




	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)




	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:488)




Caused by: org.apache.tiles.util.TilesIOException: ServletException including path &amp;amp;apos;/WEB-INF/layouts/default.jspx&amp;amp;apos;.




	at org.apache.tiles.servlet.context.ServletUtil.wrapServletException(ServletUtil.java:232)




	at org.apache.tiles.servlet.context.ServletTilesRequestContext.forward(ServletTilesRequestContext.java:243)




	at org.apache.tiles.servlet.context.ServletTilesRequestContext.dispatch(ServletTilesRequestContext.java:222)




	at org.apache.tiles.renderer.impl.TemplateAttributeRenderer.write(TemplateAttributeRenderer.java:44)




	at org.apache.tiles.renderer.impl.AbstractBaseAttributeRenderer.render(AbstractBaseAttributeRenderer.java:103)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:669)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:689)




	... 54 more




Caused by: org.apache.tiles.util.TilesIOException: JSPException including path &amp;amp;apos;/WEB-INF/views/series/create.jspx&amp;amp;apos;.




	at org.apache.tiles.servlet.context.ServletUtil.wrapServletException(ServletUtil.java:232)




	at org.apache.tiles.jsp.context.JspTilesRequestContext.include(JspTilesRequestContext.java:105)




	at org.apache.tiles.jsp.context.JspTilesRequestContext.dispatch(JspTilesRequestContext.java:96)




	at org.apache.tiles.renderer.impl.UntypedAttributeRenderer.write(UntypedAttributeRenderer.java:61)




	at org.apache.tiles.renderer.impl.AbstractBaseAttributeRenderer.render(AbstractBaseAttributeRenderer.java:103)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:669)




	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:337)




	at org.apache.tiles.jsp.taglib.InsertAttributeTag.render(InsertAttributeTag.java:234)




	at org.apache.tiles.jsp.taglib.InsertAttributeTag.render(InsertAttributeTag.java:211)




	at org.apache.tiles.jsp.taglib.RenderTag.doEndTag(RenderTag.java:220)




	at org.apache.jsp.WEB_002dINF.layouts.default_jspx._jspx_meth_tiles_insertAttribute_1(org.apache.jsp.WEB_002dINF.layouts.default_jspx:469)




	at org.apache.jsp.WEB_002dINF.layouts.default_jspx._jspService(org.apache.jsp.WEB_002dINF.layouts.default_jspx:144)




	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)




	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)




	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:470)




	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:364)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)




	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)




	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)




	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)




	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)




	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)




	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)




	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:285)




	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:126)




	at org.apache.tiles.servlet.context.ServletTilesRequestContext.forward(ServletTilesRequestContext.java:241)




	... 59 more




Caused by: org.springframework.beans.NotReadablePropertyException: Invalid property &amp;amp;apos;seriesName&amp;amp;apos; of bean class [java.util.ArrayList]: Bean property &amp;amp;apos;seriesName&amp;amp;apos; is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?




	at org.springframework.beans.BeanWrapperImpl.getPropertyValue(BeanWrapperImpl.java:665)




	at org.springframework.beans.BeanWrapperImpl.getPropertyValue(BeanWrapperImpl.java:657)




	at org.springframework.web.servlet.support.BindStatus.&amp;lt;init&amp;gt;(BindStatus.java:147)




	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:175)




	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:195)




	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getName(AbstractDataBoundFormElementTag.java:161)




	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.writeDefaultAttributes(AbstractDataBoundFormElementTag.java:124)




	at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.writeDefaultAttributes(AbstractHtmlElementTag.java:409)




	at org.springframework.web.servlet.tags.form.InputTag.writeTagContent(InputTag.java:140)




	at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:91)




	at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:78)




	at org.apache.jsp.WEB_002dINF.views.series.create_jspx._jspx_meth_form_input_0(org.apache.jsp.WEB_002dINF.views.series.create_jspx:512)




	at org.apache.jsp.WEB_002dINF.views.series.create_jspx._jspService(org.apache.jsp.WEB_002dINF.views.series.create_jspx:147)




	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)




	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)




	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:470)




	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:364)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)




	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)




	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)




	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)




	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)




	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)




	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)




	at org.mortbay.jetty.servlet.Dispatcher.include(Dispatcher.java:192)




	at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:997)




	at org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.java:682)




	at org.apache.tiles.jsp.context.JspTilesRequestContext.include(JspTilesRequestContext.java:103)




	... 84 more












when i opened the SeriesController_Roo_Controller.aj file i found the reason, the createForm method adds the series entity and the series list with the same name to the model map






@RequestMapping(value = "/series/form", method = RequestMethod.GET)




    public String SeriesController.createForm(ModelMap modelMap) {




        modelMap.addAttribute("series", new Series());




        modelMap.addAttribute("series", Series.findAllSeries());




        return "series/create";




    }





</description>
			<version>1.0.1.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="729" opendate="2010-03-22 14:39:21" fixdate="2010-03-23 17:43:40" resolution="Complete">
		<buginformation>
			<summary>Server-side validations messages not displayed for entities with mixed-case names.</summary>
			<description>Possible related issue: ROO-696: wrong calculation of modelAttribute name in create.tagx and update.tagx.
Server-side validation messages are not displayed for any entity that has more than one capital letter in its name (e.g., LittleComment.java). Here&amp;amp;apos;s a simple script to help you replicate:






project --topLevelPackage com.mytest




persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY




entity --class ~.domain.LittleComment




field string --fieldName note --sizeMin 5 --sizeMax 800




controller all --package ~.web






If you go to ~/littlecomments?form and submit the form without entering a value for "note", you should get a validation error, but you don&amp;amp;apos;t.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="712" opendate="2010-03-18 03:04:49" fixdate="2010-03-24 16:23:01" resolution="Complete">
		<buginformation>
			<summary>Unable to obtain required element &amp;apos;name&amp;apos; from element &amp;apos;[repository: null]&amp;apos;</summary>
			<description>I added a repository in my pom that did not include a "name" element:






&amp;lt;repository&amp;gt;




    &amp;lt;id&amp;gt;spring-json&amp;lt;/id&amp;gt;




    &amp;lt;url&amp;gt;http://spring-json.sourceforge.net/repository&amp;lt;/url&amp;gt;




&amp;lt;/repository&amp;gt;






I started Roo and got the following error:

Unable to obtain required element &amp;amp;apos;name&amp;amp;apos; from element &amp;amp;apos;[repository: null]&amp;amp;apos;
I can add a name element to my repository definition, no problem. Just wanted to log this issue as the error message is not very particular and the condition of not having a name element in a repository definition should maybe not result in an error.
Seems to affect 1.1, but not 1.0.2.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.Repository.java</file>
		</fixedFiles>
	</bug>
	<bug id="743" opendate="2010-03-25 02:26:32" fixdate="2010-03-26 18:46:46" resolution="Complete">
		<buginformation>
			<summary>Missing toString() call in Controller, when registering converter of one field entities</summary>
			<description>When an entity is defined with only one field (besides "id" and "version" generated fields), and a controller is generated for that entity, the method registerConverters defines an anonymous class Converter&amp;lt;Entity, String&amp;gt; which tries to convert the entity type to String calling "public String convert(Entity entity)". If the entity has only one field, the toString() method of that field is not called as following:
public String convert(Entity entity) {
  return Entity.getField();
}
resulting on a compiler error:
[ERROR] Type mismatch: cannot convert from FieldType to String
Possible fix: call the toString() method only when there is one field within the entity, or call the toString() method no matter what</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="785" opendate="2010-04-07 19:58:49" fixdate="2010-04-15 21:34:30" resolution="Complete">
		<buginformation>
			<summary>Enumeration finder doesn&amp;apos;t work</summary>
			<description>I&amp;amp;apos;ve created a finder for a entity&amp;amp;apos;s enumeration field.
In the view, when I try to search using this with a valid value I get an exception &amp;amp;apos;Internal Error: A xxx is required.&amp;amp;apos;.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="765" opendate="2010-04-03 10:05:19" fixdate="2010-04-18 13:56:43" resolution="Complete">
		<buginformation>
			<summary>Incorrect maven dependency defined when using Oracle</summary>
			<description>When ORACLE is specified as the database in persistence setup the following dependency is added:
&amp;lt;dependency&amp;gt;
&amp;lt;groupId&amp;gt;com.oracle&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;ojdbc14&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;10.2.0.2&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
Which maven can&amp;amp;apos;t resolve: "Missing artifact com.oracle:ojdbc14:jar:10.2.0.2:compile"
The correct entry is:
&amp;lt;dependency&amp;gt;
&amp;lt;groupId&amp;gt;com.oracle.jdbc&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;com.springsource.oracle.jdbc&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;10.2.0.2&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">713</link>
		</links>
	</bug>
	<bug id="803" opendate="2010-04-20 06:56:16" fixdate="2010-04-29 11:51:33" resolution="Complete">
		<buginformation>
			<summary>Active generator &amp; user-managed</summary>
			<description>I have some tags with attribute z="user-managed" in views.
Active generator rewrites this views without any changes repeatedly everytime after roo start.
So, thare are many spam messages in console.
Example:
[FelixDispatchQueue] Managed SRC_MAIN_WEBAPP\WEB-INF\views\subcategories\list.jspx
[FelixDispatchQueue] Managed SRC_MAIN_WEBAPP\WEB-INF\views\subcategories\create.jspx
[FelixDispatchQueue] Managed SRC_MAIN_WEBAPP\WEB-INF\views\menu.jspx
[FelixDispatchQueue] Managed SRC_MAIN_WEBAPP\WEB-INF\views\subcategories\update.jspx
[FelixDispatchQueue] Managed SRC_MAIN_WEBAPP\WEB-INF\views\menu.jspx
[FelixDispatchQueue] Managed SRC_MAIN_WEBAPP\WEB-INF\views\categories\create.jspx
[FelixDispatchQueue] Managed SRC_MAIN_WEBAPP\WEB-INF\views\menu.jspx
[FelixDispatchQueue] Managed SRC_MAIN_WEBAPP\WEB-INF\views\categories\update.jspx
[FelixDispatchQueue] Managed SRC_MAIN_WEBAPP\WEB-INF\views\menu.jspx
[FelixDispatchQueue] Managed SRC_MAIN_WEBAPP\WEB-INF\views\categories\create.jspx
[FelixDispatchQueue] Managed SRC_MAIN_WEBAPP\WEB-INF\views\menu.jspx
[FelixDispatchQueue] Managed SRC_MAIN_WEBAPP\WEB-INF\views\categories\update.jspx
[FelixDispatchQueue] Managed SRC_MAIN_WEBAPP\WEB-INF\views\menu.jspx</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.support.util.XmlRoundTripUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="827" opendate="2010-05-02 20:14:00" fixdate="2010-05-02 20:19:43" resolution="Complete">
		<buginformation>
			<summary>testRemove() unit test fails for DataNucleus JPA provider</summary>
			<description>When an application is configured to use the DataNucleus orm provider the testRemove() unit tests fail. This has been fixed by adding a call em.flush() after the remove() is performed.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="644" opendate="2010-02-21 06:57:21" fixdate="2010-05-03 18:42:59" resolution="Complete">
		<buginformation>
			<summary>NullPointerException from Roo shell upon trying to manage existing (non-Roo-generated) Maven pom.xml</summary>
			<description>Offending pom.xml is attached.






cbeams@anakata:~/Desktop/Engagements/Redacted/eiws-courseware/enterprise-integration-1.0.4.RELEASE/spring-integration-intro-solution&amp;gt;$ roo.sh     ____  ____  ____  




   / __ \/ __ \/ __ \ 




  / /_/ / / / / / / / 




 / _, _/ /_/ / /_/ /  




/_/ |_|\____/\____/    1.0.0.RELEASE [rev 564]














Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.




java.lang.NullPointerException




    at org.springframework.roo.addon.maven.MavenProjectMetadataProvider.get(MavenProjectMetadataProvider.java:100)




    at org.springframework.roo.metadata.internal.DefaultMetadataService.get(DefaultMetadataService.java:106)




    at org.springframework.roo.metadata.internal.DefaultMetadataService.get(DefaultMetadataService.java:124)




    at org.springframework.roo.process.manager.internal.DefaultFileManager.notify(DefaultFileManager.java:147)




    at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:269)




    at org.springframework.roo.addon.maven.MavenProjectMetadataProvider.onFileEvent(MavenProjectMetadataProvider.java:299)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:324)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:306)




    at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:36)




    at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:15)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:131)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.completeStartup(DefaultProcessManager.java:53)




    at org.springframework.roo.bootstrap.ProcessManagerPostConstructBeanPostProcessor.onApplicationEvent(ProcessManagerPostConstructBeanPostProcessor.java:32)




    at org.springframework.roo.bootstrap.ProcessManagerPostConstructBeanPostProcessor.onApplicationEvent(ProcessManagerPostConstructBeanPostProcessor.java:20)




    at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:97)




    at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:294)




    at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:858)




    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:419)




    at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:139)




    at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:83)




    at org.springframework.roo.bootstrap.Bootstrap.&amp;lt;init&amp;gt;(Bootstrap.java:68)




    at org.springframework.roo.bootstrap.Bootstrap.main(Bootstrap.java:52)




roo&amp;gt; 





</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenProjectMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="558" opendate="2010-01-24 20:13:15" fixdate="2010-05-03 19:02:14" resolution="Duplicate">
		<buginformation>
			<summary>Need support for @IdClass</summary>
			<description>We need @RooEntity to support @IdClass annotation for we have existing project to migrate.
for ROO 1.0.0.RELEASE, following code will not work correct:
@Entity
@RooJavaBean
@RooToString
@RooEntity
@IdClass(AbcPK.class)
public class Abc {
	@Id
	@Column
	private String pk1;
	@Id
	@Column
	private String pk2;
	@Column
	private String name;
	@Column
	private Integer count;
}</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.java</file>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.RooIdentifier.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathCommands.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.MemberFindingUtils.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.serializable.SerializableMetadataProvider.java</file>
			<file type="D">org.springframework.roo.classpath.operations.RooIdentifierStrategy.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperations.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.RooEntity.java</file>
			<file type="M">org.springframework.roo.model.JavaSymbolName.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.populator.AutoPopulationUtils.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaCommands.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.EnumAttributeValue.java</file>
			<file type="M">org.springframework.roo.shell.converters.EnumConverter.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">505</link>
		</links>
	</bug>
	<bug id="741" opendate="2010-03-24 23:29:20" fixdate="2010-05-04 10:41:46" resolution="Fixed">
		<buginformation>
			<summary>Underscore (_) incorrectly rejected as first character by JavaType</summary>
			<description>Right now we can&amp;amp;apos;t create org.springframework.roo.model.JavaType when the class name begins with underscore (_). To avoid this problem I&amp;amp;apos;ve modified my roo copy commenting the rule that&amp;amp;apos;s enforcing the class name to start with capital letter.
Use case: we generate some metadata class associated with entity class. If original class is called com.contraza.test.domain.User then we generate com.contraza.test.domain.metadata._User (took the idea from JPA2 generated metadata).</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.model.JavaTypeTests.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
		</fixedFiles>
	</bug>
	<bug id="798" opendate="2010-04-17 18:37:09" fixdate="2010-05-04 12:02:31" resolution="Fixed">
		<buginformation>
			<summary>@RooToString doesn&amp;apos;t handle nulls correctly</summary>
			<description>Given an entity like this:
@Entity
@RooJavaBean
@RooToString
@RooEntity
public class HistoricalItem {
	@NotNull
	@Size(min = 1)
	private String title;
	@Temporal(TemporalType.TIMESTAMP)
	@DateTimeFormat(style = "MM", iso = ISO.DATE_TIME)
	private Calendar lastUpdated;
	@OneToMany(cascade = CascadeType.ALL, mappedBy = "historicalItem")
	private Set&amp;lt;HistoricalPrice&amp;gt; historicalPrices = new HashSet&amp;lt;HistoricalPrice&amp;gt;();
	@PrePersist
	protected void onCreate() 
{
		dateCreated = new GregorianCalendar();
		lastUpdated = new GregorianCalendar();
	}

	@PreUpdate
	protected void onUpdate() 
{
		lastUpdated = new GregorianCalendar();
	}
}
Roo generates a ToString like this:
public String HistoricalItem.toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("Id: ").append(getId()).append(", ");
        sb.append("Version: ").append(getVersion()).append(", ");
        sb.append("Title: ").append(getTitle()).append(", ");
        sb.append("DateCreated: ").append(getDateCreated().getTime()).append(", "); // Throws NPE !!!
        sb.append("LastUpdated: ").append(getLastUpdated().getTime()).append(", "); // Throws NPE !!!
        return sb.toString();
}
I need dateCreated and lastUpdated to be null when creating the entity so initializing them is not an option.
Roo needs to add the necessary null checks before attempting to call Calendar.getTime()</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.tostring.ToStringMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Supersede" description="supersedes">797</link>
		</links>
	</bug>
	<bug id="710" opendate="2010-03-16 20:03:01" fixdate="2010-05-04 12:44:51" resolution="Fixed">
		<buginformation>
			<summary>[patch] ItdSourceFileComposer isn&amp;apos;t appending type parameters in appendExtendsTypes()</summary>
			<description>ItdSourceFileComposer correctly takes type parameters in appendImplementsTypes() by means of calling extendsType.getNameIncludingTypeParameters() but in appendExtendsTypes() calls getFullyQualifiedTypeName() and getSimpleTypeName().
We have an addon that triggers on @RooRepository annotation on interfaces and classes (the interface&amp;amp;apos;s implementation). For the interface it creates an aspect file that should look like this:
privileged aspect UserRepository_Roo_Repository {    
    declare parents: UserRepository extends Repository&amp;lt;User, Long&amp;gt;;
}
For the implementation it looks like this:
privileged aspect UserRepositoryImpl_Roo_Repository {    
    declare parents: UserRepositoryImpl extends RepositoryImpl&amp;lt;User, Long&amp;gt;;    
    declare @type: UserRepositoryImpl: @Repository("userRepository");
}
With ItdSourceFileComposer unmodified the interface&amp;amp;apos;s aspect file looks like this:
privileged aspect UserRepository_Roo_Repository {    
    declare parents: UserRepository extends Repository;
}
Replacing the code in appendExtendsTypes() with the code in appendImplementsTypes() solves the problem.</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">49</link>
			<link type="Related" description="is related to">472</link>
		</links>
	</bug>
	<bug id="826" opendate="2010-05-02 19:19:22" fixdate="2010-05-04 14:44:16" resolution="Complete">
		<buginformation>
			<summary>SpelEvaluationException &amp;apos;Unexpected exception occurred accessing &amp;apos;object&amp;apos; as an implicit variable&amp;apos;</summary>
			<description>Creating a new Timer via the ten-minutes webapp leads to the discribed error.
Here is whta I did.
1) git checkout of roo
2) building roo with mvn install
3) executing the following roo script
// Spring Roo ENGINEERING BUILD [rev unknown] log opened at 2010-05-03 00:57:48
// script --file /home/ubuntu/roo/ten-minutes/log.roo
project --topLevelPackage com.tenminutes
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY 
entity --class ~.Timer --testAutomatically 
field string --fieldName message --notNull
controller all --package ~.web
selenium test --controller ~.web.TimerController
perform tests
perform package
// Spring Roo ENGINEERING BUILD [rev unknown] log closed at 2010-05-03 01:02:24
4) mvn jetty:run
5) see attached jetty.log</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.support.util.WebXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">7096</link>
		</links>
	</bug>
	<bug id="666" opendate="2010-03-03 03:04:50" fixdate="2010-05-04 14:59:20" resolution="Fixed">
		<buginformation>
			<summary>Roo rejects entity names containing "Test" even with --permitReservedWords</summary>
			<description>It it currently not possible to define entities whose names contain the reserved word "Test"
roo&amp;gt; 
entity --class ~.model.TestCase
Entity name rejected as conflicts with test execution defaults; please remove &amp;amp;apos;Test&amp;amp;apos; and/or &amp;amp;apos;TestCase&amp;amp;apos; 
This is even true if reserved words are explicitly allowed:
~.TestCase roo&amp;gt; entity --class ~.TestCase --permitReservedWords
Entity name rejected as conflicts with test execution defaults; please remove &amp;amp;apos;Test&amp;amp;apos; and/or &amp;amp;apos;TestCase&amp;amp;apos;</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">50</link>
		</links>
	</bug>
	<bug id="831" opendate="2010-05-04 18:25:34" fixdate="2010-05-05 11:57:24" resolution="Complete">
		<buginformation>
			<summary>Define DTD on XML</summary>
			<description>Hi!
When I update or create an xml file using the command:






OperationImpl.java






XmlUtils.writeXml(webXmlMutableFile.getOutputStream(), webXml);






The updated XML (i.e. layouts.xml) loses its DTD definition:






 




&amp;lt;!DOCTYPE tiles-definitions PUBLIC "-//Apache Software Foundation//DTD Tiles Configuration 2.1//EN" "http://tiles.apache.org/dtds/tiles-config_2_1.dtd"&amp;gt;




&amp;lt;tiles-definitions&amp;gt;






DOCTYPE disappears using this command in ROO v1.1.0-M1.
I solved it using Transformer and call the other writeXml method in XmlUtils to update/create a file:






OperationImpl.java






  final static String DOCTYPE_PUBLIC = "-//Apache Software Foundation//DTD Tiles Configuration 2.1//EN";




  final static String DOCTYPE_SYSTEM = "http://tiles.apache.org/dtds/tiles-config_2_1.dtd";




  .




  .




	TransformerFactory transformerFactory = TransformerFactory




		.newInstance();









	// Define DTD




	Transformer xformer;




	try {




	    xformer = transformerFactory.newTransformer();




	} catch (Exception ex) {




	    throw new IllegalStateException(ex);




	}









	xformer.setOutputProperty(OutputKeys.DOCTYPE_PUBLIC, DOCTYPE_PUBLIC);




	xformer.setOutputProperty(OutputKeys.DOCTYPE_SYSTEM, DOCTYPE_SYSTEM);









	XmlUtils.writeXml(xformer, webXmlMutableFile.getOutputStream(), layoutsXml);











In ROO v1.0.2 this bug doesn&amp;amp;apos;t exists.
Thanks!</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="832" opendate="2010-05-04 21:55:49" fixdate="2010-05-05 15:51:35" resolution="Complete">
		<buginformation>
			<summary>PersistentObjectException updating an Entity in new project</summary>
			<description>I updated to the last version of Roo in GIT.
Install Roo with &amp;amp;apos;mvn clean install&amp;amp;apos;.
Create a web project and run with &amp;amp;apos;mvn tomcat:run&amp;amp;apos;.
Inside the web application:

Create an Entity.
Update the Entity.

Exception updating the entity:






org.hibernate.PersistentObjectException: detached entity passed to persist:




org.test.aplicacion.domain.Person; nested exception is javax.persistence.PersistenceException:




org.hibernate.PersistentObjectException: detached entity passed to persist:




org.test.aplicacion.domain.Person






Thanks!</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.support.util.WebXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="794" opendate="2010-04-13 22:20:20" fixdate="2010-05-05 17:18:06" resolution="Fixed">
		<buginformation>
			<summary>PollingFileMonitorService never publishes notified file changes if notification was under an unmonitored file path</summary>
			<description>We are developing an Add-on to include some of the *nix shell commands to use inside of the Roo shell like mkdir, rmdir, rm, cp, mv, ls, tree.
The Add-on creates a directory with the command: create dir. 
The Roo shell is hanged in a loop when is no project defined in the working directory.
See the readme.txt file of the project for more information.
Thanks.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.file.monitor.polling.PollingFileMonitorService.java</file>
		</fixedFiles>
	</bug>
	<bug id="805" opendate="2010-04-20 10:05:53" fixdate="2010-05-05 18:45:50" resolution="Duplicate">
		<buginformation>
			<summary>Wrong generator  for TABLE_PER_CLASS inheritance</summary>
			<description>We cannot use a native, auto-generated id generator if we want to use TABLE_PER_CLASS inheritance
example:






LocalFile.java






@Entity




@RooJavaBean




@RooToString




@RooEntity




@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)




public class LocalFile {




....




}












LocalFile_Roo_Entity.aj






privileged aspect LocalFile_Roo_Entity {




...    




    @Id




    @GeneratedValue(strategy = GenerationType.AUTO)




    @Column(name = "id")




    private Long LocalFile.id;




...




}






I guess, Roo must generate:
@GeneratedValue(strategy = GenerationType.TABLE)
for entity which annotated with 
@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)
or provide possibility to change primary key generation strategy of annotated identifier field.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">746</link>
		</links>
	</bug>
	<bug id="788" opendate="2010-04-08 00:57:28" fixdate="2010-05-05 18:50:48" resolution="Complete">
		<buginformation>
			<summary>Project Addon Template out of date</summary>
			<description>I create an Add-on project with the roo shell command:






 




  project --topLevelPackage org.organization.roo.addon --template ROO_ADDON_SIMPLE






This project doesn&amp;amp;apos;t compile.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.AddOnJumpstartOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">728</link>
			<link type="Depends" description="depends on">761</link>
			<link type="Supersede" description="supersedes">750</link>
		</links>
	</bug>
	<bug id="746" opendate="2010-03-26 05:52:25" fixdate="2010-05-05 19:09:48" resolution="Fixed">
		<buginformation>
			<summary>Problem with --inheritanceType TABLE_PER_CLASS</summary>
			<description>When creating entities using --inheritanceType TABLE_PER_CLASS the project will not run.
e.g.
persistence setup --provider HIBERNATE --database MYSQL --databaseName roodb
entity --class ~.domain.Human --abstract --inheritancetype TABLE_PER_CLASS
entity --class ~.domain.Man --extends ~.domain.Human --testautomatically
Will not run due to problems with GenerationType.AUTO
-end-</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">833</link>
			<link type="Duplicate" description="is duplicated by">805</link>
		</links>
	</bug>
	<bug id="757" opendate="2010-03-31 02:09:56" fixdate="2010-05-06 13:08:22" resolution="Complete">
		<buginformation>
			<summary>remove method doesn&amp;apos;t work for generated aspect of mappedsuperclass</summary>
			<description>When generating a abstract superclass - mappedsuperclass -&amp;gt;
@Entity
@RooJavaBean
@RooToString
@RooEntity
@MappedSuperclass
public abstract class Myentity {
}
the corrosponding Myentity_Roo_Entity.aj generates a remove method -&amp;gt;
@Transactional
    public void Myentity.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) 
{
            this.entityManager.remove(this);
        }
 else 
{
            Myentity attached = this.entityManager.find(Myentity.class, this.id);
            this.entityManager.remove(attached);
        }
    }
This doesn&amp;amp;apos;t work for the finder part this.entityManager.find(Myentity.class, this.id);
instead it should have generated -&amp;gt;
this.entityManager.find(this.getClass(), this.id);
</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="839" opendate="2010-05-08 13:45:35" fixdate="2010-05-08 13:53:15" resolution="Fixed">
		<buginformation>
			<summary>Executing commands via OS CLI argument causes Felix classloading failure</summary>
			<description>Using roo-dev "script vote.roo" would result in an "ERROR: JarContent: Unable to read bytes. (java.lang.IllegalStateException: zip file closed)" error consistent with https://issues.apache.org/jira/browse/FELIX-2128 as Felix had already shutdown before the background ProcessManager thread had completed execution.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.jline.JLineShell.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1037</link>
		</links>
	</bug>
	<bug id="838" opendate="2010-05-06 13:23:35" fixdate="2010-05-08 13:57:22" resolution="Fixed">
		<buginformation>
			<summary>ROO Components get activated/deactivated multiple times</summary>
			<description>I was debugging one issue I had with custom implementation of the CommandMarker and noticed something rather strange.
First everything looked fine, then i had to register custom type Converter and so I did:






protected void activate(ComponentContext context) {




	staticFieldConverter.add(ChannelType.class);	




}






After adding this it stop working. While debugging i noticed that this method has been called repeatedly and infinitely due to the exception being thrown in the add(..) method of StaticFieldConverter. The exception has to do with the component already being registered. When I started to look at some of the existing CommandMarkers in the existing add-ons I noticed that there is also a deactivate(..) method where these type Converters are removed from the converter map (basic undo operation), so I did the same and everything started to work:






protected void deactivate(ComponentContext context) {




	staticFieldConverter.remove(ChannelType.class);




}






By that time I was already in the debug mode so I looked further and noticed some strange things.
As CommandMarker was registered as an OSGi service (@Service) and ServiceEvent is being processed by the ServiceListener there is a call to  getClassName(..) method which triggers activate(..) method on the actual service object which is the method that adds the Converter to the map. 
Right after that you execute the following:






if (sr != null) {




	myContext.ungetService(sr);




}






And this is where I see the issue. 
First, this "if" check will never return &amp;amp;apos;false&amp;amp;apos;, since the OSGi ServiceEvent always has ServiceReference which is not null. Even during the UNREGISTERING event ServiceReference is there to let users know that they are now dealing with the stale reference and have to clean up.
This means that  myContext.ungetService(sr) method is executed always, thus releasing the service object references held by this ServiceReference. This also means that the next time this service is required a new instance of service object and ServiceReference will be created. However, the StaticFieldConverter service is still alive and well at the time and still holds the reference to the CommandMarker that was registered there before and when the new instance of the CommandMarker service is created it also triggers the execution of the activate(..) method which attempts to add a new instance of the CommandMarker to the map. Based on the code in StaticFieldConverter this invocation results in exception and I guess Felix attempts a retry, which results in the the activate(..) method calls to continue infinitely. This also explains why adding deactivate(..) method solves(hides?) the problem. So, unless I am missing something fundamental in Roo design I believe adding deactivate(..) method to simply &amp;amp;apos;undo&amp;amp;apos; the activate(..) method actually hides the problem, because now depending on the scenario underlying services are created, activated and deactivated multiple times (some times before they are even used) resulting in extra code, unnecessary instances and GC.
Simple FIX did a job for me and although I didn&amp;amp;apos;t profile it does feel a bit faster after i removed the following code from org.springframework.roo.startlevel.Activator (line ~ 91-93)






if (sr != null) {




	myContext.ungetService(sr);




}






</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.startlevel.Activator.java</file>
		</fixedFiles>
	</bug>
	<bug id="836" opendate="2010-05-06 03:55:49" fixdate="2010-05-08 14:24:04" resolution="Fixed">
		<buginformation>
			<summary>CTRL+D renders NPE in JLine Shell</summary>
			<description>Hitting CTRL+D to log out from the Roo Shell it crashes with the following stacktrace:
{{
roo&amp;gt; Exception in thread "JLine Shell" java.lang.IllegalStateException: java.lang.NullPointerException                                                                                                           
        at org.springframework.roo.felix.FelixDelegator.onShellStatusChange(FelixDelegator.java:216)
        at org.springframework.roo.shell.event.AbstractShellStatusPublisher.setShellStatus(AbstractShellStatusPublisher.java:49)
        at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:201)
        at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:122)
        at java.lang.Thread.run(Thread.java:636)
Caused by: java.lang.NullPointerException
        at org.springframework.roo.felix.FelixDelegator.onShellStatusChange(FelixDelegator.java:212)
        ... 4 more
}}
The same shell command works in previously versions like 1.0.2.RELEASE.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.jline.JLineShell.java</file>
			<file type="M">org.springframework.roo.felix.FelixDelegator.java</file>
		</fixedFiles>
	</bug>
	<bug id="652" opendate="2010-02-24 04:05:29" fixdate="2010-05-08 14:42:39" resolution="Fixed">
		<buginformation>
			<summary>Some "perform" commands can cause Roo shell to hang on Windows</summary>
			<description>There seems to be a bug in the way Roo shell deals with issuing maven commands to the system shell.
This happens when using the liquibase plugin for example.</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="853" opendate="2010-05-13 01:19:09" fixdate="2010-05-13 05:11:13" resolution="Fixed">
		<buginformation>
			<summary>AddOn template still requires package name like com.*.roo.addon, although such limitation seems superflous after migration to OSGi </summary>
			<description>When calling project --topLevelPackage de.mycompany.roo.example.addon --template ROO_ADDON_SIMPLE , I get
java.lang.IllegalArgumentException: Roo add-ons must have a top-level package starting with .com or .net or .org; eg com.mycompany.myproject.roo.addon
I understand, that such naming convention might have been necessary for efficient classpath scanning or so, but I think, after migration to osgi, this limitation can now be dropped.
Two reasons for this:
1) Not all companies have com or net or org domains...
2) When a company (or someone else) decides to contribute several roo addons, the package name will typically start with something like  de.mycompany.roo.name_of_the_addon.*  I is not so nice to have to include "roo" a second time at the end of the package name ...
BTW.: Only the shell command enforces this naming restriction. We created our POM for the http://code.google.com/p/spring-roo-equals-roo-addon/ by hand and there was no error at runtime, although we did not adhere to the naming convention... </description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">362</link>
		</links>
	</bug>
	<bug id="872" opendate="2010-05-23 11:00:33" fixdate="2010-05-30 13:00:23" resolution="Duplicate">
		<buginformation>
			<summary>Support "field lob" for entities</summary>
			<description>It would be nice to have the ability to create @Lob annotated fields from within the Roo shell.
Command:
field lob -fieldName myField
Creates: 
@Lob
private String myField;</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">513</link>
		</links>
	</bug>
	<bug id="866" opendate="2010-05-20 00:48:08" fixdate="2010-05-30 15:33:21" resolution="Complete">
		<buginformation>
			<summary>VersionField = "" on @RooEntity causes Controller Scaffolding error</summary>
			<description>when using following annotation on an entity:
@RooEntity(versionField = "")
and subsequently generating a Spring MVC controller, using "controller scaffold...."
following error is displayed in the roo shell:
NullPointerException at org.springframework.roo.addon.web.mvc.controller.W ebScaffoldMetadata.getRegisterConvertersMethod(Web ScaffoldMetadata.java:691)</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="946" opendate="2010-06-01 13:34:35" fixdate="2010-06-01 13:44:14" resolution="Complete">
		<buginformation>
			<summary>Unit tests fail when DoD-generated values for String fields annotated with @Size are outside the range of the specified min and/or max attribute values</summary>
			<description>When generated data on demand values for fields are not within the length range specified in the @Size annotation, unit tests fail during a persist(). </description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1176</link>
		</links>
	</bug>
	<bug id="969" opendate="2010-06-07 15:13:52" fixdate="2010-06-07 15:18:13" resolution="Fixed">
		<buginformation>
			<summary>AbstractItdMetadataProvider does not skip processing if the governor&amp;apos;s type metadata is invalid</summary>
			<description>AbstractItdMetadataProvider fails to consider if the governor&amp;amp;apos;s type metadata was returned as non-null but was invalid. The change should be:






-               if (governorPhysicalTypeMetadata == null) {




+               if (governorPhysicalTypeMetadata == null || !governorPhysicalTypeMetadata.isValid()) {





</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="975" opendate="2010-06-08 13:21:42" fixdate="2010-06-08 15:48:47" resolution="Complete">
		<buginformation>
			<summary>addon-web-mvc-jsp using incorrect package name</summary>
			<description>The web MVC JSP add-on currently uses a top-level package of org.springframework.roo.addon.mvc.jsp. It should be org.springframework.roo.addon.web.mvc.jsp in order to be consistent with the artifactId (which is correctly org.springframework.roo.addon.web.mvc.jsp) and the add-on directory name (which is correctly addon-web-mvc-jsp).</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrJspMetadataListener.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.tiles.TilesOperationsImpl.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.tiles.TilesOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperationsImpl.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspOperations.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperationsImpl.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.menu.MenuOperations.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.menu.MenuOperationsImpl.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspMetadata.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspCommands.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="is depended on by">976</link>
		</links>
	</bug>
	<bug id="857" opendate="2010-05-15 05:49:43" fixdate="2010-06-08 16:45:46" resolution="Complete">
		<buginformation>
			<summary>Dependencies form:page in create.jspx doesn&amp;apos;t have body</summary>
			<description>





 




&amp;lt;form:page id="fs:test.domain.Location" render="${not empty dependencies}" title="Location" z="/oXxrmJ+WSAcy2BYH+3y3QM8PRA="/&amp;gt;




    &amp;lt;field:reference field="${dependency[0]}" id="s:test.domain.Location.${dependency[0]}" path="/${dependency[1]}" z="Ww0zTECBl8eNpfFjg0LE38lLoWw="/&amp;gt;






field:reference tag should be in the form:page body
Missing &amp;lt;/form:page&amp;gt;, it&amp;amp;apos;s closed already</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="864" opendate="2010-05-19 08:02:32" fixdate="2010-06-08 17:52:41" resolution="Fixed">
		<buginformation>
			<summary>Give more details with error message "The entire package name must be lowercase"</summary>
			<description>When starting roo, I receive the message "The entire package name must be lowercase".
Roo starts but I cannot execute any commands.
I found where the message is thrown in an AssertTrue statement assumption. 
I found where in the ROO code that throws the assertion: https://src.springframework.org/svn/spring-roo/branches/branch-1.0.x/model/src/main/java/org/springframework/roo/model/JavaPackage.java
The problem is I am unsure where or how to find out what could be wrong with my code.  
This is a project that has been running just fine.  I deleted some classes and now I cannot get roo to run.
Based upon the assertion, it is running as specified so it may not be a bug, but I cannot figure out where in the load process it is failing.</description>
			<version>1.0.2.RELEASE</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.model.JavaPackage.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">898</link>
		</links>
	</bug>
	<bug id="930" opendate="2010-06-01 04:48:06" fixdate="2010-06-14 10:32:54" resolution="Complete">
		<buginformation>
			<summary>@Transient primitive field creates non-compilable DoD</summary>
			<description>Given the class "Task", adding @Transient to a simple boolean field causes Roo to generate the following code in TaskDataOnDemand_Roo_DataOnDemand.getNewTransientTask(int index):






obj.setIsExpired(null);






This causes a compile error b/c "setIsExpired(boolean expired)" method accepts a primitive and so cannot take NULL as an argument.
To recreate, run the following script, then add @Transient to the "expired" field:

project --topLevelPackage com.mytest --projectName mytest
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY 
entity --class ~.domain.Task
field string --fieldName description
field boolean --fieldName expired --primitive
test integration 
perform eclipse
</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="880" opendate="2010-05-25 02:01:38" fixdate="2010-06-14 16:23:09" resolution="Complete">
		<buginformation>
			<summary>Roo 1.1.0.M1 with JPA-2.0 seems to break Java 5 compatibility</summary>
			<description>The following Roo script:
project --topLevelPackage com.example
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY
entity --class ~.domain.Foo --testAutomatically
field string --fieldName name
perform tests
quit
works as expected under Java6 (build 1.6.0_12-b04). However, in Java 5 the following command
$roo script --file ../jira.roo &amp;gt;jira.log 2&amp;gt;&amp;amp;1
results in a failure of all unit tests. The exception at the bottom of the stacktrace is: org.hibernate.HibernateException: Unable to get the default Bean Validation factory
</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="881" opendate="2010-05-25 02:18:08" fixdate="2010-06-17 13:01:26" resolution="Complete">
		<buginformation>
			<summary>scaffold method generation fails if @embedded fields are present</summary>
			<description>Generating web controller scaffolds for an entity that has an @Embedded field causes the code generation to fail with the message "Method ... failed to provide a body, despite being identified for ITD inclusion"
The method that fails to be created is the populateXXX method, where XXX is the embedded field. The current code just returns an empty method body, which later fails an assertion.
As it is not generally possible to find reasonable instances to populate the controller, an empty list should be returned in this case. </description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1015" opendate="2010-06-17 18:30:08" fixdate="2010-06-17 21:52:12" resolution="Duplicate">
		<buginformation>
			<summary>undo feature for roo</summary>
			<description>example, we just created scaffold of controllers.. can we rollback so none of controllers are created?  would be nice if we can have rollback feature in ROO</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.git.GitShellEventListener.java</file>
			<file type="M">org.springframework.roo.addon.git.GitOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.git.GitCommands.java</file>
			<file type="D">org.springframework.roo.addon.git.GitCommandResult.java</file>
			<file type="M">org.springframework.roo.addon.git.GitOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">911</link>
			<link type="Duplicate" description="duplicates">482</link>
		</links>
	</bug>
	<bug id="1013" opendate="2010-06-17 13:58:28" fixdate="2010-06-18 00:07:13" resolution="Duplicate">
		<buginformation>
			<summary>&amp;apos;perform test&amp;apos; does not run in STS</summary>
			<description>on roo shell, when i run &amp;amp;apos;perform test&amp;amp;apos; inside STS(eclipse) i just get back roo shell and maven test is not run. but when i go to console and run &amp;amp;apos;mvn test&amp;amp;apos; i able to run the test</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">867</link>
		</links>
	</bug>
	<bug id="867" opendate="2010-05-20 07:30:56" fixdate="2010-06-18 11:17:28" resolution="Complete">
		<buginformation>
			<summary>perform shows no output in STS</summary>
			<description>Looks a bit like ROO-392, but for the current downloadable version.
I did more or less what the introduction told me to.
When I execute perform tests I get:











    ____  ____  ____  




   / __ \/ __ \/ __ \ 




  / /_/ / / / / / / / 




 / _, _/ /_/ / /_/ /  




/_/ |_|\____/\____/    1.1.0.M1 [rev 3a0b8a3]














Welcome to Spring Roo. For assistance press CTRL+SPACE or type "hint" then hit ENTER.




roo&amp;gt; 




roo&amp;gt; 




perform tests




roo&amp;gt; 






Maybe this is an issue with my setup, here is what I did:
Download STS
Start STS
Go through tutorial
perform tests ==&amp;gt; mvn.bat not found.
Downloaded maven, add maven to PATH
perform tests
Restart STS
perform tests
No luck..</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1013</link>
		</links>
	</bug>
	<bug id="914" opendate="2010-05-30 04:59:47" fixdate="2010-06-20 12:49:45" resolution="Invalid">
		<buginformation>
			<summary>Oracle persistence: wrong URL in database.properties</summary>
			<description>After having create a topLevelPackage for a new roo project and after executing the persistence setup with
persistence setup --provider ECLIPSELINK --database ORACLE --databaseName orcl --userName oe --password  oe
(OE is a default test-schema delivered from Oracle for testing and training purposes)
the created database.properties contains a wrong URL:
jdbc\:oracle\:thin\:@localhost\:1521/orcl
The correct one should not contain any slashes/backslashes and is of the following form (maintaining the replacements):
jdbc:oracle:thin:@localhost:1521:orcl
Having replaced that, the database connection works.</description>
			<version>1.0.1.RELEASE</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1203</link>
		</links>
	</bug>
	<bug id="868" opendate="2010-05-20 22:13:23" fixdate="2010-06-23 05:46:11" resolution="Fixed">
		<buginformation>
			<summary>GWT support broken</summary>
			<description>As already pointed out in #ROO-865 the expense demo does not work. Digging deeper it seems that the GWT support is broken. I created two demos. The first has a simple domain object and shows the behavior described in #ROO-865. The second has no domain object and doesn&amp;amp;apos;t work but with a different error.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="1027" opendate="2010-06-22 23:01:15" fixdate="2010-06-28 12:59:40" resolution="Complete">
		<buginformation>
			<summary>Custom finder for many fields cause file name too long</summary>
			<description>After using the command:
roo&amp;gt; finder add --finderName findTerceroesByDocumentoIdentificacionLikeAndApellido1LikeAndApellido2LikeAndNombreLikeAndTipoPersona(And...)
for creating a custom finder with MANY fields, all seems ok, but the jspx name generated is too long and causes internal error.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="1050" opendate="2010-06-30 09:24:43" fixdate="2010-06-30 17:20:25" resolution="Complete">
		<buginformation>
			<summary>SolrSearch: The method message_getId() is undefined</summary>
			<description>





project --topLevelPackage some.solr.test




persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY




entity --class ~.domain.Message




field string name --notNull




solr setup




solr add --class some.solr.test.domain.Message




perform tests






fails with: error at sid.addField("id", "message_" + message_getId());
The fix this edit Message_Roo_SolrSearch.aj and change:






sid.addField("id", "message_" + message_getId());






to






sid.addField("id", "message_" + message.getId());





</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1056" opendate="2010-07-03 05:22:08" fixdate="2010-07-03 09:36:27" resolution="Duplicate">
		<buginformation>
			<summary>Command &amp;apos;help&amp;apos; not found</summary>
			<description>~.dto.SubCategory roo&amp;gt; hint
At this stage of the project, you have a few options:
....

Discover all Roo commands by typing &amp;amp;apos;help&amp;amp;apos;
~.dto.SubCategory roo&amp;gt; help
Command &amp;amp;apos;help&amp;amp;apos; not found (for assistance press TAB or type "hint" then hit ENTER)

</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.osgi.SimpleParserComponent.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1049</link>
		</links>
	</bug>
	<bug id="1062" opendate="2010-07-04 06:45:18" fixdate="2010-07-04 08:19:00" resolution="Duplicate">
		<buginformation>
			<summary>help command (instead of hint)</summary>
			<description>This was brought up in a recent Java Posee discussion. I don&amp;amp;apos;t necessarily like their coverage of ROO so far in Java Posee, but I do agree that help is a better command than hint.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.osgi.SimpleParserComponent.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1049</link>
		</links>
	</bug>
	<bug id="1057" opendate="2010-07-03 06:16:15" fixdate="2010-07-04 11:36:58" resolution="Fixed">
		<buginformation>
			<summary>wrong property name encoding for mailSender</summary>
			<description>command:






email sender setup --hostServer xxx --encoding xxx --protocol xxx --port xxx --username xxx --password xxx






result:






&amp;lt;bean class="org.springframework.mail.javamail.JavaMailSenderImpl" id="mailSender"&amp;gt;




        &amp;lt;property name="host" value="${email.host}"/&amp;gt;




        &amp;lt;property name="port" value="${email.port}"/&amp;gt;




        &amp;lt;property name="encoding" value="${email.encoding}"/&amp;gt;




        &amp;lt;property name="username" value="${email.username}"/&amp;gt;




        &amp;lt;property name="password" value="${email.password}"/&amp;gt;




&amp;lt;/bean&amp;gt;






Class JavaMailSenderImpl have not property "encoding". There is property "defaultEncoding"</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.email.MailOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1059" opendate="2010-07-03 09:38:04" fixdate="2010-07-04 12:42:05" resolution="Fixed">
		<buginformation>
			<summary>assertion error after pushing method of converter creation in *Controller.java</summary>
			<description>





[FelixDispatchQueue] Method &amp;amp;apos;getCategoryConverter&amp;amp;apos; already defined in target type &amp;amp;apos;xxx.SubCategoryController&amp;amp;apos; (ITD target &amp;amp;apos;xxx.SubCategoryController_Roo_Controller&amp;amp;apos;)




                     java.lang.IllegalArgumentException: Method &amp;amp;apos;getCategoryConverter&amp;amp;apos; already defined in target type &amp;amp;apos;xxx.SubCategoryController&amp;amp;apos; (ITD target &amp;amp;apos;xxx.SubCategory




Controller_Roo_Controller&amp;amp;apos;)




                         at org.springframework.roo.support.util.Assert.isNull(Assert.java:89)




                         at org.springframework.roo.classpath.details.DefaultItdTypeDetailsBuilder.addMethod(DefaultItdTypeDetailsBuilder.java:96)




                         at org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.getRegisterConvertersMethod(WebScaffoldMetadata.java:729)




                         at org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.&amp;lt;init&amp;gt;(WebScaffoldMetadata.java:123)




                         at org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadataProviderImpl.getMetadata(WebScaffoldMetadataProviderImpl.java:77)




                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:261)




                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:126)




                         at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:170)




                         at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:262)




                         at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:124)




                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:346)




                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:320)




                         at org.springframework.roo.process.manager.internal.DefaultFileManager.notify(DefaultFileManager.java:189)




                         at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:276)




                         at org.springframework.roo.addon.maven.MavenProjectMetadataProvider.onFileEvent(MavenProjectMetadataProvider.java:509)




                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:346)




                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:320)




                         at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:36)




                         at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:15)




                         at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:169)




                         at org.springframework.roo.process.manager.internal.DefaultProcessManager.completeStartup(DefaultProcessManager.java:91)




                         at org.springframework.roo.process.manager.internal.DefaultProcessManager$1.frameworkEvent(DefaultProcessManager.java:62)




                         at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListenerCallback(EventDispatcher.java:767)




                         at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:724)




                         at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:942)




                         at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)




                         at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)




                         at java.lang.Thread.run(Thread.java:619)





</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1022" opendate="2010-06-20 01:52:34" fixdate="2010-07-04 12:46:54" resolution="Fixed">
		<buginformation>
			<summary>package-info.java fails with &amp;apos;The first letter of the type name portion must be uppercase&amp;apos;</summary>
			<description>If a package definition package-info.java file is present in the project source  (src/main/java) and the &amp;amp;apos;controller class ..&amp;amp;apos; command is attempted then Roo fails with the following error:
"The first letter of the type name portion must be uppercase (attempted &amp;amp;apos;&amp;lt;mypackage&amp;gt;.package-info&amp;amp;apos;)"
The complete stack trace is attached (package-info-error-stacktrace.txt). Also attached is a sample project that reproduces the issue. 
This seems to be a similar issue to http://jira.springframework.org/browse/ROO-73 but happens in different execution path. 
An attempt to relax the check conditions in the JavaType.jave caused some other (ASTParesr) issues. 
So as temporal fix I have pached the org.springframework.roo.classpath.itd.AbstractItdMetadataProvider to filter out the package-info classes (line 91):
 if (!fullPath.endsWith("package-info.java"))
{
   fullPath = fullPath.substring(1, fullPath.lastIndexOf(".java")).replace(
      File.separatorChar, &amp;amp;apos;.&amp;amp;apos;); 
   JavaType javaType = new JavaType(fullPath);
   String mid = createLocalIdentifier(javaType, path);
   allMids.add(mid);
 }</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">73</link>
			<link type="Supersede" description="is superseded by">1364</link>
		</links>
	</bug>
	<bug id="1049" opendate="2010-06-30 08:08:24" fixdate="2010-07-04 13:54:33" resolution="Fixed">
		<buginformation>
			<summary>Command &amp;apos;help&amp;apos; and &amp;apos;reference guide&amp;apos; not found</summary>
			<description>Following the last suggestion shown by the hint command 
roo&amp;gt; hint
At this stage of the project, you have a few options:

List all hint topics via &amp;amp;apos;hint topics&amp;amp;apos;
Create more fields with &amp;amp;apos;hint fields&amp;amp;apos;
Create more entities with &amp;amp;apos;hint entities&amp;amp;apos;
Create a web controller with &amp;amp;apos;hint controllers&amp;amp;apos;
Create dynamic finders with &amp;amp;apos;hint finders&amp;amp;apos;
Setup your logging levels via &amp;amp;apos;hint logging&amp;amp;apos;
Run tests via Maven (type &amp;amp;apos;perform tests&amp;amp;apos;)
Build a deployment artifact (type &amp;amp;apos;perform package&amp;amp;apos;)
Learn about Eclipse integration by typing &amp;amp;apos;hint eclipse&amp;amp;apos;
Add support for Google Web Toolkit via &amp;amp;apos;hint gwt&amp;amp;apos;
Discover all Roo commands by typing &amp;amp;apos;help&amp;amp;apos;

One gets the following error message:
roo&amp;gt; help
Command &amp;amp;apos;help&amp;amp;apos; not found (for assistance press TAB or type "hint" then hit ENTER) </description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.osgi.SimpleParserComponent.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1056</link>
			<link type="Duplicate" description="is duplicated by">1062</link>
			<link type="Related" description="is related to">986</link>
		</links>
	</bug>
	<bug id="1037" opendate="2010-06-27 14:15:40" fixdate="2010-07-04 14:13:49" resolution="Fixed">
		<buginformation>
			<summary>Exceptions when Roo ends</summary>
			<description>I am getting exceptions when a Roo script ends.  Everything generated by Roo seems to work OK, but it is disconcerting.  I have seen two exceptions - one involving Zip, one involving a Timer:



EXCEPTION 1 **



... snip&amp;gt; ...
quit
// Spring Roo 1.1.0.M2 [rev 2034662] log closed at 2010-06-21 15:48:36
Milliseconds required: 74451
Total execution time 82226 ms
ERROR: JarContent: Unable to read bytes. (java.lang.IllegalStateException: zip file closed)
java.lang.IllegalStateException: zip file closed
	at java.util.zip.ZipFile.ensureOpen(ZipFile.java:403)
	at java.util.zip.ZipFile.getEntry(ZipFile.java:148)
	at java.util.jar.JarFile.getEntry(JarFile.java:208)
	at org.apache.felix.framework.util.JarFileX.getEntry(JarFileX.java:61)
	at org.apache.felix.framework.cache.JarContent.getEntryAsBytes(JarContent.java:120)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.findClass(ModuleImpl.java:1781)
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:758)
	at org.apache.felix.framework.ModuleImpl.access$100(ModuleImpl.java:61)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1733)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.logException(DefaultProcessManager.java:143)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.backgroundPoll(DefaultProcessManager.java:117)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.timerBasedPoll(DefaultProcessManager.java:225)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager$2.run(DefaultProcessManager.java:75)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
Roo exited with code 0



EXCEPTION 2 **



quit
// Spring Roo 1.1.0.M2 [rev 2034662] log closed at 2010-06-21 15:48:36
Milliseconds required: 79280
[Timer-1] java.lang.NullPointerException
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:192)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.backgroundPoll(DefaultProcessManager.java:114)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.timerBasedPoll(DefaultProcessManager.java:225)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager$2.run(DefaultProcessManager.java:75)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultProcessManager.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">1938</link>
			<link type="Related" description="is related to">839</link>
		</links>
	</bug>
	<bug id="1045" opendate="2010-06-29 10:41:13" fixdate="2010-07-04 15:43:15" resolution="Fixed">
		<buginformation>
			<summary>Big performance problems with roo shell</summary>
			<description>Having a project with about 90 entities (not big ones), integration tests and controllers make roo shell hang up for about 20-40 minutes when starting, with the CPU at 100%.
I have created a basic roo script creating 100 entities with only 5 fields in each and without any relations. It also creates the controllers and the integration tests.
After the script is done, just exit roo and start the shell again and it start consuming CPU and hanging. Just type &amp;amp;apos;hint&amp;amp;apos; and it&amp;amp;apos;s only when you get the prompt back that roo becomes enable. Then, when you do some manual changes in entities, roo has really some trouble identifying and applying changes.
We have decided to use roo to develop our new application, but if this issue can&amp;amp;apos;t be resolved (or at lease have a workaround), we&amp;amp;apos;ll have to continue without roo.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.metadata.DefaultMetadataService.java</file>
			<file type="M">org.springframework.roo.metadata.MetadataService.java</file>
		</fixedFiles>
	</bug>
	<bug id="1071" opendate="2010-07-06 07:27:52" fixdate="2010-07-06 12:04:01" resolution="Duplicate">
		<buginformation>
			<summary>Property &amp;apos;id&amp;apos; not found when listing Domain Entities on Web Page</summary>
			<description>The Property &amp;amp;apos;id&amp;amp;apos; is not being found on Domain Entity when user lists objects on Spring Web-based page.
TO REPRODUCE:
1. Execute roo
2. Copy &amp;amp; paste the following roo commands
project --type java.lang.Integerproject --topLevelPackage com.acme --projectName Acme
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY
entity --class ~.server.domain.Client --identifierField cliendID --identifierColumn cliendID --testAutomatically
field string --fieldName firstName --sizeMax 25
field string --fieldName lastName --sizeMax 25 --notNull
field date --type java.util.Date --fieldName dateOfBirth --notNull
controller all --package com.acme.web
logging setup --level DEBUG
3. Quit roo shel and start tomcat--&amp;gt; mvn tomcat:run
4. Go to http://localhost:8080/Acme
5. Insert at least one record by using Create new Client Form
6. List all clients
As you can see, an internal error appears. This is happening because Client entity was created with --identifierField cliendID --identifierColumn cliendID attributes.
"entity --class ~.server.domain.Client --identifierField cliendID --identifierColumn cliendID --testAutomatically"
It looks like the JSP is using the default property &amp;amp;apos;id&amp;amp;apos; to display the information on the web page.
See stacktrace.txt for more information.</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1041</link>
		</links>
	</bug>
	<bug id="873" opendate="2010-05-23 12:04:22" fixdate="2010-07-06 14:52:59" resolution="Complete">
		<buginformation>
			<summary>Integration Test Error STS 2.3.3M1 with ROO 1.1.0M1</summary>
			<description>Executing this script (with changing the db properties where needed) works fine






// Spring Roo 1.1.0.M1 [rev 3a0b8a3] log opened at 2010-05-21 20:43:39




project --topLevelPackage com.test --projectName Test




persistence setup --provider HIBERNATE --database MYSQL 




entity --class ~.Parent --testAutomatically 




entity --class ~.Child --testAutomatically 




field reference --fieldName parent --type com.test.Parent --notNull




// Setup the database.properties file for the database 




perform tests






That ends up with a test ChildIntegrationTest ... running this through STS 2.3.3 (not via Maven) this test fails with ....






javax.validation.ConstraintViolationException: validation failed for classes [com.test.Child] during persist time for groups [javax.validation.groups.Default, ]




	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:132)




	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:71)




	at org.hibernate.action.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:159)




	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:65)




	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:268)






And I traced this down through debugging .... to in the Parent Data on Demand Aspect






public Parent ParentDataOnDemand.getRandomParent() {




        init();




        Parent obj = data.get(rnd.nextInt(data.size()));




        return Parent.findParent(obj.getId());




    }






The get Parent.findParent call is returning null. And this is being called during the ChildDataOnDemand init method which then goes and tries to save the Child with a null parent which causes the validation exception.
It also doesn&amp;amp;apos;t seem to happen with HyperSonic, I&amp;amp;apos;m using innodb for the tables, and I tried changing the dialect for hibernate to the innodb one but still the same problem.
</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1127</link>
			<link type="Related" description="is related to">734</link>
		</links>
	</bug>
	<bug id="1075" opendate="2010-07-07 02:30:33" fixdate="2010-07-08 01:24:35" resolution="Complete">
		<buginformation>
			<summary>DataOnDemand does not respect the optional=false attribute of @ManyToOne</summary>
			<description>When specifying a ManyToOne annotation, the optional = false attribute implies a NOT NULL column. However, the DataOnDemand aspect will not populate the field, or provide the link to the related DataOnDemand bean unless @NotNull is explicitly included.
Proposed fix: Have @ManyToOne(optional = false) cause the same behaviour as @NotNull</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1083" opendate="2010-07-10 03:28:02" fixdate="2010-07-10 11:49:40" resolution="Fixed">
		<buginformation>
			<summary>view-controller command doesn&amp;apos;t work properly</summary>
			<description>wrong page generation:
1. name of generated page is &amp;amp;apos;index.jspx&amp;amp;apos; as execution result of command.
2. title is ignored at generated page. result:






   	&amp;lt;spring:message var="app_name" code="application_name" /&amp;gt;




   	&amp;lt;spring:message var="title" code="welcome_titlepane" arguments="${app_name}" /&amp;gt;




   	&amp;lt;page:page id="title" title="${title}"&amp;gt;




  			&amp;lt;h3&amp;gt;Controller Index Page&amp;lt;/h3&amp;gt;




  	&amp;lt;/page:page&amp;gt;





 </description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">820</link>
		</links>
	</bug>
	<bug id="1086" opendate="2010-07-11 05:22:08" fixdate="2010-07-11 12:47:55" resolution="Fixed">
		<buginformation>
			<summary>wrong generation by view-controller command</summary>
			<description>roo&amp;gt; web mvc install view --path / --viewName about --title About
1. results (double slash): 
view.xml: &amp;lt;put-attribute name="body" value="/WEB-INF/views//about.jspx"/&amp;gt;
menu.jspx: &amp;lt;menu:item id="i_view_about_id" messageCode="global_menu_new" url="//about" z="SYxt/81HP69IsYlNYu4u37Hse1g="/&amp;gt;
webmvc-config.xml: &amp;lt;mvc:view-controller path="//about"/&amp;gt;
2. application.properties:
menu_category_view_label=View
menu_item_view_about_id_label=About
label_=About   &amp;lt;- bad key
3. about.jspx: &amp;lt;page:page id="_title" title="About"&amp;gt;     &amp;lt;-- please use label key from application.properties for attr "id" insteaf of "_title". for attr "title" please use value of label key from application.properties
4. command: web mvc install view --path / --viewName zxc --title &amp;amp;apos;ASD and QWE&amp;amp;apos;
the second part of title (" and QWE") has been ignored in the labels generation in application.properties
ROO-820.</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1098" opendate="2010-07-12 11:21:43" fixdate="2010-07-12 11:55:10" resolution="Complete">
		<buginformation>
			<summary>AnnotationMetadataUtils does not support NestedAnnotationAttributeValue types when computing attribute values</summary>
			<description>When attempting to generate annotations such as @Foo(columns = 
{@Bar(name="bar")}
) the nested annotation @Bar is appearing as null.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.details.annotations.NestedAnnotationAttributeValue.java</file>
			<file type="M">org.springframework.roo.classpath.details.AnnotationMetadataUtils.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1119" opendate="2010-07-18 10:32:36" fixdate="2010-07-18 13:15:05" resolution="Complete">
		<buginformation>
			<summary>can&amp;apos;t create a string field with sizeMax=1 and sizeMin=1</summary>
			<description>When trying to create a string field with sizeMax=1 and sizeMin=1, the field isn&amp;amp;apos;t created. If you use any other size, the field is created correctly (ie field string --fieldName geoHashPrecision2 --sizeMax 2 --sizeMin 2 creates a field with @Size(min = 2, max = 2)).
Here is the console output:






roo&amp;gt; field string --fieldName geoHashPrecision1 --sizeMax 1 --sizeMin 1




Managed SRC_MAIN_JAVA/com/ff/model/GeographicPoint.java




Managed SRC_MAIN_JAVA/com/ff/model/GeographicPoint_Roo_JavaBean.aj




Managed SRC_MAIN_JAVA/com/ff/model/GeographicPoint_Roo_ToString.aj




Undo manage SRC_MAIN_JAVA/com/ff/model/GeographicPoint_Roo_ToString.aj




Undo manage SRC_MAIN_JAVA/com/ff/model/GeographicPoint_Roo_JavaBean.aj




Undo manage SRC_MAIN_JAVA/com/ff/model/GeographicPoint.java




String index out of range: -1





</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1118" opendate="2010-07-18 09:39:03" fixdate="2010-07-18 17:31:07" resolution="Complete">
		<buginformation>
			<summary>additional parameters on persistance setup cause rollback</summary>
			<description>When trying to run persistence setup with persistence setup --database MYSQL --provider DATANUCLEUS --databaseName Test --userName root, nothing happens (all changes are rolled back), however if you only use persistence setup --database MYSQL --provider DATANUCLEUS everything is created properly.
Here is the console output:






 




roo&amp;gt; persistence setup --database MYSQL --provider DATANUCLEUS --databaseName Test --userName root




Managed SRC_MAIN_RESOURCES/META-INF/spring/applicationContext.xml




Please enter your database details in src/main/resources/META-INF/persistence.xml.




Created SRC_MAIN_RESOURCES/META-INF/persistence.xml




Managed SRC_MAIN_RESOURCES/log4j.properties




Managed ROOT/pom.xml




Managed ROOT/pom.xml [Added dependency mysql:mysql-connector-java:5.1.13]




Managed ROOT/pom.xml [Added dependency javax.persistence:persistence-api:1.0]




Managed ROOT/pom.xml [Added dependency org.datanucleus:datanucleus-core:${datanucleus.version}]




Managed ROOT/pom.xml [Added dependency org.datanucleus:datanucleus-jpa:1.1.5]




Managed ROOT/pom.xml [Added dependency org.datanucleus:datanucleus-rdbms:${datanucleus.version}]




Managed ROOT/pom.xml [Added dependency org.datanucleus:datanucleus-enhancer:1.1.4]




Managed ROOT/pom.xml [Added dependency javax.jdo:jdo2-api:2.3-eb]




Managed ROOT/pom.xml [Added dependency org.hibernate:hibernate-validator:4.0.2.GA]




Managed ROOT/pom.xml [Added dependency javax.validation:validation-api:1.0.0.GA]




Managed ROOT/pom.xml [Added dependency cglib:cglib-nodep:2.2]




Managed ROOT/pom.xml [Added dependency javax.transaction:jta:1.1]




Managed ROOT/pom.xml [Added dependency org.springframework:spring-jdbc:${spring.version}]




Managed ROOT/pom.xml [Added dependency org.springframework:spring-orm:${spring.version}]




Managed ROOT/pom.xml [Added dependency commons-pool:commons-pool:1.5.4]




Managed ROOT/pom.xml [Added dependency commons-dbcp:commons-dbcp:1.3]




Managed ROOT/pom.xml




Undo manage ROOT/pom.xml




Undo manage SRC_MAIN_RESOURCES/log4j.properties




Undo create SRC_MAIN_RESOURCES/META-INF/persistence.xml




Undo manage SRC_MAIN_RESOURCES/META-INF/spring/applicationContext.xml




Properties file not found









roo&amp;gt; persistence setup --database MYSQL --provider DATANUCLEUS




Managed SRC_MAIN_RESOURCES/META-INF/spring/applicationContext.xml




Please enter your database details in src/main/resources/META-INF/persistence.xml.




Created SRC_MAIN_RESOURCES/META-INF/persistence.xml




Managed SRC_MAIN_RESOURCES/log4j.properties




Managed ROOT/pom.xml




Managed ROOT/pom.xml [Added dependency mysql:mysql-connector-java:5.1.13]




Managed ROOT/pom.xml [Added dependency javax.persistence:persistence-api:1.0]




Managed ROOT/pom.xml [Added dependency org.datanucleus:datanucleus-core:${datanucleus.version}]




Managed ROOT/pom.xml [Added dependency org.datanucleus:datanucleus-jpa:1.1.5]




Managed ROOT/pom.xml [Added dependency org.datanucleus:datanucleus-rdbms:${datanucleus.version}]




Managed ROOT/pom.xml [Added dependency org.datanucleus:datanucleus-enhancer:1.1.4]




Managed ROOT/pom.xml [Added dependency javax.jdo:jdo2-api:2.3-eb]




Managed ROOT/pom.xml [Added dependency org.hibernate:hibernate-validator:4.0.2.GA]




Managed ROOT/pom.xml [Added dependency javax.validation:validation-api:1.0.0.GA]




Managed ROOT/pom.xml [Added dependency cglib:cglib-nodep:2.2]




Managed ROOT/pom.xml [Added dependency javax.transaction:jta:1.1]




Managed ROOT/pom.xml [Added dependency org.springframework:spring-jdbc:${spring.version}]




Managed ROOT/pom.xml [Added dependency org.springframework:spring-orm:${spring.version}]




Managed ROOT/pom.xml [Added dependency commons-pool:commons-pool:1.5.4]




Managed ROOT/pom.xml [Added dependency commons-dbcp:commons-dbcp:1.3]




Managed ROOT/pom.xml





 </description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.jdbc.ConnectionProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseModelServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaCommands.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperations.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1125" opendate="2010-07-20 13:31:20" fixdate="2010-07-20 13:33:35" resolution="Complete">
		<buginformation>
			<summary>FileConverter gives exception if directory name invalid</summary>
			<description>(Reported by Chris Richardson)
Roo gives an exception if an invalid directory name is specified and the user hits TAB for completion support. Roo compeiton method calls should try to avoid throwing exceptions and instead simply fail to provide the completion.






roo&amp;gt; script --file /gbgb/&amp;lt;PRESS TAB&amp;gt;




Exception in thread "JLine Shell" java.lang.IllegalArgumentException: Directory &amp;amp;apos;/gbgb&amp;amp;apos; is not a valid directory name




	at org.springframework.roo.support.util.Assert.isTrue(Assert.java:65)




	at org.springframework.roo.shell.converters.FileConverter.populate(FileConverter.java:43)




	at org.springframework.roo.shell.converters.FileConverter.getAllPossibleValues(FileConverter.java:36)




	at org.springframework.roo.shell.SimpleParser.complete(SimpleParser.java:624)




	at org.springframework.roo.shell.jline.JLineCompletorAdapter.complete(JLineCompletorAdapter.java:31)




	at jline.ConsoleReader.complete(ConsoleReader.java:832)




	at jline.ConsoleReader.readLine(ConsoleReader.java:518)




	at jline.ConsoleReader.readLine(ConsoleReader.java:448)




	at jline.ConsoleReader.readLine(ConsoleReader.java:300)




	at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:318)




	at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:119)




	at java.lang.Thread.run(Thread.java:636)





</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.converters.FileConverter.java</file>
		</fixedFiles>
	</bug>
	<bug id="505" opendate="2009-12-31 12:30:00" fixdate="2010-07-23 00:18:54" resolution="Complete">
		<buginformation>
			<summary>Need support for @EmbeddedId - a way to specify this in @RooEntity </summary>
			<description>I want to use @EmbeddedId in order to use composite primary key. e.g. I want to use the following 
[CODE]
package com.synconx.entities;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Embeddable;
/**

@Author Chiradip Mandal
@Copyright  Chiradip Mandal 2009
@License Apache License v2.0 http://www.apache.org/licenses/LICENSE-2.0
 *
 */
@Embeddable
public class EdgeId implements Serializable {
        private static final long serialVersionUID = 7709843884574764331L;
        @Column( name = "SOURCENODEID" )
        private long sourceNodeID;
        @Column( name = "TARGETNODEID" )
        private long targetNodeID;

        public EdgeId() {
        }
        public EdgeId( long sourceNodeID, long targetNodeID ) 
{
                this.sourceNodeID = sourceNodeID;
                this.targetNodeID = targetNodeID;
        }

        public long getSourceNodeID() 
{
                return sourceNodeID;
        }

        public void setSourceNodeID( long sourceNodeID ) 
{
                this.sourceNodeID = sourceNodeID;
        }

        public long getTargetNodeID() 
{
                return targetNodeID;
        }

        public void setTargetNodeID( long targetNodeID ) 
{
                this.targetNodeID = targetNodeID;
        }

        @Override
        public boolean equals( Object o ) {
                if ( o instanceof EdgeId ) 
{
                        EdgeId that = ( EdgeId ) o;
                        return ( this.sourceNodeID == that.sourceNodeID ) &amp;amp;&amp;amp; ( this.targetNodeID == that.targetNodeID );
                }
                return false;
        }
        @Override
        public int hashCode() 
{
                return new Long( sourceNodeID ).hashCode() + new Long( targetNodeID ).hashCode();
        }
}
[/CODE]
No I want to have roo managed entity Edge that looks like the following now 
[CODE]
@Entity
@Table( name = "EDGE" )
public class Edge implements Serializable {
        private static final long serialVersionUID = 6090794895049089364L;
        @Column( name = "EDGETYPE" )
        private EdgeType edgeType;
        public EdgeType getEdgeType() 
{
                return edgeType;
        }

        public void setEdgeType( EdgeType edgeType ) 
{
                this.edgeType = edgeType;
        }

        @EmbeddedId
        private EdgeId edgeId;
        public EdgeId getId() 
{
                return edgeId;
        }


        public void setId( EdgeId id ) 
{
                this.edgeId = id;
        }


        public EdgeId getEdgeId() 
{
        	return edgeId;
        }

        public void setEdgeId( EdgeId id ) 
{
        	this.edgeId = id;
        }
}
[/CODE]
I want it in the following way
[CODE]
@RooEntity(identifierType = EdgeId.class, embeddedIdentifier = true)
@Entity
@Table( name = "EDGE" )
public class Edge implements Serializable {
        private static final long serialVersionUID = 6090794895049089364L;
        @Column( name = "EDGETYPE" )
        private EdgeType edgeType;
}
[CODE]
In the @RooEntity - it is great to have something called embeddedIdentifier with true and false options, false being the default option. </description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.java</file>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.RooIdentifier.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathCommands.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.MemberFindingUtils.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.serializable.SerializableMetadataProvider.java</file>
			<file type="D">org.springframework.roo.classpath.operations.RooIdentifierStrategy.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperations.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.RooEntity.java</file>
			<file type="M">org.springframework.roo.model.JavaSymbolName.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.populator.AutoPopulationUtils.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaCommands.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.EnumAttributeValue.java</file>
			<file type="M">org.springframework.roo.shell.converters.EnumConverter.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">558</link>
			<link type="Related" description="is related to">636</link>
			<link type="Related" description="is related to">384</link>
		</links>
	</bug>
	<bug id="1105" opendate="2010-07-15 00:53:11" fixdate="2010-07-28 18:59:59" resolution="Fixed">
		<buginformation>
			<summary>javax.el.PropertyNotFoundException: Property &amp;apos;id&amp;apos; not found </summary>
			<description>Hi
Got an invalid exception when using a JPA identifier different from id. See attachment spitab.roo.
GRAVE: Servlet.service() for servlet default threw exception
javax.el.PropertyNotFoundException: Property &amp;amp;apos;id&amp;amp;apos; not found on type fr.cdc.spita
b.domain.Pays
        at javax.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:193)
        at javax.el.BeanELResolver$BeanProperties.access$400(BeanELResolver.java
:170)
        at javax.el.BeanELResolver.property(BeanELResolver.java:279)
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:60)
        at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:54)
        at org.apache.el.parser.AstValue.getValue(AstValue.java:123)
        at org.apache.el.parser.AstDynamicExpression.getValue(AstDynamicExpressi
on.java:42)
        at org.apache.el.parser.AstCompositeExpression.getValue(AstCompositeExpr
ession.java:47)
        at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:1
86)
        at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageCon
textImpl.java:935)
        at org.apache.jsp.tag.web.form.fields.table_tagx._jspx_meth_spring_005fu
rl_005f0(table_tagx.java:811)
        at org.apache.jsp.tag.web.form.fields.table_tagx._jspx_meth_c_005fforEac
h_005f0(table_tagx.java:682)
        at org.apache.jsp.tag.web.form.fields.table_tagx._jspx_meth_c_005fif_005
f0(table_tagx.java:284)
        at org.apache.jsp.tag.web.form.fields.table_tagx.doTag(table_tagx.java:2
21)
        at org.apache.jsp.WEB_002dINF.views.payses.list_jspx._jspx_meth_table_00
5ftable_005f0(list_jspx.java:116)
        at org.apache.jsp.WEB_002dINF.views.payses.list_jspx.access$0(list_jspx.
java:98)
        at org.apache.jsp.WEB_002dINF.views.payses.list_jspx$Helper.invoke0(list
_jspx.java:255)
        at org.apache.jsp.WEB_002dINF.views.payses.list_jspx$Helper.invoke(list_
jspx.java:289)
        at org.apache.jsp.tag.web.form.list_tagx._jspx_meth_c_005fwhen_005f0(lis
t_tagx.java:415)
        at org.apache.jsp.tag.web.form.list_tagx._jspx_meth_c_005fchoose_005f0(l
ist_tagx.java:383)
        at org.apache.jsp.tag.web.form.list_tagx.access$0(list_tagx.java:373)
        at org.apache.jsp.tag.web.form.list_tagx$Helper.invoke0(list_tagx.java:4
97)
        at org.apache.jsp.tag.web.form.list_tagx$Helper.invoke(list_tagx.java:51
4)
        at org.apache.jsp.tag.web.form.page_tagx.jspx_meth_c_005fif_005f0(page
tagx.java:151)
        at org.apache.jsp.tag.web.form.page_tagx.doTag(page_tagx.java:109)
        at org.apache.jsp.tag.web.form.list_tagx._jspx_meth_page_005fpage_005f0(
list_tagx.java:368)
        at org.apache.jsp.tag.web.form.list_tagx.jspx_meth_c_005fif_005f0(list
tagx.java:200)
        at org.apache.jsp.tag.web.form.list_tagx.doTag(list_tagx.java:164)
        at org.apache.jsp.WEB_002dINF.views.payses.list_jspx._jspx_meth_page_005
flist_005f0(list_jspx.java:93)
        at org.apache.jsp.WEB_002dINF.views.payses.list_jspx._jspService(list_js
px.java:63)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper
.java:377)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:3
13)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl
icationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF
ilterChain.java:206)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDisp
atcher.java:646)
        at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationD
ispatcher.java:551)
        at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDis
patcher.java:488)
        at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary
.java:968)
        at org.apache.jasper.runtime.PageContextImpl.doInclude(PageContextImpl.j
ava:650)
        at org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.jav
a:644)
        at org.apache.tiles.jsp.context.JspTilesRequestContext.include(JspTilesR
equestContext.java:103)
        at org.apache.tiles.jsp.context.JspTilesRequestContext.dispatch(JspTiles
RequestContext.java:96)
        at org.apache.tiles.renderer.impl.TemplateAttributeRenderer.write(Templa
teAttributeRenderer.java:44)
        at org.apache.tiles.renderer.impl.AbstractBaseAttributeRenderer.render(A
bstractBaseAttributeRenderer.java:106)
        at org.apache.tiles.renderer.impl.ChainedDelegateAttributeRenderer.write
(ChainedDelegateAttributeRenderer.java:76)
        at org.apache.tiles.renderer.impl.AbstractBaseAttributeRenderer.render(A
bstractBaseAttributeRenderer.java:106)
        at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.
java:670)
        at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.
java:336)
        at org.apache.tiles.template.InsertAttributeModel.renderAttribute(Insert
AttributeModel.java:210)
        at org.apache.tiles.template.InsertAttributeModel.end(InsertAttributeMod
el.java:126)
        at org.apache.tiles.jsp.taglib.InsertAttributeTag.doTag(InsertAttributeT
ag.java:311)
        at org.apache.jsp.WEB_002dINF.layouts.default_jspx._jspx_meth_tiles_005f
insertAttribute_005f1(default_jspx.java:472)
        at org.apache.jsp.WEB_002dINF.layouts.default_jspx._jspService(default_j
spx.java:141)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper
.java:377)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:3
13)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl
icationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF
ilterChain.java:206)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDisp
atcher.java:646)
        at org.apache.catalina.core.ApplicationDispatcher.processRequest(Applica
tionDispatcher.java:436)
        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationD
ispatcher.java:374)
        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDis
patcher.java:302)
        at org.apache.tiles.servlet.context.ServletTilesRequestContext.forward(S
ervletTilesRequestContext.java:241)
        at org.apache.tiles.servlet.context.ServletTilesRequestContext.dispatch(
ServletTilesRequestContext.java:222)
        at org.apache.tiles.renderer.impl.TemplateAttributeRenderer.write(Templa
teAttributeRenderer.java:44)
        at org.apache.tiles.renderer.impl.AbstractBaseAttributeRenderer.render(A
bstractBaseAttributeRenderer.java:106)
        at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.
java:670)
        at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.
java:690)
        at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.
java:644)
        at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.
java:627)
        at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.
java:321)
        at org.springframework.web.servlet.view.tiles2.TilesView.renderMergedOut
putModel(TilesView.java:124)
        at org.springframework.web.servlet.view.AbstractView.render(AbstractView
.java:250)
        at org.springframework.web.servlet.DispatcherServlet.render(DispatcherSe
rvlet.java:1060)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(Dispatch
erServlet.java:798)
        at org.springframework.web.servlet.DispatcherServlet.doService(Dispatche
rServlet.java:716)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(Frame
workServlet.java:644)
        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServl
et.java:549)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl
icationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF
ilterChain.java:206)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDisp
atcher.java:646)
        at org.apache.catalina.core.ApplicationDispatcher.processRequest(Applica
tionDispatcher.java:436)
        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationD
ispatcher.java:374)
        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDis
patcher.java:302)
        at org.tuckey.web.filters.urlrewrite.NormalRewrittenUrl.doRewrite(Normal
RewrittenUrl.java:195)
        at org.tuckey.web.filters.urlrewrite.RuleChain.handleRewrite(RuleChain.j
ava:159)
        at org.tuckey.web.filters.urlrewrite.RuleChain.doRules(RuleChain.java:14
1)
        at org.tuckey.web.filters.urlrewrite.UrlRewriter.processRequest(UrlRewri
ter.java:90)
        at org.tuckey.web.filters.urlrewrite.UrlRewriteFilter.doFilter(UrlRewrit
eFilter.java:417)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl
icationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF
ilterChain.java:206)
        at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInterna
l(HiddenHttpMethodFilter.java:77)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:76)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl
icationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF
ilterChain.java:206)
        at org.springframework.web.filter.CharacterEncodingFilter.doFilterIntern
al(CharacterEncodingFilter.java:88)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:76)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl
icationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF
ilterChain.java:206)
        at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doF
ilterInternal(OpenEntityManagerInViewFilter.java:113)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:76)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl
icationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF
ilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperV
alve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextV
alve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.j
ava:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.j
ava:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineVal
ve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.jav
a:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java
:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.proce
ss(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:48
9)
        at java.lang.Thread.run(Thread.java:619)</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="1112" opendate="2010-07-17 14:49:22" fixdate="2010-07-29 14:50:49" resolution="Fixed">
		<buginformation>
			<summary>Web scaffold: bad handling of self-referencing parent-child entity relationships</summary>
			<description>When I create an entity with a parent-child relationship that references back to the same entity type, the generated web scaffold will not allow me to edit the relationship.
Steps to reproduce:
Execute the following code in Roo:-
project --topLevelPackage com.example.test 
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY
entity --class ~.entities.Node
field string name --sizeMax 30 --notNull
field reference --fieldName parent --type ~.entities.Node --cardinality ONE_TO_ONE
field set --fieldName children --element ~.entities.Node --cardinality ONE_TO_MANY --mappedBy parent
controller all --package ~.web
[end Roo code]
Next start up Tomcat with: mvn tomcat:run
Point a browser at http://localhost:8080/test 
Create a new &amp;amp;apos;Node&amp;amp;apos;. Now, go to create a second &amp;amp;apos;Node&amp;amp;apos; - in the form it shows:-
Parent: [create-new button] No Parent found.
Children:This relationship is managed from the Node side.
Which isn&amp;amp;apos;t correct.
Expected behaviour:
On creating the second entity, there should either be (a) a drop-down list for choosing a &amp;amp;apos;Parent&amp;amp;apos;, where any pre-existing entities should appear / be selectable (as you get when you have a one-to-one relationship between differing entity types)  or (b) there should be a multi-select list for choosing &amp;amp;apos;Children&amp;amp;apos; (as you get when you have a one-to-many relationship between differing entity types).
I think perhaps option (a) - allowing selection of a parent - is the correct/easiest thing to do in this situation.</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1135" opendate="2010-07-23 14:11:14" fixdate="2010-07-29 15:33:32" resolution="Complete">
		<buginformation>
			<summary>The Menu entries generated do not split CamelCase entity names the same way that labels do.</summary>
			<description>If you create entities that have a camel case name such as "BaseUser", when the application.properties file gets an entry that references that entity in a label, it is smart enough to split the entity name into two words like "Base User", however when an entry is added that references that entity in a menu the subsequent capital letters get converted to lowercase like "Baseuser".
Obviously, the simple work around is to edit the application.properties file after the generation of the entity, but if you happen to be working on the code that deals with this anyway, you might want to fix this while you&amp;amp;apos;re in there.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="1156" opendate="2010-08-02 22:00:55" fixdate="2010-08-02 22:09:06" resolution="Fixed">
		<buginformation>
			<summary>Exceptions are caused by the org.springframework.roo.startlevel.Activator during shutdown</summary>
			<description>The Activator for the startlevel module is causing exceptions during shutdown. This is because it is attempting to obtain a service (via the service reference) but the service is no longer available. This was discovered due to the extended OSGi logging added as part of ROO-1155.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.startlevel.Activator.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1155</link>
		</links>
	</bug>
	<bug id="1158" opendate="2010-08-02 23:28:50" fixdate="2010-08-03 00:10:23" resolution="Fixed">
		<buginformation>
			<summary>ProcessManagerHostedExecutionStrategy gives NullPointerException intermittently</summary>
			<description>Occasionally seen during development:
Exception in thread "JLine Shell" java.lang.NullPointerException
        at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.isReadyForCommands(ProcessManagerHostedExecutionStrategy.java:40)
        at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:113)
        at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:326)
        at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:119)
        at java.lang.Thread.run(Thread.java:637)</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.java</file>
		</fixedFiles>
	</bug>
	<bug id="1172" opendate="2010-08-04 22:30:10" fixdate="2010-08-04 22:32:04" resolution="Fixed">
		<buginformation>
			<summary>Invalid message codes generated in Web MVC scaffolding</summary>
			<description>JspViewManager produces field.invalid.integer instead of field_invalid_integer</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="1169" opendate="2010-08-04 17:04:32" fixdate="2010-08-04 22:58:14" resolution="Fixed">
		<buginformation>
			<summary>Stack trace appears when starting Roo without connection to network</summary>
			<description>Without a network connection, a stack trace is generated before the Roo command prompt is shown.
05/08/2010 8:38:12 AM org.springframework.roo.felix.JdkDelegatingLogListener logNow
WARNING: [org.apache.felix.bundlerepository [10]] RepositoryAdminImpl: Exception creating repository http://spring-roo-repository.springsource.org/repository.xml.zip. Repository is skipped.
java.net.UnknownHostException: spring-roo-repository.springsource.org
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:177)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:163)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:394)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:529)
	at sun.net.www.http.HttpClient.&amp;lt;init&amp;gt;(HttpClient.java:233)
	at sun.net.www.http.HttpClient.New(HttpClient.java:306)
	at sun.net.www.http.HttpClient.New(HttpClient.java:323)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:860)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:801)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:726)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1049)
	at org.apache.felix.bundlerepository.RepositoryImpl.parseRepositoryFile(RepositoryImpl.java:206)
	at org.apache.felix.bundlerepository.RepositoryImpl.access$000(RepositoryImpl.java:44)
	at org.apache.felix.bundlerepository.RepositoryImpl$1.run(RepositoryImpl.java:75)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.felix.bundlerepository.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:71)
	at org.apache.felix.bundlerepository.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:60)
	at org.apache.felix.bundlerepository.RepositoryAdminImpl.initialize(RepositoryAdminImpl.java:206)
	at org.apache.felix.bundlerepository.RepositoryAdminImpl.listRepositories(RepositoryAdminImpl.java:101)
	at org.springframework.roo.obr.internal.ObrResourceFinderImpl$1.run(ObrResourceFinderImpl.java:32)
	at java.lang.Thread.run(Thread.java:619)
</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.obr.internal.ObrResourceFinderImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">1171</link>
			<link type="Related" description="is related to">1155</link>
		</links>
	</bug>
	<bug id="1148" opendate="2010-07-29 03:32:40" fixdate="2010-08-06 00:57:55" resolution="Fixed">
		<buginformation>
			<summary>"Too many open files" on controller generation</summary>
			<description>I&amp;amp;apos;ve been trying to model a project which has quite an amount of domain objects and when it comes to the generation of controllers (controller all --package ~.web) I get this error:
Created SRC_MAIN_WEBAPP/WEB-INF/views/controlpots/create.jspx
Managed SRC_MAIN_WEBAPP/WEB-INF/i18n/application.properties
Undo failed SRC_MAIN_WEBAPP/WEB-INF/i18n/application.properties
/tmp/UpdateFile3949436968960279876tmp (Too many open files)
Script execution aborted
[Timer-0] Undo failed SRC_MAIN_WEBAPP/WEB-INF/i18n/application.properties
[Timer-0] /tmp/UpdateFile4795595304280762163tmp (Too many open files)
The open file limit on my box had been set to 1024 which should really suffice for a desktop system.  However, I have raised it to 8192 for further tests and am still getting an error a few seconds after the script appeared to have finished.
logging setup --level DEBUG
Managed SRC_MAIN_RESOURCES/log4j.properties
Milliseconds required: 239530
[Timer-0] Undo failed SRC_MAIN_WEBAPP/WEB-INF/i18n/application.properties
[Timer-0] /tmp/UpdateFile3371250473870141238tmp (Too many open files)
Then I have run the same script with 1.0.2 to compare the number of files held open by the roo process.
1.1.0M2:
...
java      5586      arkay 3453r      REG               8,34     33308  6578003 
/home/arkay/Java/TheGuitarListRoo/TheGuitarList/src/main/webapp/WEB-INF/i18n/application.properties
java      5586      arkay 3454r      REG               8,34     33308  6578003 
/home/arkay/Java/TheGuitarListRoo/TheGuitarList/src/main/webapp/WEB-INF/i18n/application.properties
arkay@gentoodesk ~ $ lsof -p 5586 | grep application.properties | wc -l
6942
1.0.2:
arkay@gentoodesk ~ $ lsof -p 5792 | grep application.properties | wc -l
66
Those numbers were obtained after my roo script had finished.  There seems to be a File object leak somewhere, otherwise I can&amp;amp;apos;t explain the 6942 open files held by 1.1.0M2 vs. the 69 the last release version used.</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.startlevel.Activator.java</file>
			<file type="M">org.springframework.roo.obr.internal.ObrResourceFinderImpl.java</file>
			<file type="M">org.springframework.roo.felix.pgp.PgpServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.menu.MenuOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.propfiles.PropFileOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1176" opendate="2010-08-05 10:21:16" fixdate="2010-08-08 18:22:26" resolution="Complete">
		<buginformation>
			<summary>DataOnDemand and Number Fields - Unit tests ignore the @Min constraint and Numbers smaller than an int get an int shoved into them</summary>
			<description>This bug covers two separate issues, I have placed them together because they seem to stem from the same code.
FIRST:
Creating an entity with number type fields and applying an @Min constraint greater than zero will fail. It seems that either the getNewTransient_() method or the init() method should take the @Min constraint into account. The init() method sends indexes that are from 0 to 9, but if you have an @Min of 1, the getNewTransient_() will try to populate your field with a zero, which will fail when the object persist() method is called.
SECOND:
Creating an entity with number type fields that are smaller than an int fail when the testPersist() test is called, because it calls getNewTransient__(Integer.MAX_VALUE) which cannot be squeezed into a Short (for example).
WORK AROUND:
Override the getNewTransient__() method and add this to the beginning
    	if(index == 0)
{
    		index = 1;
    	}
 else if(index &amp;lt; 0)
{
    		index = index * -1;
    	}
    	if(index &amp;gt; Short.MAX_VALUE)
{
    		Random rnd = new Random(new Integer(index).longValue());
    		index = rnd.nextInt(Short.MAX_VALUE);
    	}

LOG.ROO:
The following is a log.roo for a test.
// Spring Roo 1.1.0.M1 [rev 3a0b8a3] log opened at 2010-08-05 11:46:45
project --topLevelPackage com.things
persistence setup --database HYPERSONIC_IN_MEMORY --provider HIBERNATE
entity --class ~.domain.ShortThings --testAutomatically 
field string --fieldName name
field number --fieldName thingValue --type java.lang.Short --min 1 --notNull 
entity --class ~.domain.LongThings --testAutomatically 
field number --fieldName thingValue --type java.lang.Long --min 1 --notNull 
perform tests
// Spring Roo 1.1.0.M1 [rev 3a0b8a3] log opened at 2010-08-05 11:54:26
</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">536</link>
			<link type="Related" description="is related to">804</link>
			<link type="Related" description="is related to">946</link>
		</links>
	</bug>
	<bug id="1206" opendate="2010-08-11 19:59:26" fixdate="2010-08-11 20:13:20" resolution="Fixed">
		<buginformation>
			<summary>Suppress generation of labels for entity identifier and version fields for Web MVC scaffolding</summary>
			<description>Suppress generation of labels for entity identifier and version fields for Web MVC scaffolding</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="1222" opendate="2010-08-17 00:36:51" fixdate="2010-08-17 18:30:55" resolution="Fixed">
		<buginformation>
			<summary>projectOperations.addPlugin adds empty &lt;id/&gt; and &lt;phase/&gt; tags per default which let maven ignore the build plugin</summary>
			<description>when updating maven build plugin the configuration element adds some invalid maven markup, so that maven ignores the build plugin:
empty tags (id, phase) are invalid:
                    &amp;lt;execution&amp;gt;
                        &amp;lt;id/&amp;gt;
                        &amp;lt;phase/&amp;gt;
                        &amp;lt;goals&amp;gt;
                            &amp;lt;goal&amp;gt;compile&amp;lt;/goal&amp;gt;
                            &amp;lt;goal&amp;gt;test-compile&amp;lt;/goal&amp;gt;
                        &amp;lt;/goals&amp;gt;
                    &amp;lt;/execution&amp;gt;
Patch: MavenProjectMetadataProvider
                final String id = execution.getId();
                if (id !=null &amp;amp;&amp;amp; !id.isEmpty()) 
{
                Element executionId = document.createElement("id");
                executionId.setTextContent(id);
                executionElement.appendChild(executionId);
                }
                final String phase = execution.getPhase();
                if (phase!=null &amp;amp;&amp;amp; !phase.isEmpty()) 
{
                Element executionPhase = document.createElement("phase");
                executionPhase.setTextContent(phase);
                executionElement.appendChild(executionPhase);
                }
 </description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenProjectMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="1220" opendate="2010-08-16 18:51:04" fixdate="2010-08-17 18:32:31" resolution="Duplicate">
		<buginformation>
			<summary>Intermittent stacktrace when starting and exiting Roo</summary>
			<description>Occasionally, Roo will display a stacktrace upon startup. A stacktrace on shutdown will appear also if the startup issue appears. 
The problem is always connected with the SerializableMetadataProviderImpl (ie have not seen this problem with any other metadata provider or class)
Startup:
stewarta@stewarta:~/projects/roo-test/petclinic_orig$ roo.sh
16/08/2010 11:37:38 AM org.springframework.roo.felix.JdkDelegatingLogListener logNow
SEVERE: [org.springframework.roo.addon.serializable [35]] [org.springframework.roo.addon.serializable.SerializableMetadataProviderImpl] Cannot create component instance due to failure to bind reference metadataService
16/08/2010 11:37:38 AM org.springframework.roo.felix.JdkDelegatingLogListener logNow
SEVERE: [org.springframework.roo.addon.serializable [35]] FrameworkEvent ERROR
org.apache.felix.log.LogException: org.osgi.framework.ServiceException: Service factory returned null.
    at org.apache.felix.framework.ServiceRegistrationImpl.getFactoryUnchecked(ServiceRegistrationImpl.java:338)
    at org.apache.felix.framework.ServiceRegistrationImpl.getService(ServiceRegistrationImpl.java:220)
    at org.apache.felix.framework.ServiceRegistry.getService(ServiceRegistry.java:322)
    at org.apache.felix.framework.Felix.getService(Felix.java:2913)
    at org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:330)
    at org.apache.felix.scr.impl.manager.DependencyManager.getService(DependencyManager.java:761)
    at org.apache.felix.scr.impl.manager.DependencyManager$1.getInstance(DependencyManager.java:1003)
    at org.apache.felix.scr.impl.helper.BindMethod.getParameters(BindMethod.java:436)
    at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:212)
    at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:38)
    at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:542)
    at org.apache.felix.scr.impl.helper.BaseMethod$NotResolved.invoke(BaseMethod.java:500)
    at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:434)
    at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:991)
    at org.apache.felix.scr.impl.manager.DependencyManager.bind(DependencyManage
    at org.apache.felix.scr.impl.manager.DependencyManager.open(DependencyManager.java:831)
    at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:200)
    at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)
    at org.apache.felix.scr.impl.manager.DelayedComponentManager.createRealComponent(DelayedComponentManager.java:91)
    at org.apache.felix.scr.impl.manager.AbstractComponentManager$Registered.getService(AbstractComponentManager.java:1139)
    at org.apache.felix.scr.impl.manager.DelayedComponentManager.getService(DelayedComponentManager.java:85)
    at org.apache.felix.framework.ServiceRegistrationImpl.getFactoryUnchecked(ServiceRegistrationImpl.java:306)
    at org.apache.felix.framework.ServiceRegistrationImpl.getService(ServiceRegistrationImpl.java:220)
    at org.apache.felix.framework.ServiceRegistry.getService(ServiceRegistry.java:322)
    at org.apache.felix.framework.Felix.getService(Felix.java:2913)
    at org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:330)
    at org.apache.felix.scr.impl.manager.DependencyManager.getService(DependencyManager.java:761)
    at org.apache.felix.scr.impl.manager.DependencyManager$1.getInstance(DependencyManager.java:1003)
    at org.apache.felix.scr.impl.helper.BindMethod.getParameters(BindMethod.java:436)
    at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:212)
    at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:38)
    at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:542)
    at org.apache.felix.scr.impl.helper.BaseMethod$NotResolved.invoke(BaseMethod.java:500)
    at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:434)
    at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:991)
    at org.apache.felix.scr.impl.manager.DependencyManager.bind(DependencyManager.java:907)
    at org.apache.felix.scr.impl.manager.DependencyManager.open(DependencyManager.java:831)
    at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:200)
    at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)
    at org.apache.felix.scr.impl.manager.AbstractComponentManager$Unsatisfied.activate(AbstractComponentManager.java:991)
    at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:298)
    at org.apache.felix.scr.impl.manager.AbstractComponentManager$3.doRun(AbstractComponentManager.java:505)
    at org.apache.felix.scr.impl.ComponentActivatorTask.run(ComponentActivatorTask.java:67)
    at org.apache.felix.scr.impl.ComponentActorThread.run(ComponentActorThread.java:96)
    at java.lang.Thread.run(Thread.java:619)
Shutdown:
roo&amp;gt; q
[Thread-3] [org.springframework.roo.addon.serializable [35]] 
FrameworkEvent ERROR
            org.apache.felix.log.LogException: 
org.osgi.framework.ServiceException: Service factory returned null.
                at 
org.apache.felix.framework.ServiceRegistrationImpl.getFactoryUnchecked(ServiceRegistrationImpl.java:338)
                at 
org.apache.felix.framework.ServiceRegistrationImpl.getService(ServiceRegistrationImpl.java:220)
                at 
org.apache.felix.framework.ServiceRegistry.getService(ServiceRegistry.java:322)
                at 
org.apache.felix.framework.Felix.getService(Felix.java:2913)
                at 
org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:330)
                at 
org.apache.felix.scr.impl.manager.DependencyManager.getService(DependencyManager.java:761)
                at 
org.apache.felix.scr.impl.manager.DependencyManager$3.getInstance(DependencyManager.java:1105)
                at 
org.apache.felix.scr.impl.helper.BindMethod.getParameters(BindMethod.java:436)
                at 
org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:212)
                at 
org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:38)
                at 
org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:542)
                at 
org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:434)
                at 
org.apache.felix.scr.impl.manager.DependencyManager.invokeUnbindMethod(DependencyManager.java:1094)
                at 
org.apache.felix.scr.impl.manager.DependencyManager.serviceRemoved(DependencyManager.java:400)
                at 
org.apache.felix.scr.impl.manager.DependencyManager.serviceChanged(DependencyManager.java:251)
                at 
org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:864)
                at 
org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:732)
                at 
org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
                at 
org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3619)
                at 
org.apache.felix.framework.Felix.access$000(Felix.java:39)
                at 
org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:667)
                at 
org.apache.felix.framework.ServiceRegistry.unregisterService(ServiceRegistry.java:124)
                at 
org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:129)
                at 
org.apache.felix.scr.impl.manager.AbstractComponentManager.unregisterComponentService(AbstractComponentManager.java:429)
                at 
org.apache.felix.scr.impl.manager.AbstractComponentManager$Satisfied.deactivate(AbstractComponentManager.java:1065)
                at 
org.apache.felix.scr.impl.manager.AbstractComponentManager.deactivateInternal(AbstractComponentManager.java:303)
                at 
org.apache.felix.scr.impl.manager.DependencyManager.serviceRemoved(DependencyManager.java:343)
                at 
org.apache.felix.scr.impl.manager.DependencyManager.serviceChanged(DependencyManager.java:251)
                at 
org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:864)
                at 
org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:732)
                at 
org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
                at 
org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3619)
                at 
org.apache.felix.framework.Felix.access$000(Felix.java:39)
                at 
org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:667)
                at 
org.apache.felix.framework.ServiceRegistry.unregisterService(ServiceRegistry.java:124)
                at 
org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:129)
                at 
org.apache.felix.scr.impl.manager.AbstractComponentManager.unregisterComponentService(AbstractComponentManager.java:429)
                at 
org.apache.felix.scr.impl.manager.AbstractComponentManager$Satisfied.deactivate(AbstractComponentManager.java:1065)
                at 
org.apache.felix.scr.impl.manager.AbstractComponentManager.disposeInternal(AbstractComponentManager.java:322)
                at 
org.apache.felix.scr.impl.manager.AbstractComponentManager.dispose(AbstractComponentManager.java:185)
                at 
org.apache.felix.scr.impl.config.ConfiguredComponentHolder.disposeComponents(ConfiguredComponentHolder.java:275)
                at 
org.apache.felix.scr.impl.BundleComponentActivator.dispose(BundleComponentActivator.java:319)
                at 
org.apache.felix.scr.impl.Activator.disposeComponents(Activator.java:277)
                at 
org.apache.felix.scr.impl.Activator.bundleChanged(Activator.java:178)
                at 
org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:800)
                at 
org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:728)
                at 
org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:610)
                at 
org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:3608)
                at 
org.apache.felix.framework.Felix.stopBundle(Felix.java:2114)
                at 
org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1148)
                at 
org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)
                at java.lang.Thread.run(Thread.java:619)
</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.serializable.SerializableMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1178</link>
		</links>
	</bug>
	<bug id="1178" opendate="2010-08-06 01:28:11" fixdate="2010-08-17 18:44:45" resolution="Fixed">
		<buginformation>
			<summary>Intermittent issue loading Roo</summary>
			<description>When starting Roo, the following stack trace appears:
SEVERE: [org.springframework.roo.addon.serializable [34]] [org.springframework.roo.addon.serializable.SerializableMetadataProviderImpl] Cannot create component instance due to failure to bind reference metadataService
06/08/2010 5:26:45 PM org.springframework.roo.felix.JdkDelegatingLogListener logNow
SEVERE: [org.springframework.roo.addon.serializable [34]] FrameworkEvent ERROR
org.apache.felix.log.LogException: org.osgi.framework.ServiceException: Service factory returned null.
	at org.apache.felix.framework.ServiceRegistrationImpl.getFactoryUnchecked(ServiceRegistrationImpl.java:338)
	at org.apache.felix.framework.ServiceRegistrationImpl.getService(ServiceRegistrationImpl.java:220)
	at org.apache.felix.framework.ServiceRegistry.getService(ServiceRegistry.java:322)
	at org.apache.felix.framework.Felix.getService(Felix.java:2913)
	at org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:330)
	at org.apache.felix.scr.impl.manager.DependencyManager.getService(DependencyManager.java:761)
	at org.apache.felix.scr.impl.manager.DependencyManager$1.getInstance(DependencyManager.java:1003)
	at org.apache.felix.scr.impl.helper.BindMethod.getParameters(BindMethod.java:436)
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:212)
	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:38)
	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:542)    
	at org.apache.felix.scr.impl.helper.BaseMethod$NotResolved.invoke(BaseMethod.java:500)
	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:434)
	at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:991)
	at org.apache.felix.scr.impl.manager.DependencyManager.bind(DependencyManager.java:895)
	at org.apache.felix.scr.impl.manager.DependencyManager.open(DependencyManager.java:831)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:200)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)
	at org.apache.felix.scr.impl.manager.DelayedComponentManager.createRealComponent(DelayedComponentManager.java:91)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Registered.getService(AbstractComponentManager.java:1139)
	at org.apache.felix.scr.impl.manager.DelayedComponentManager.getService(DelayedComponentManager.java:85)
	at org.apache.felix.framework.ServiceRegistrationImpl.getFactoryUnchecked(ServiceRegistrationImpl.java:306)
	at org.apache.felix.framework.Felix.getService(Felix.java:2913)
	at org.apache.felix.framework.BundleContextImpl.getService(BundleContextImpl.java:330)
	at org.apache.felix.scr.impl.manager.DependencyManager.getService(DependencyManager.java:761)
	at org.apache.felix.scr.impl.manager.DependencyManager$1.getInstance(DependencyManager.java:1003)
	at org.apache.felix.scr.impl.helper.BindMethod.getParameters(BindMethod.java:436)
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:212)
	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:38)
	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:542)
	at org.apache.felix.scr.impl.helper.BaseMethod$NotResolved.invoke(BaseMethod.java:500)
	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:434)
	at org.apache.felix.scr.impl.manager.DependencyManager.invokeBindMethod(DependencyManager.java:991)
	at org.apache.felix.scr.impl.manager.DependencyManager.bind(DependencyManager.java:907)
	at org.apache.felix.scr.impl.manager.DependencyManager.open(DependencyManager.java:831)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:200)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Unsatisfied.activate(AbstractComponentManager.java:991)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:298)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$3.doRun(AbstractComponentManager.java:505)
	at org.apache.felix.scr.impl.ComponentActivatorTask.run(ComponentActivatorTask.java:67)
	at org.apache.felix.scr.impl.ComponentActorThread.run(ComponentActorThread.java:96)
	at java.lang.Thread.run(Thread.java:619)
</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.serializable.SerializableMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1220</link>
			<link type="Related" description="is related to">1547</link>
		</links>
	</bug>
	<bug id="1203" opendate="2010-08-10 20:30:02" fixdate="2010-08-19 18:10:07" resolution="Fixed">
		<buginformation>
			<summary>CLONE -Oracle persistence: wrong URL in database.properties</summary>
			<description>After having create a topLevelPackage for a new roo project and after executing the persistence setup with
persistence setup --provider ECLIPSELINK --database ORACLE --databaseName orcl --userName oe --password  oe
(OE is a default test-schema delivered from Oracle for testing and training purposes)
the created database.properties contains a wrong URL:
jdbc\:oracle\:thin\:@localhost\:1521/orcl
The correct one should not contain any slashes/backslashes and is of the following form (maintaining the replacements):
jdbc:oracle:thin:@localhost:1521:orcl
Having replaced that, the database connection works.</description>
			<version>1.0.1.RELEASE</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">914</link>
		</links>
	</bug>
	<bug id="1242" opendate="2010-08-19 17:34:58" fixdate="2010-08-19 19:29:35" resolution="Fixed">
		<buginformation>
			<summary>Compile error in aspectj compile phase occurs when a perfom eclipse is run after upgrade to Spring 3.0.4</summary>
			<description>After upgrading to Spring 3.0.4 the following errors occur when executing &amp;amp;apos;perform eclipse&amp;amp;apos; after running the expenses.roo script:
[Thread-6] [ERROR] The import flexjson cannot be resolved
[Thread-6] [ERROR] JSONSerializer cannot be resolved to a type
[Thread-6] [ERROR] JSONDeserializer cannot be resolved to a type
[Thread-6] [ERROR] JSONSerializer cannot be resolved to a type
[Thread-6] [ERROR] JSONDeserializer cannot be resolved to a type
[Thread-6] [ERROR] The import flexjson cannot be resolved
[Thread-6] [ERROR] JSONSerializer cannot be resolved to a type
[Thread-6] [ERROR] JSONDeserializer cannot be resolved to a type
[Thread-6] [ERROR] JSONSerializer cannot be resolved to a type
[Thread-6] [ERROR] JSONDeserializer cannot be resolved to a type
[Thread-6] [ERROR] The import flexjson cannot be resolved
[Thread-6] [ERROR] JSONSerializer cannot be resolved to a type
[Thread-6] [ERROR] JSONDeserializer cannot be resolved to a type
[Thread-6] [ERROR] JSONSerializer cannot be resolved to a type
[Thread-6] [ERROR] JSONDeserializer cannot be resolved to a type
[Thread-6] [WARNING] advice defined in org.springframework.orm.jpa.aspectj.JpaExceptionTranslatorAspect has not been applied [Xlint:adviceDidNotMatch]
[Thread-6] [WARNING] advice defined in org.springframework.mock.staticmock.AnnotationDrivenStaticEntityMockingControl has not been applied [Xlint:adviceDidNotMatch]
[Thread-6] [WARNING] advice defined in org.springframework.mock.staticmock.AbstractMethodMockingControl has not been applied [Xlint:adviceDidNotMatch]
[Thread-6] [INFO] ------------------------------------------------------------------------
[Thread-6] [ERROR] BUILD ERROR
[Thread-6] [INFO] ------------------------------------------------------------------------
[Thread-6] [INFO] Compiler errors : 
[Thread-6] error at import flexjson.JSONDeserializer;
[Thread-6]        ^^^^^^^oo&amp;gt; 
[Thread-6] /home/stewarta/projects/roo-test/expenses/src/main/java/com/springsource/extrack/server/domain/Employee_Roo_Json.aj:4:0::0 The import flexjson cannot be resolved
[Thread-6] error at import flexjson.JSONSerializer;
[</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.json.JsonCommands.java</file>
			<file type="M">org.springframework.roo.addon.json.JsonOperations.java</file>
			<file type="M">org.springframework.roo.addon.json.JsonOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1239</link>
		</links>
	</bug>
	<bug id="1210" opendate="2010-08-13 05:09:12" fixdate="2010-08-22 21:14:53" resolution="Complete">
		<buginformation>
			<summary>Import statements missing package name.</summary>
			<description>I have a class SignCommand annotated with @RooJavaBean and with this property:
somepackage.SomeClass.Enum sslRef;
For this roo generates this getter:
    public Enum SignCommand.getSslRef() 
{
        return this.sslRef;
    }

which is fine, but it imports SomeClass.Enum without package name, so the import can&amp;amp;apos;t be resolved.</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="1127" opendate="2010-07-21 02:52:12" fixdate="2010-08-22 21:56:32" resolution="Complete">
		<buginformation>
			<summary>Tests randomly fail for simple projects that use MYSQL db but work in HYPERSONIC_IN_MEMORY db</summary>
			<description>I was noticing that my tests would fail, with "java.lang.AssertionError: Data on demand for &amp;amp;apos;Thing&amp;amp;apos; failed to initialize correctly" (replace &amp;amp;apos;Thing&amp;amp;apos; with the name of a random class). My search through the forums found a similar, though not same issue where the reporter said that the tests would eventually pass if you re-ran them often enough. So I started re-running my tests, and noticed that the failing classes would change with each run.
In order to rule out something I may have changed during round-trip engineering, I created a new basic project (attached as log.roo-InMemoryTest.txt). To my disappointment, it worked fine. After further attempts with my main project such as re-creating all the integration tests, I decided to go back to my test project and try using the MYSQL database that I was using for my main project (attached as log.roo-MySqlTest.txt)... and Voila! My simple little four entity project will fail on random classes and then every now and then pass. (see attached TestResults.txt)
In fairness, this might be a bit complex of an example, since the "Thing" entity has a reference to a "Store" and a "Person", and the "Storage" entity has a collection of "Thing"s. However, that&amp;amp;apos;s not really that complex of a scenario in real life. Given that the error message in the surefire-report references "failed to initialize correctly", I suspect that the failure may be due to an order of executing the tests... but that&amp;amp;apos;s just a guess.
I will try installing 1.1.0.M2 to see if the situation persists.
Thanks for all your hard work on this project, the above incident aside, I love this tool.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">873</link>
			<link type="Related" description="is related to">734</link>
		</links>
	</bug>
	<bug id="1167" opendate="2010-08-03 18:43:22" fixdate="2010-08-23 19:35:55" resolution="Duplicate">
		<buginformation>
			<summary>@Column unique and validator</summary>
			<description>It would be nice to be able to put different columns as unique with JPA from ROO, and get validators placed which work along with @Valid.
But it is rather easy even without an addon, I gathered a solution from the forums and documented it for my self at http://hatimonline.com/2010/08/04/spring-roo-and-spring-security-tutorial-0/</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
			<file type="M">org.springframework.roo.classpath.operations.jsr303.FieldDetails.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">173</link>
		</links>
	</bug>
	<bug id="1258" opendate="2010-08-24 05:15:45" fixdate="2010-08-24 17:17:06" resolution="Fixed">
		<buginformation>
			<summary>When adding dependency via &amp;apos;dependency add&amp;apos; command ROO resets the topLevelPackage to the groupId of added dependency</summary>
			<description>Here is the script:






roo&amp;gt; project --topLevelPackage sample.travel.demo --projectName sample-travel-demo




. . . .




sample.travel.demo roo&amp;gt; dependency add --groupId legacy-travel --artifactId legacy-travel-transformer --version 1.1




Managed ROOT/pom.xml [Added dependency legacy-travel:legacy-travel-transformer:1.1]




legacy-travel roo&amp;gt; interface --class HelloGateway




Created SRC_MAIN_JAVA/legacy-travel




Created SRC_MAIN_JAVA/legacy-travel/HelloGateway.java




legacy-travel.HelloGateway roo&amp;gt;






This is actually a major issue, since it requires someone to create classes/interfaces before they add a dependency</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreCommands.java</file>
			<file type="M">org.springframework.roo.classpath.converters.JavaPackageConverter.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
			<file type="M">org.springframework.roo.addon.creator.CreatorCommands.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="513" opendate="2010-01-03 16:44:30" fixdate="2010-08-24 18:39:17" resolution="Complete">
		<buginformation>
			<summary>Generate TEXTAREA for @Lob fields</summary>
			<description>Consider the following entity






Weblog.java






@Entity




@RooJavaBean




@RooToString




@RooEntity




@Table(name = "weblogs")




public class Weblog {









  @NotNull




  @Column(name = "title")




  @Size(min = 1, max = 30)




  private String title;









  @Lob




  @Column(name = "description")




  private String description;









}






When the annotation is encountered, generate a TEXTAREA tag in the update and create pages for the description field rather than an INPUT tag.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">872</link>
		</links>
	</bug>
	<bug id="898" opendate="2010-05-25 11:31:25" fixdate="2010-08-24 19:08:33" resolution="Duplicate">
		<buginformation>
			<summary>Output erroneous arguments when JavaPackage or JavaType constructor assertions fail</summary>
			<description>See spring forum reference.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.M3</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.model.JavaPackage.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">864</link>
		</links>
	</bug>
	<bug id="1260" opendate="2010-08-24 10:18:09" fixdate="2010-08-24 19:45:44" resolution="Fixed">
		<buginformation>
			<summary>addon-gwt cannot handle enums or booleans</summary>
			<description></description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtPath.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1273" opendate="2010-08-25 11:31:17" fixdate="2010-08-25 17:04:32" resolution="Complete">
		<buginformation>
			<summary>database reverse engineer w/ MySQL and foreign keys across multiple schemas/catalogs</summary>
			<description>I just tried the new database reverse engineer functionality with an existing MySQL database which has got multiple catalogs (as MySQL doesn&amp;amp;apos;t support schemas). There are various tables with foreign key relation to tables in other catalogs.
When trying to run "database reverse engineer" it always ends with "NullPointerException at  org.springframework.roo.addon.dbre.DbreMetadata.addManyToOneFields(DbreMetadata.java:235)" (see an example run below)
de.st.db.model roo&amp;gt; database reverse engineer --package de.st.db.model --schema CM
Managed SRC_MAIN_RESOURCES\META-INF\spring\dbre.xml
Created SRC_MAIN_JAVA\de\st\db\model
Created SRC_MAIN_JAVA\de\st\db\model\CmBillContracts.java
Created de.st.db.model.CmBillContracts
Created SRC_MAIN_JAVA\de\st\db\model\CmBillInvoices.java
Created de.st.db.model.CmBillInvoices
Created SRC_MAIN_JAVA\de\st\db\model\CmBillInvoiceItems.java
Created de.st.db.model.CmBillInvoiceItems
Created SRC_MAIN_JAVA\de\st\db\model\CmBillInvoiceItemTypes.java
Created de.st.db.model.CmBillInvoiceItemTypes
Created SRC_MAIN_JAVA\de\st\db\model\CmBillRates.java
Created de.st.db.model.CmBillRates
Created SRC_MAIN_JAVA\de\st\db\model\CmBillServices.java
Created de.st.db.model.CmBillServices
Created SRC_MAIN_JAVA\de\st\db\model\CmCallCalls.java
Created de.st.db.model.CmCallCalls
Created SRC_MAIN_JAVA\de\st\db\model\CmCallPhoneLines.java
Created de.st.db.model.CmCallPhoneLines
Created SRC_MAIN_JAVA\de\st\db\model\CmCallPhoneLineTypes.java
Created de.st.db.model.CmCallPhoneLineTypes
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctAddresses.java
Created de.st.db.model.CmCtctAddresses
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctAddressCities.java
Created de.st.db.model.CmCtctAddressCities
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctAddressLocations.java
Created de.st.db.model.CmCtctAddressLocations
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctAddressStreets.java
Created de.st.db.model.CmCtctAddressStreets
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctCommunicationMeanTypes.java
Created de.st.db.model.CmCtctCommunicationMeanTypes
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctEmailAddresses.java
Created de.st.db.model.CmCtctEmailAddresses
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctEmailPrefixes.java
Created de.st.db.model.CmCtctEmailPrefixes
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctGroups.java
Created de.st.db.model.CmCtctGroups
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctGroupOwners.java
Created de.st.db.model.CmCtctGroupOwners
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctNamesFirst.java
Created de.st.db.model.CmCtctNamesFirst
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctNamesFirstCountries.java
Created de.st.db.model.CmCtctNamesFirstCountries
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctNamesLast.java
Created de.st.db.model.CmCtctNamesLast
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctPersons.java
Created de.st.db.model.CmCtctPersons
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctPersonEmailAddresses.java
Created de.st.db.model.CmCtctPersonEmailAddresses
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctPersonGroups.java
Created de.st.db.model.CmCtctPersonGroups
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctPersonPhoneNos.java
Created de.st.db.model.CmCtctPersonPhoneNos
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctPersonRelations.java
Created de.st.db.model.CmCtctPersonRelations
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctPhoneAreaCodes.java
Created de.st.db.model.CmCtctPhoneAreaCodes
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctPhoneNos.java
Created de.st.db.model.CmCtctPhoneNos
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctRelations.java
Created de.st.db.model.CmCtctRelations
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctSuperGroups.java
Created de.st.db.model.CmCtctSuperGroups
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctSuperGroupGroups.java
Created de.st.db.model.CmCtctSuperGroupGroups
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctTapirexCache.java
Created de.st.db.model.CmCtctTapirexCache
Created SRC_MAIN_JAVA\de\st\db\model\CmCtctTitles.java
Created de.st.db.model.CmCtctTitles
Created SRC_MAIN_JAVA\de\st\db\model\CmLocsCommunities.java
Created de.st.db.model.CmLocsCommunities
Created SRC_MAIN_JAVA\de\st\db\model\CmLocsCounties.java
Created de.st.db.model.CmLocsCounties
Created SRC_MAIN_JAVA\de\st\db\model\CmLocsCountries.java
Created de.st.db.model.CmLocsCountries
Created SRC_MAIN_JAVA\de\st\db\model\CmLocsDistricts.java
Created de.st.db.model.CmLocsDistricts
Created SRC_MAIN_JAVA\de\st\db\model\CmLocsMunicipalities.java
Created de.st.db.model.CmLocsMunicipalities
Created SRC_MAIN_JAVA\de\st\db\model\CmLocsNames.java
Created de.st.db.model.CmLocsNames
Created SRC_MAIN_JAVA\de\st\db\model\CmLocsNamesLang.java
Created de.st.db.model.CmLocsNamesLang
Created SRC_MAIN_JAVA\de\st\db\model\CmLocsOfficialMunicipalityKey.java
Created de.st.db.model.CmLocsOfficialMunicipalityKey
Created SRC_MAIN_JAVA\de\st\db\model\CmLocsStates.java
Created de.st.db.model.CmLocsStates
Created SRC_MAIN_JAVA\de\st\db\model\CmBillContracts_Roo_Entity.aj
Created SRC_MAIN_JAVA\de\st\db\model\CmBillInvoices_Roo_Entity.aj
Undo create SRC_MAIN_JAVA\de\st\db\model\CmBillInvoices_Roo_Entity.aj
Undo create SRC_MAIN_JAVA\de\st\db\model\CmBillContracts_Roo_Entity.aj
Undo create SRC_MAIN_JAVA\de\st\db\model\CmLocsStates.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmLocsOfficialMunicipalityKey.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmLocsNamesLang.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmLocsNames.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmLocsMunicipalities.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmLocsDistricts.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmLocsCountries.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmLocsCounties.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmLocsCommunities.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctTitles.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctTapirexCache.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctSuperGroupGroups.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctSuperGroups.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctRelations.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctPhoneNos.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctPhoneAreaCodes.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctPersonRelations.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctPersonPhoneNos.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctPersonGroups.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctPersonEmailAddresses.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctPersons.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctNamesLast.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctNamesFirstCountries.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctNamesFirst.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctGroupOwners.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctGroups.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctEmailPrefixes.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctEmailAddresses.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctCommunicationMeanTypes.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctAddressStreets.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctAddressLocations.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctAddressCities.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCtctAddresses.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCallPhoneLineTypes.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCallPhoneLines.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmCallCalls.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmBillServices.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmBillRates.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmBillInvoiceItemTypes.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmBillInvoiceItems.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmBillInvoices.java
Undo create SRC_MAIN_JAVA\de\st\db\model\CmBillContracts.java
Undo create SRC_MAIN_JAVA\de\st\db\model
Undo manage SRC_MAIN_RESOURCES\META-INF\spring\dbre.xml
NullPointerException at org.springframework.roo.addon.dbre.DbreMetadata.addManyToOneFields(DbreMetadata.java:235)
From "database introspect" I also couldn&amp;amp;apos;t see any schema information inside for those foreign key relations, so it seems, that Roo currently cannot handle data across multiple schemas/catalogs.
I wouldn&amp;amp;apos;t like the idea to have to merge 250+ tables from separate schemas into one single schema, only to get Roo working.</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1339" opendate="2010-08-31 18:19:02" fixdate="2010-08-31 18:21:18" resolution="Complete">
		<buginformation>
			<summary>IdentifierMetadata not correctly handling short and char primitives in generated equals and hashCode methods</summary>
			<description></description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1344" opendate="2010-09-01 17:56:52" fixdate="2010-09-01 18:02:22" resolution="Fixed">
		<buginformation>
			<summary>AutomaticProjectUpgradeService gives NPE if another bundle is missing</summary>
			<description>





02/09/2010 9:52:40 AM org.springframework.roo.felix.JdkDelegatingLogListener logNow




SEVERE: [org.springframework.roo.project [59]] [org.springframework.roo.project.AutomaticProjectUpgradeService] The activate method has thrown an exception




java.lang.NullPointerException




	at org.springframework.roo.project.AutomaticProjectUpgradeService.activate(AutomaticProjectUpgradeService.java:34)




	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)




	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)




	at java.lang.reflect.Method.invoke(Method.java:597)




	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:213)




	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:38)




	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:542)




	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:434)




	at org.apache.felix.scr.impl.helper.ActivateMethod.invoke(ActivateMethod.java:138)




	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:226)




	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)




	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Unsatisfied.activate(AbstractComponentManager.java:991)




	at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:298)




	at org.apache.felix.scr.impl.manager.AbstractComponentManager$3.doRun(AbstractComponentManager.java:505)




	at org.apache.felix.scr.impl.ComponentActivatorTask.run(ComponentActivatorTask.java:67)




	at org.apache.felix.scr.impl.ComponentActorThread.run(ComponentActorThread.java:96)




	at java.lang.Thread.run(Thread.java:619)





</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.AutomaticProjectUpgradeService.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">264</link>
		</links>
	</bug>
	<bug id="1351" opendate="2010-09-02 23:12:51" fixdate="2010-09-02 23:53:07" resolution="Complete">
		<buginformation>
			<summary>Maven dependency not added to project&amp;apos;s pom.xml when the jdbc driver is used for more than one database</summary>
			<description>When executing the "persistence setup" command, the maven dependency for the selected --database is removed if the JDBC driver is the same for more than one database provider. For example, MS SQL and Sybase use the same driver, jTDS. </description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.Dependency.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1307" opendate="2010-08-28 12:00:59" fixdate="2010-09-07 12:35:11" resolution="Complete">
		<buginformation>
			<summary>Generated code in gwt interface records does not compile</summary>
			<description>Wrong imports and code using an entity with integers and double. 
Steps:
project --topLevelPackage com.test.roo --projectName TestRoo --java 6
persistence setup --database GOOGLE_APP_ENGINE --provider DATANUCLEUS 
entity --class ~.datos.Pedido --testAutomatically --identifierColumn id
field string --fieldName descripcion --sizeMin 5
field date --fieldName fecha --type java.util.Date
gwt setup
entity --class ~.datos.LineaPedido --testAutomatically --identifierColumn id
Added manually 2 fields with type integer and double:
@Entity
@RooJavaBean
@RooToString
@RooEntity(identifierColumn = "id")
public class Pedido {
    @Size(min = 5)
    private String descripcion;
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "S-")
    private Date fecha;
    private int numeroLineas; // added manually
    private double precio;   // added manually
}
The generated class PedidoRecord has compile errors:
import com.test.roo.gwt.request.IntegerRecord; // does not exist
import com.test.roo.gwt.request.DoubleRecord;   // does not exist
@RooGwtMirroredFrom(Pedido.class)
@DataTransferObject(Pedido.class)
public interface PedidoRecord extends Record {
    public String TOKEN = "PedidoRecord";
    Property&amp;lt;com.test.roo.gwt.request.IntegerRecord&amp;gt; numeroLineas = new com.google.gwt.valuestore.shared.Property&amp;lt;com.test.roo.gwt.request.IntegerRecord&amp;gt;("numeroLineas", "Numero Lineas", com.test.roo.gwt.request.IntegerRecord.class);
    Property&amp;lt;com.test.roo.gwt.request.DoubleRecord&amp;gt; precio = new com.google.gwt.valuestore.shared.Property&amp;lt;com.test.roo.gwt.request.DoubleRecord&amp;gt;("precio", "Precio", com.test.roo.gwt.request.DoubleRecord.class);
</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1360" opendate="2010-09-04 18:04:56" fixdate="2010-09-07 17:12:53" resolution="Complete">
		<buginformation>
			<summary>Selenium error reports are delivered in target/target rather than just in target</summary>
			<description>It looks like the Selenium test output is placed one extra directory deep, in target/target rather than just in target.  The problem is due to the generated selenium configuration:
&amp;lt;results&amp;gt;$
{project.build.directory}/target/selenium.txt&amp;lt;/results&amp;gt;
should be
&amp;lt;results&amp;gt;${project.build.directory}
/selenium.txt&amp;lt;/results&amp;gt;</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1366" opendate="2010-09-08 07:18:37" fixdate="2010-09-09 21:35:46" resolution="Complete">
		<buginformation>
			<summary>DBRE generates incorrect &amp;apos;mappedBy&amp;apos; name in 1-to-many</summary>
			<description>DBRE generates incorrect mappedBy. The bug seems to be in using foreign key/field sequence:
Example:
One the one-2-many side (Course):
@OneToMany(mappedBy = "course")
private Set&amp;lt;Student&amp;gt; Course.students;
On the many-2-one side (Student):
@ManyToOne
@JoinColumn(name = "ST_CO", referencedColumnName = "CO_PK")
private Course Student.course2;
&amp;amp;apos;mappedBy&amp;amp;apos; should be &amp;amp;apos;course2&amp;amp;apos; instead of &amp;amp;apos;course&amp;amp;apos;; OR field &amp;amp;apos;Student.course2&amp;amp;apos; should be &amp;amp;apos;Student.course&amp;amp;apos; instead?</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
		</fixedFiles>
	</bug>
	<bug id="879" opendate="2010-05-24 23:29:33" fixdate="2010-09-13 02:50:38" resolution="Complete">
		<buginformation>
			<summary>Fix unit tests for applications running in the Google App Engine</summary>
			<description>Unit tests currently do not pass for applications running in the Google App Engine, either in STS/Eclipse or when running mvn gae:run or mvn gae:deploy</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.ScaffoldMobileShell-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtPath.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.place.ApplicationPlace-template.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.Scaffold-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.SharedType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileListener.java</file>
			<file type="M">org.springframework.roo.addon.gwt.TemplateResourceLoader.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.place.ScaffoldRecordPlace.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.RooIntegrationTest.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.place.ScaffoldPlace.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.ScaffoldMobile-template.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestOperations.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtCommands.java</file>
			<file type="M">org.springframework.roo.addon.gwt.MirrorType.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.gwt.ui.ApplicationKeyNameRenderer-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.place.ListScaffoldPlace.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.ScaffoldShell-template.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestCommands.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperations.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.place.ApplicationRecordPlace-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.place.ApplicationListPlace-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.DefaultMirrorTypeNamingStrategy.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1338</link>
		</links>
	</bug>
	<bug id="1399" opendate="2010-09-15 15:00:22" fixdate="2010-09-16 14:24:10" resolution="Complete">
		<buginformation>
			<summary>addon-dbre &amp; OneToOne</summary>
			<description>addon-dbre generated entities with one-to-one relationship established have circular reference via toString aspects.
Let&amp;amp;apos;s say you have entity A and B with @OneToOne on A.refB and B.refA. Then you call A.toString() it will call A.refB.toString() who in is&amp;amp;apos;s turn will call B.refA.toString() -&amp;gt; loop. Need to be fixed. We should exclude those from toString at all or include it only at identifying side</description>
			<version>1.1.0.RC1</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.MutableClassOrInterfaceTypeDetails.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1253</link>
		</links>
	</bug>
	<bug id="1385" opendate="2010-09-10 14:31:17" fixdate="2010-09-17 08:33:33" resolution="Duplicate">
		<buginformation>
			<summary>Exception while creating roo addon </summary>
			<description>I am trying to create a simple addon using the script provided with the roo 1.1.0M3 zip but I am getting this error 
Could not locate &amp;amp;apos;/org/springframework/roo/addon/creator/simple\roo-addon-simple-template.xml&amp;amp;apos; in classloader
Script execution aborted
Can anybody please help me solve this problem?</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.creator.CreatorOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1415</link>
		</links>
	</bug>
	<bug id="1404" opendate="2010-09-16 06:45:53" fixdate="2010-09-17 15:06:11" resolution="Complete">
		<buginformation>
			<summary>Roo source code does not compile with Java 5</summary>
			<description>
Compilation failure
classpath/src/main/java/org/springframework/roo/classpath/operations/HintOperationsImpl.java:[64,44]
cannot find symbol
symbol  : method keySet()
location: class java.util.ResourceBundle
keySet method is available since 1.6 version
 http://download.oracle.com/javase/6/docs/api/java/util/ResourceBundle.html</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.HintOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1418" opendate="2010-09-18 10:12:37" fixdate="2010-09-18 19:24:06" resolution="Complete">
		<buginformation>
			<summary>Max size of a string field causing test integration to fail</summary>
			<description>There seems to be an issue with the test data generated for the Integration Tests used with &amp;amp;apos;perform tests&amp;amp;apos;.
Steps to reproduce:
1. Modify clinic.roo, change AbstractPersion firstName maxSize to 19
2. run the script
3. run perform tests
Build Failure occurrs
[Thread-8] Tests in error:
[Thread-8]   testPersist(com.springsource.petclinic.domain.OwnerIntegrationTest)
[Thread-8]   testPersist(com.springsource.petclinic.domain.VetIntegrationTest)
From what I have been able to figure, it has something to do with how the test data is being created.  The data it&amp;amp;apos;s using to put in the firstName field is causing the error.
It also seems to be dependant on the size of the field name.  So 19 causes the issue, 20 doesn&amp;amp;apos;t, but if you remove a character from the fieldName you can get 19 to work.
i.e. max=19, field name =firstNam (removed one character to make the field name shorter)
Now it starts failing at max=18 and works at max=19.
Same the other way, if you add a charater to the field name, it starts failing at 20 (i.e. max=19, field name = firstName1)
So I assume there is some test data function that is using the field name and is creating test data that is bigger than the max field size.
Seems to be creating data field name size + 11 and the error occurs when field name is greater than max-11
So end result name of a string field can&amp;amp;apos;t be more than max size of field - 11, and
setting --sizeMax &amp;lt; 12 will never allow the integration tests to pass successfully.
I included a couple modified clinic.roo scripts that show the error.
clinic-test1-fail.roo - set the max size of the firstName field to 19
clinic-test1-success.roo - reduce the size of the fieldName by one to firstNam
clinic-test2-fail.roo - increase the size of the fieldName by one to firstName1
clinic-test3-fail.roo - add new string field with long fieldName and short maxSize (personCode --sizeMax 3)
clinic-test4-success.roo - add new string field with short fieldName &amp;amp;apos;a&amp;amp;apos; and maxSize 12
clinic-test4-fail.roo - add new string field with short fieldName &amp;amp;apos;a&amp;amp;apos; and maxSize 11</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1374" opendate="2010-09-09 03:16:15" fixdate="2010-09-20 21:58:47" resolution="Complete">
		<buginformation>
			<summary>NullPointerException adding a method using JavaParserMethodMetadata.addMethod</summary>
			<description>Hi!
I found a NullPointerException adding a method to a class using JavaParserMethodMetadata.






java.lang.NullPointerException




    at org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadata.addMethod(JavaParserMethodMetadata.java:320)






Roo throws the Exception when I call JavaParserMethodMetadata.addMethod and checks if there&amp;amp;apos;s any method with the same method name and input parameter size. The problem is when there&amp;amp;apos;s a method in the class with the same method name but has no input parameters:






JavaParserMethodMetadata.java






md.getName().equals(d.getName()) &amp;amp;&amp;amp; md.getParameters().size() == d.getParameters().size()






This doesn&amp;amp;apos;t check if md.getParameters() is null before get the size and throws NullPointerException:
Thanks!</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1375</link>
			<link type="Related" description="is related to">1372</link>
		</links>
	</bug>
	<bug id="1375" opendate="2010-09-09 05:41:16" fixdate="2010-09-20 22:09:40" resolution="Complete">
		<buginformation>
			<summary>JavaParserMethodMetadata.addMethod allows to add duplicated methods to a class</summary>
			<description>Hi!
I found a bug related to JavaParserMethodMetadata addMethod.
When I use JavaParserMethodMetadata.addMethod(..) to create a method with the same number, type and name of parameters and return type the method is created. This is not the correct behaviour, the method has to warn me that the method is duplicated.
When I debugged the code I found taht the problem is: after creating the annotation for input parameters in the method inside the &amp;amp;apos;for&amp;amp;apos; in *line 225*:






JavaParserMethodMetadata.java






for (AnnotatedJavaType methodParameter : method.getParameterTypes()) {




	index++;




...




}






The problem is that the variable index never is reset and only compares the method type of the first parameter (of hte method we are creating) with the method type of the last parameter of the method in the class and never matches, never find a duplicated method with parameters because of this.
When the method tries to locate where to add the method and also verify if this method already exists, always adds the method to the class because the order of the parameters to compare never is correct (if (!existingParameter.getJavaType().equals(method.getParameterTypes().get(index)))):






JavaParserMethodMetadata.java






// Locate where to add this method; also verify if this method already exists




for (BodyDeclaration bd : members) {




	if (bd instanceof MethodDeclaration) {




		// Next method should appear after this current method




		MethodDeclaration md = (MethodDeclaration) bd;




		if (md.getName().equals(d.getName()) &amp;amp;&amp;amp; md.getParameters().size() == d.getParameters().size()) {




			// Possible match, we need to consider parameter types as well now




			JavaParserMethodMetadata jpmm = new JavaParserMethodMetadata(method.getDeclaredByMetadataId(), md, compilationUnitServices, typeParameters);




			boolean matchesFully = true;




			for (AnnotatedJavaType existingParameter : jpmm.getParameterTypes()) {




				if (!existingParameter.getJavaType().equals(method.getParameterTypes().get(index))) {




					matchesFully = false;




					break;




				}




			}




			if (matchesFully) {




				throw new IllegalStateException("Method &amp;amp;apos;" + method.getMethodName().getSymbolName() + "&amp;amp;apos; already exists with identical parameters");




			}




		}




	}




}






Thanks!</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1374</link>
			<link type="Related" description="is related to">1372</link>
		</links>
	</bug>
	<bug id="1415" opendate="2010-09-17 02:30:37" fixdate="2010-09-22 09:00:36" resolution="Fixed">
		<buginformation>
			<summary>Addon create fails on Windows platform</summary>
			<description>Command addon create advance --topLevelPackage test and addon create simple --topLevelPackage test fails on Windows with:
Could not locate &amp;amp;apos;/org/springframework/roo/addon/creator/simple\roo-addon-advanced-template.xml in classloader.
On Mac OS it works fine.</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.creator.CreatorOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1385</link>
		</links>
	</bug>
	<bug id="1409" opendate="2010-09-16 11:12:22" fixdate="2010-09-26 16:23:23" resolution="Complete">
		<buginformation>
			<summary>DBRE should mark repeated column mapping as non-insertable/non-updatable</summary>
			<description>If column already is in use to declare join via






...




@JoinColumn(name = "columnX", referencedColumnName = "columnX") 




...






all consequences uses of the same column in join have to be annotated to be "non-insertable/non-updatable", i.e.






    @ManyToOne




    @JoinColumns({ 




		@JoinColumn(name = "column0", referencedColumnName = "column0"), 




		@JoinColumn(name = "column1", referencedColumnName = "column1"), 




		@JoinColumn(name = "column2", referencedColumnName = "column2") 




	})




    private EntityX ...;




    




    @ManyToOne




    @JoinColumn(name = "column0", referencedColumnName = "column0", insertable=false, updatable=false)




    private EntityY ...;





</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.SchemaIntrospector.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.ForeignKey.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Reference.java</file>
		</fixedFiles>
	</bug>
	<bug id="173" opendate="2009-07-30 00:37:37" fixdate="2010-09-26 19:13:24" resolution="Complete">
		<buginformation>
			<summary>Add ability to define field uniqueness constraints</summary>
			<description>I think it would be a useful feature for Roo to provide a way to define a field, or set of fields, as unique. For example, when adding a new field to a class:
add field string -fieldName myField -unique ....
That would then create a database column with a uniqueness constraint? Otherwise I will have to go in and manually add this constraint to all the columns that need it in the db.
Also, it would be nice to be able to define multiple-column uniqueness constraints such as in MySql:
UNIQUE KEY &amp;amp;apos;userId_2&amp;amp;apos; (&amp;amp;apos;userId&amp;amp;apos;,&amp;amp;apos;customerId&amp;amp;apos;)</description>
			<version>1.0.0.RC1</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
			<file type="M">org.springframework.roo.classpath.operations.jsr303.FieldDetails.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1167</link>
		</links>
	</bug>
	<bug id="1357" opendate="2010-09-04 14:04:35" fixdate="2010-09-27 01:26:40" resolution="Fixed">
		<buginformation>
			<summary>Java keywords are generated for entity type variable names.</summary>
			<description>When an entity has the same name as a java keyword the variable names used/created by the controller script cause the generated files to be invalid/erroneous.
ie.
   entity --class ~.products.Package
will create method signatures on controller aspects which call something like:
   doSomethingWith(Package package)
this will not compile correctly due to the package keyword being used as a variable.
I assume that this problem will occur for most java keywords as well as those used by aspectj.</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">1675</link>
		</links>
	</bug>
	<bug id="1387" opendate="2010-09-11 00:02:36" fixdate="2010-09-29 07:46:31" resolution="Complete">
		<buginformation>
			<summary>ConverterNotFoundException: No converter found</summary>
			<description>Using a dynamic finder for a domain entity produces an exception iff the finder method was called prior to creating or listing any entities of this type.
ConverterNotFoundException: No converter found capable of converting from &amp;amp;apos;com.springsource.petclinic.domain.Owner&amp;amp;apos; to &amp;amp;apos;java.lang.String&amp;amp;apos;
Steps to reproduce:
1. use sample project petclinic
2. setup persistence
3. start application
4. add an Owner entity
5. restart application
6. directly use finder Pet.findPetsByOwner (through petclinic/pets?find=ByOwner&amp;amp;form)
7. exception occurs
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from &amp;amp;apos;com.springsource.petclinic.domain.Owner&amp;amp;apos; to &amp;amp;apos;java.lang.String&amp;amp;apos;
at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:180)
...
The exception does not occur if entities of the searched type were created or listed prior to using the finder.
It just happens at application start.
It seems that the @InitBinder annotated method in the _Roo_Controller is not called.</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">7594</link>
			<link type="Related" description="is related to">1405</link>
		</links>
	</bug>
	<bug id="1476" opendate="2010-10-01 03:54:08" fixdate="2010-10-02 19:54:54" resolution="Fixed">
		<buginformation>
			<summary>throwsTypes collection from MethodMetada is not well formed</summary>
			<description>
Hi! I&amp;amp;apos;m trying to inspect Exceptions defined in an especific method.
When I use:






ClassOrInterfaceTypeDetails tmpClassDetails = classpathOperations




	.getClassOrInterface(javaType);









MutableClassOrInterfaceTypeDetails classDetails = (MutableClassOrInterfaceTypeDetails) tmpClassDetails;









List&amp;lt;? extends MethodMetadata&amp;gt; methodList = classDetails




.getDeclaredMethods();






To analyze exceptions from a method in a class:






TestClass.java






// Method to inspect




public String returnString(Long numero) throws org.project.test.project.exceptions.TestException, Exception {




    return "TestResult";




}






MethodMetadata has a throwsTypes collection but JavaTypes defiend inside aren&amp;amp;apos;t correct this is list result:






[exceptions.TestException, Exception]






Instead of:






[org.project.test.project.exceptions.TestException, java.lang.Exception]






The other collections as parameterTypes and annotations are well formed with the complete JavaPath (java package + java class name).
Thank you !
Related to: 

https://jira.springsource.org/browse/ROO-1471 - Add exceptions to a new method.
https://jira.springsource.org/browse/ROO-1372 - Joey Infrastucture - Create/Update an existing class, method or field.

</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1471</link>
			<link type="Related" description="is related to">1529</link>
		</links>
	</bug>
	<bug id="1471" opendate="2010-09-30 06:25:40" fixdate="2010-10-02 20:02:22" resolution="Complete">
		<buginformation>
			<summary>JavaParserMethodMetadata.addMethod doesn&amp;apos;t add &amp;apos;throw exception list&amp;apos; to new method.</summary>
			<description>Hi!
Creation of a new method to a class using JavaParserMethodMetadata.addMethod(...) only adds throws type list when parameter list is not empty because // Add exceptions which the method my throw code is inside parameter list loop.






JavaParserMethodMetadata.java






// Lines 259-268




// Add exceptions which the method my throw




if (method.getThrowsTypes().size() &amp;gt; 0) {




	List&amp;lt;NameExpr&amp;gt; throwsTypes = new ArrayList&amp;lt;NameExpr&amp;gt;();




	for (JavaType javaType: method.getThrowsTypes()) {




		NameExpr importedType = JavaParserUtils.importTypeIfRequired(compilationUnitServices.getEnclosingTypeName(), compilationUnitServices.getImports(), javaType);




		throwsTypes.add(importedType);




	}




	d.setThrows(throwsTypes);




}






It must be checked outside parameter loop in JavaParserMethodMetadata.addMethod(...).
And if create a method with parameters and you add a List of JavaTypes that don&amp;amp;apos;t extend java.lang.Exception or java.lang.Throwable  as throwsTypes variable in MethodMetadata (i.e. java.lang.Long), the method is created anyway without errors (in ROO console) but in the project exists compiling errors because this is not an Exception class declared to be thrown.
Thanks!</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1476</link>
		</links>
	</bug>
	<bug id="1423" opendate="2010-09-20 01:06:51" fixdate="2010-10-04 20:55:00" resolution="Complete">
		<buginformation>
			<summary>DataOnDemand code invalid when @Min and @Max annotations are used on an entity field</summary>
			<description>When specifying a @Min(?L) and @Max(?L) annotation on an entity field the DataOnDemand aspect that gets generated for that entity contains a compilation error. Code that gets generated for 






MyBean.java






...




@Min(0L)




@Max(100L)




private long total;




...






is 






MyBeanDataOnDemand_Roo_DataOnDemand.aj






...




public MyBean MyBeanDataOnDemand.getNewTransientMyBean(int index) {




   ...




   java.lang.Long total = new Integer(index).longValue();




   if (total &amp;lt; 0L || total &amp;gt; L100) { // Should be 100L instead of L100




       total = 100L;




   }




...




}






Note the greater than condition is invalid.
This only seems to happen when both a @Min and @Max annotations are present together. Having either on it&amp;amp;apos;s own works fine.</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1353" opendate="2010-09-03 14:20:45" fixdate="2010-10-05 04:45:03" resolution="Complete">
		<buginformation>
			<summary>Stale sha info in Roo shell in STS</summary>
			<description>Set up STS 2.5.0.M3 Build Id: 201008251000 to use a roo built from source
Make or import a roo project and note the sha it shows when the shell starts
Close the shell
Commit a change to git and rebuild roo
rm -rf spring-roo/bootstrap/target/osgi
run roo-dev somewhere
Now open a roo shell again. Note that that it&amp;amp;apos;s still reporting the old sha. But it&amp;amp;apos;s pretty clear that it&amp;amp;apos;s actually running the new bits that you built. Looks like the code that displays that sha is pulling it from some stale cached location. 
A minor bug, perhaps, but it just sent me on a bit of a wild goose chase.</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.AbstractShell.java</file>
		</fixedFiles>
	</bug>
	<bug id="1421" opendate="2010-09-19 13:22:29" fixdate="2010-10-06 02:10:17" resolution="Complete">
		<buginformation>
			<summary>AspectJ very slow in STSM3 after running DBRE</summary>
			<description>I ran DBRE from an MSSQL 2008 database of 430 tables (and fair amount of relationships/FPKs).
All was fine until I restarted roo (using roo-dev M4). Everything is very slow: roo command line and STS aspect compilation; and consumes tons of memory. I had increase STS memory to 4G.
My questions are:
1. Have I exceeded table count limit?
2. Is there another way work with DBRE project of this size - is size the issue?
3. Is there a way to customize _Roo_DbManaged to use foreign keys instead of relationship annotations - I think this the culprit?</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
			<file type="M">org.springframework.roo.file.monitor.polling.PollingFileMonitorService.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreModelServiceImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">1506</link>
		</links>
	</bug>
	<bug id="1451" opendate="2010-09-23 22:14:48" fixdate="2010-10-06 07:35:09" resolution="Fixed">
		<buginformation>
			<summary>roo generated controllers and scaffolding is unable to support non-numeric keys</summary>
			<description>I created a few entities and I annotated one of my entity attributes with the @Id annotation and I took off the autogenerated annotation.  I let roo regen the jspx and controller scaffolding and everything seemed fine until I tried to enter a string into the key that contained a "/" in it.  The entity is called gl and the key is called glAccount.  When I attempt to enter the gl of "A/R", the post (create) controller fires as it should then it redirects to "redirect:/gl/"+entity.getGlAccount();  which ends up having a url of GET("/gl/A/R")  which should be "/gl/A%2fR".  Please update the scaffolding to escape the id values when creating links in the tagx files and in the controllers.</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1510" opendate="2010-10-06 13:20:29" fixdate="2010-10-06 13:22:02" resolution="Fixed">
		<buginformation>
			<summary>Entity command does not honor --abstract modifier</summary>
			<description>When creating an abstract entity via the Roo shell:






entity --class ... --abstract






the modifier of the resulting type does not contain the abstract keyword.</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathCommands.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1512" opendate="2010-10-06 15:03:00" fixdate="2010-10-06 15:06:06" resolution="Fixed">
		<buginformation>
			<summary>Remove web.xml welcome file handling from GWT addon</summary>
			<description>Remove web.xml welcome file handling from GWT addon</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1479" opendate="2010-10-02 03:57:12" fixdate="2010-10-06 22:24:02" resolution="Complete">
		<buginformation>
			<summary>DBRE on a DB2400 datasource throwing IllegalArgumentException JDBC driver not available for &amp;apos;com.ibm.as400.access.AS400JDBCDriver&amp;apos;</summary>
			<description>Attempting to DBRE on a DB2400 datasource fails with java.lang.IllegalArgumentException: JDBC driver not available for &amp;amp;apos;com.ibm.as400.access.AS400JDBCDriver&amp;amp;apos;.
Have attempted to build Roo M4 from Git and copy the org.springframework.roo.wrapping.jtopen-6.7.0.0001.jar dependency into the M3 bundle directory.  Have also tried DBRE right from M4, but both give the same result.</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jdbc.polling.internal.CommonJdbcDriverProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="1515" opendate="2010-10-07 00:25:41" fixdate="2010-10-07 00:31:41" resolution="Complete">
		<buginformation>
			<summary>Dependencies not added using ProjectOperations.dependencyUpdate when switching ORM provider or databases</summary>
			<description>Change JpaOperationsImpl  to add dependencies instead of updating them. Problem is due to having a property place holder for a version number rather than a number itself. The equals() method in dependency sees the dependency as the same.</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1467</link>
		</links>
	</bug>
	<bug id="1517" opendate="2010-10-07 04:24:10" fixdate="2010-10-07 04:25:51" resolution="Fixed">
		<buginformation>
			<summary>Solr addon has unnessesary dependency on to string addon</summary>
			<description>The &amp;amp;apos;solr all&amp;amp;apos; command executed on the petclinic project produces the following stack trace:






~.web roo&amp;gt; solr all




Managed SRC_MAIN_JAVA/com/springsource/petclinic/domain/Visit.java                                                                                                                                        [org.springframework.roo.wrapping.inflector [70]] BundleEvent STOPPED




Managed SRC_MAIN_JAVA/com/springsource/petclinic/domain/Vet.java




Managed SRC_MAIN_JAVA/com/springsource/petclinic/domain/Pet.java




Managed SRC_MAIN_JAVA/com/springsource/petclinic/domain/Owner.java




Managed SRC_MAIN_JAVA/com/springsource/petclinic/SolrSearchAsyncTaskExecutor.aj




Created SRC_MAIN_JAVA/com/springsource/petclinic/domain/Pet_Roo_SolrSearch.aj




Undo create SRC_MAIN_JAVA/com/springsource/petclinic/domain/Pet_Roo_SolrSearch.aj




Undo manage SRC_MAIN_JAVA/com/springsource/petclinic/SolrSearchAsyncTaskExecutor.aj




Undo manage SRC_MAIN_JAVA/com/springsource/petclinic/domain/Owner.java




Undo manage SRC_MAIN_JAVA/com/springsource/petclinic/domain/Pet.java




Undo manage SRC_MAIN_JAVA/com/springsource/petclinic/domain/Vet.java




Undo manage SRC_MAIN_JAVA/com/springsource/petclinic/domain/Visit.java




Invalid dependency between upstream &amp;amp;apos;MID:org.springframework.roo.addon.solr.SolrMetadata#SRC_MAIN_JAVA?com.springsource.petclinic.domain.Pet&amp;amp;apos; and downstream &amp;amp;apos;MID:org.springframework.roo.addon.tostring.ToStringMetadata#SRC_MAIN_JAVA?com.springsource.petclinic.domain.Pet&amp;amp;apos;




java.lang.IllegalArgumentException: Invalid dependency between upstream &amp;amp;apos;MID:org.springframework.roo.addon.solr.SolrMetadata#SRC_MAIN_JAVA?com.springsource.petclinic.domain.Pet&amp;amp;apos; and downstream &amp;amp;apos;MID:org.springframework.roo.addon.tostring.ToStringMetadata#SRC_MAIN_JAVA?com.springsource.petclinic.domain.Pet&amp;amp;apos;




    at org.springframework.roo.support.util.Assert.isTrue(Assert.java:65)




    at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.registerDependency(DefaultMetadataDependencyRegistry.java:61)




    at org.springframework.roo.addon.tostring.ToStringMetadataProvider.getMetadata(ToStringMetadataProvider.java:36)




    at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:250)




    at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:139)




    at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:124)




    at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:179)




    at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:244)




    at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:138)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanNotified(PollingFileMonitorService.java:217)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:183)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:140)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)




    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:162)




    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:326)




    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:119)




    at java.lang.Thread.run(Thread.java:637)





</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadata.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="1331" opendate="2010-08-30 18:35:13" fixdate="2010-10-07 10:52:39" resolution="Complete">
		<buginformation>
			<summary>Add dependency injection to GWT addon</summary>
			<description>Incorporate dependency injection into the GWT addon using standard javax.inject annotations and interfaces to enable swapping between implementations.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ioc.ScaffoldModule-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldApp-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ioc.ScaffoldInjector-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldDesktopApp-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldMobileApp-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.Scaffold-template.java</file>
			<file type="D">org.springframework.roo.addon.gwt.scaffold.ioc.ScaffoldPlaceHistoryHandler-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.Scaffold-template.java</file>
			<file type="D">org.springframework.roo.addon.gwt.scaffold.ScaffoldShell-template.java</file>
			<file type="D">org.springframework.roo.addon.gwt.scaffold.ScaffoldMobile-template.java</file>
			<file type="D">org.springframework.roo.addon.gwt.scaffold.ioc.PlaceHistoryFactory-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtPath.java</file>
			<file type="M">org.springframework.roo.addon.gwt.SharedType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileListener.java</file>
			<file type="D">org.springframework.roo.addon.gwt.scaffold.ScaffoldPlaceHistoryHandler-template.java</file>
		</fixedFiles>
	</bug>
	<bug id="1525" opendate="2010-10-07 16:52:31" fixdate="2010-10-07 18:19:49" resolution="Complete">
		<buginformation>
			<summary>DBRE does not handle slash characters in table and column names</summary>
			<description>Database reverse engineering fails to convert forward and backslash characters into valid java type and field names</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.SchemaIntrospector.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Column.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreTypeResolutionServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1403" opendate="2010-09-16 06:31:32" fixdate="2010-10-07 19:59:59" resolution="Complete">
		<buginformation>
			<summary>NPE in GwtMetadata for @RooEntity(versionField = "")</summary>
			<description>GwtMetadata.resolveEntityInformation(GwtMetadata.java:142) throws NPE trying to access entityMetadata.getVersionField() since there is no version field defined. By default DBRE annotates entities with @RooEntity(versionField = ""). At the same time EntityMetadata.getVersionField() return null in this case. This causes GwtMetadata to e caught with NPE.</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1406" opendate="2010-09-16 07:44:22" fixdate="2010-10-07 22:34:03" resolution="Complete">
		<buginformation>
			<summary>addon-gwt does not support java.math.BigDecimal and java.lang.Character</summary>
			<description>for entities with java.math.BigDecimal and/or java.lang.Character field addon-gwt generate import like:






package com.yourpackage.gwt.request;









import java.util.Date;




import org.springframework.roo.addon.gwt.RooGwtMirroredFrom;




import com.google.gwt.requestfactory.shared.EntityProxy;




import com.google.gwt.requestfactory.shared.ProxyFor;




import com.google.gwt.requestfactory.shared.Property;









import com.yourpackage.model.YouEntity;









//?!




import com.yourpackage.gwt.request.BigDecimalProxy;




import com.yourpackage.gwt.request.CharacterProxy;









@RooGwtMirroredFrom(YouEntity.class)




@ProxyFor(YouEntity.class)




public interface YouEntityProxy extends EntityProxy {











But it does not generates com.yourpackage.gwt.request.BigDecimalProxy/CharacterProxy classes. And IMHO it should not. Instead why not use these classes as is?






Property&amp;lt;com.yourpackage.gwt.request.BigDecimalProxy&amp;gt; field = ...




-&amp;gt;




Property&amp;lt;java.math.BigDecimal&amp;gt; filed = ...





</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtProxyProperty.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ui.ShortRenderer-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ui.CharBox-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ui.CharParser-template.java</file>
		</fixedFiles>
	</bug>
	<bug id="1536" opendate="2010-10-11 01:36:44" fixdate="2010-10-11 01:41:05" resolution="Complete">
		<buginformation>
			<summary>Order of foreign keys in .roo-dbre xml file determines @ManyToOne and @OneToOne field generation</summary>
			<description>The order of the foreign keys in the .roo-dbre xml file should not affect the generation of @ManyToOne and @OneToOne fields. This is due to finding foreign keys based on the table&amp;amp;apos;s column names and stopping on the first match of a column instead of simply iterating through the foreign keys themselves and obtaining the local column from the foreign key&amp;amp;apos;s reference elements.</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Table.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.ColumnComparator.java</file>
		</fixedFiles>
	</bug>
	<bug id="1534" opendate="2010-10-10 15:58:51" fixdate="2010-10-11 20:18:42" resolution="Complete">
		<buginformation>
			<summary>Mobile edit view doesn&amp;apos;t import GWT local typed ValueBoxes, Renderers and Parsers</summary>
			<description>The script below will produce a scaffold app which repeats the exception on gwt:run or gwt:compile
project --topLevelPackage com.springsource.menagerie
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY
entity --class ~.server.domain.RingMaster --testAutomatically
field string --fieldName name
entity --class ~.server.domain.Exhibit --testAutomatically
field boolean --fieldName boolAnimal 
field other --type java.lang.Character --fieldName charAnimal
field string --fieldName stringAnimal
field number --type java.lang.Byte byteAnimal
field number --type java.lang.Short shortAnimal
field number --type java.lang.Integer intAnimal
field number --type java.lang.Long longAnimal
field number --type java.lang.Float floatAnimal
field number --type java.lang.Double doubleAnimal
field reference --type RingMaster ringMaster
gwt setup
logging setup --level INFO</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="D">org.springframework.roo.addon.gwt.module.client.scaffold.MobileListResources-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtPath.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldApp-template.java</file>
			<file type="D">org.springframework.roo.addon.gwt.module.client.scaffold.IsScaffoldMobileActivity-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtProxyProperty.java</file>
			<file type="M">org.springframework.roo.addon.gwt.SharedType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldDesktopApp-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.MirrorType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldMobileApp-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileListener.java</file>
			<file type="D">org.springframework.roo.addon.gwt.module.client.scaffold.MobileProxyListView-template.java</file>
			<file type="D">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldPlaceHistoryMapper-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldDesktopShell-template.java</file>
			<file type="D">org.springframework.roo.addon.gwt.module.client.scaffold.PlaceHistoryFactory-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ioc.ScaffoldModule-template.java</file>
		</fixedFiles>
	</bug>
	<bug id="1535" opendate="2010-10-10 23:40:44" fixdate="2010-10-13 02:31:20" resolution="Complete">
		<buginformation>
			<summary>Update Roo for RC1</summary>
			<description>Add xalan.jar as a dependency
Switch to AppEngine 1.3.7 and Datanucleus 1.1.5 dependencies
Move GaeUserInformation class to .server package
Update to gwt-maven-plugin 1.3.2.google (w/fixes for GAE under GWT DevMode)</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="D">org.springframework.roo.addon.gwt.module.GaeUserInformation-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1548" opendate="2010-10-13 03:01:09" fixdate="2010-10-13 03:05:40" resolution="Complete">
		<buginformation>
			<summary>The last schema is null in the bindDatabaseListener method of DbreModelServiceImpl on Mac platforms </summary>
			<description>Errors messages relating to DBRE are shown on Roo startup on Mac platforms
Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.
[Thread-3] [org.springframework.roo.addon.dbre [17]] [org.springframework.roo.addon.dbre.DbreModelServiceImpl] The bindDatabaseListener method has thrown an exception
           java.lang.IllegalArgumentException: Schema required
               at org.springframework.roo.support.util.Assert.notNull(Assert.java:112)
               at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:146)
               at org.springframework.roo.addon.dbre.DbreModelServiceImpl.bindDatabaseListener(DbreModelServiceImpl.java:91)
Fix is to include a null check for lastSchema</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreModelServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="887" opendate="2010-05-25 03:24:04" fixdate="2010-10-13 15:52:34" resolution="Complete">
		<buginformation>
			<summary>Make logging compile out of generated scaffold apps</summary>
			<description>Improvements to logging that are scheduled for M4
Todo: Confirm that logging in scaffold compiles out when logging is disabled
Done: Make sure logging example is in dist
Done: Show de-obfuscated stack traces in the RequestFactoryRemoteLogHandler
Done: Send Json across the wire rather than just messages
Done: Show stack traces in the client side handlers as appropriate
Done: Move LoggingRequest to RF subclasses
Done: Fix the logging example
Not Planned: Send a LogRecord accross the wire rather than Json (this is blocked on ability to send arbitrary objects across the wire which will not be implemented for this release)
Not Planned: Make RFRLogHandler able to send multiple LogRecords accross the wire, and have it send logs every X seconds rather than right away. Instead, we will just get this for free when RF starts to do batching of all requests.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldMobileApp-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldDesktopApp-template.java</file>
		</fixedFiles>
	</bug>
	<bug id="1555" opendate="2010-10-13 19:09:24" fixdate="2010-10-14 02:10:34" resolution="Complete">
		<buginformation>
			<summary>Undo Functionality Should clean up its temp files?</summary>
			<description>I believe Roo is generating a tremendous amount of temp files in order to Undo actions when an error occurs.  These temp files are never removed so the temp directory continues to grow bigger and bigger.
Since Roo doesn&amp;amp;apos;t allow the user to "Undo" commands, this Undo functionality is used only internally.  I would assume that the temp files are created so if an error occurs processing a command any actions taken before the error occurred are able to be rolledback (or Undone).
I would think it is reasonable to say if the command was performed without error then the undo files should be removed after the command completes.
This would stop the ever growing temp directory.
An example of the impact: I started a roo project on 9/13 and as of today there are 112544 File(s) 689,963,308 bytes in roo temp files dated from 9/13 to 10/13.
Same project on the computer that I did the actual development on there were over 6gb of the temp files.
10/13/2010  10:25 AM            16,801 UpdateFile8082522949573900540tmp
10/13/2010  10:25 AM            16,801 UpdateFile8831047267320096084tmp
10/13/2010  10:25 AM            16,801 UpdateFile820654767042231678tmp
10/13/2010  10:25 AM            16,801 UpdateFile8459059130848309600tmp
successfully running the roo security setup on a project generated 2047 temp files.
successfully running roo perform tests on the same project generated 654 File(s) 10,987,854 bytes
So everytime perform tests is executed it generates another 654 File(s) 10,987,854 bytes
Not exactly sure why perform tests would need Undo functionality since none of the roo managed files are being changed during this command.
Anyway, just thought I would post it so someone with a lot more knowledge could at least take a look at it.
http://forum.springsource.org/showthread.php?t=95488</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.file.undo.UpdateFile.java</file>
			<file type="M">org.springframework.roo.file.undo.DeleteDirectory.java</file>
			<file type="M">org.springframework.roo.file.undo.DeleteFile.java</file>
		</fixedFiles>
	</bug>
	<bug id="1559" opendate="2010-10-14 09:06:51" fixdate="2010-10-14 09:41:36" resolution="Complete">
		<buginformation>
			<summary>Version is reported as UNKOWN VERSION when installing into a path containing spaces</summary>
			<description></description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.AbstractShell.java</file>
		</fixedFiles>
	</bug>
	<bug id="1537" opendate="2010-10-11 15:21:52" fixdate="2010-10-14 20:24:11" resolution="Complete">
		<buginformation>
			<summary>Tests fail on simple app</summary>
			<description>Hi guys, the following script makes 8 out of 9 tests fail:
project --topLevelPackage net.opentemperament
persistence setup --provider OPENJPA --database HYPERSONIC_IN_MEMORY
entity --class ~.entities.Family --testAutomatically
field string --fieldName name
perform test
I&amp;amp;apos;ve tried it on 1.1.0.M3, 1.1.0.M1 and todays git version. Here is the output
Running net.opentemperament.entities.FamilyIntegrationTest
35  persistenceUnit  WARN   [main] openjpa.Runtime - An error occurred while registering a ClassTransformer with PersistenceUnitInfo: name &amp;amp;apos;persistenceUnit&amp;amp;apos;, root URL file:/private/tmp/zz/target/classes/. The error has been consumed. To see it, set your openjpa.Runtime log level to TRACE. Load-time class transformation will not be available.
81  persistenceUnit  INFO   [main] openjpa.Runtime - OpenJPA dynamically loaded a validation provider.
164  persistenceUnit  INFO   [main] openjpa.Runtime - Starting OpenJPA 2.0.0
248  persistenceUnit  INFO   [main] openjpa.jdbc.JDBC - Using dictionary class "org.apache.openjpa.jdbc.sql.HSQLDictionary".
Tests run: 9, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 2.754 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Family roo&amp;gt; 
Results :o&amp;gt; 
Family roo&amp;gt; 
Tests in error: 
  testCountFamilys(net.opentemperament.entities.FamilyIntegrationTest)
  testFindFamily(net.opentemperament.entities.FamilyIntegrationTest)
  testFindAllFamilys(net.opentemperament.entities.FamilyIntegrationTest)
  testFindFamilyEntries(net.opentemperament.entities.FamilyIntegrationTest)
  testFlush(net.opentemperament.entities.FamilyIntegrationTest)
  testMerge(net.opentemperament.entities.FamilyIntegrationTest)
  testPersist(net.opentemperament.entities.FamilyIntegrationTest)
  testRemove(net.opentemperament.entities.FamilyIntegrationTest)
Family roo&amp;gt; 
Tests run: 9, Failures: 0, Errors: 8, Skipped: 0
Full output:
-------------------------------------------------------------------------------
Test set: net.opentemperament.entities.FamilyIntegrationTest
-------------------------------------------------------------------------------
Tests run: 9, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 2.741 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
testCountFamilys(net.opentemperament.entities.FamilyIntegrationTest)  Time elapsed: 1.086 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: This configuration disallows runtime optimization, but the following listed types were not enhanced at build time or at class load time with a javaagent: "
net.opentemperament.entities.Family".
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:382)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:371)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:335)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:273)
	at org.springframework.transaction.aspectj.AbstractTransactionAspect.ajc$before$org_springframework_transaction_aspectj_AbstractTransactionAspect$1$2a73e96c(AbstractTransactionAspect.aj:63)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj:47)
	at net.opentemperament.entities.FamilyDataOnDemand.init(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj:36)
	at net.opentemperament.entities.FamilyDataOnDemand.getRandomFamily(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyIntegrationTest_Roo_IntegrationTest.ajc$interMethod$net_opentemperament_entities_FamilyIntegrationTest_Roo_IntegrationTest$net_opentemperament_entities_FamilyIntegrationTest$testCountFamilys(FamilyIntegrationTest_Roo_IntegrationTest.aj:25)
	at net.opentemperament.entities.FamilyIntegrationTest.testCountFamilys(FamilyIntegrationTest.java:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:59)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:115)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:102)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
Caused by: &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: This configuration disallows runtime optimization, but the following listed types were not enhanced at build time or at class load time with a javaagent: "
net.opentemperament.entities.Family".
	at org.apache.openjpa.enhance.ManagedClassSubclasser.prepareUnenhancedClasses(ManagedClassSubclasser.java:116)
	at org.apache.openjpa.kernel.AbstractBrokerFactory.loadPersistentTypes(AbstractBrokerFactory.java:304)
	at org.apache.openjpa.kernel.AbstractBrokerFactory.initializeBroker(AbstractBrokerFactory.java:228)
	at org.apache.openjpa.kernel.AbstractBrokerFactory.newBroker(AbstractBrokerFactory.java:202)
	at org.apache.openjpa.kernel.DelegatingBrokerFactory.newBroker(DelegatingBrokerFactory.java:156)
	at org.apache.openjpa.persistence.EntityManagerFactoryImpl.createEntityManager(EntityManagerFactoryImpl.java:213)
	at org.apache.openjpa.persistence.EntityManagerFactoryImpl.createEntityManager(EntityManagerFactoryImpl.java:151)
	at org.apache.openjpa.persistence.EntityManagerFactoryImpl.createEntityManager(EntityManagerFactoryImpl.java:57)
	at org.springframework.orm.jpa.JpaTransactionManager.createEntityManagerForTransaction(JpaTransactionManager.java:400)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:321)
	... 44 more
testFindFamily(net.opentemperament.entities.FamilyIntegrationTest)  Time elapsed: 0.144 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
org.springframework.dao.InvalidDataAccessApiUsageException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []; nested exception is &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:286)
	at org.springframework.orm.jpa.aspectj.JpaExceptionTranslatorAspect.ajc$afterThrowing$org_springframework_orm_jpa_aspectj_JpaExceptionTranslatorAspect$1$18a1ac9(JpaExceptionTranslatorAspect.aj:15)
	at net.opentemperament.entities.Family_Roo_Entity.findFamilyEntries_aroundBody8(Family_Roo_Entity.aj:103)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethod$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj:1)
	at net.opentemperament.entities.Family.findFamilyEntries(Family.java:1)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethodDispatch1$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj:51)
	at net.opentemperament.entities.FamilyDataOnDemand.init(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj:36)
	at net.opentemperament.entities.FamilyDataOnDemand.getRandomFamily(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyIntegrationTest_Roo_IntegrationTest.ajc$interMethod$net_opentemperament_entities_FamilyIntegrationTest_Roo_IntegrationTest$net_opentemperament_entities_FamilyIntegrationTest$testFindFamily(FamilyIntegrationTest_Roo_IntegrationTest.aj:32)
	at net.opentemperament.entities.FamilyIntegrationTest.testFindFamily(FamilyIntegrationTest.java:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:59)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:115)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:102)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
Caused by: &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.parseException(AbstractExpressionBuilder.java:119)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassMetaData(JPQLExpressionBuilder.java:197)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.resolveClassMetaData(JPQLExpressionBuilder.java:167)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:242)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:212)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateType(JPQLExpressionBuilder.java:205)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.access$200(JPQLExpressionBuilder.java:81)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder$ParsedJPQL.populate(JPQLExpressionBuilder.java:2387)
	at org.apache.openjpa.kernel.jpql.JPQLParser.populate(JPQLParser.java:61)
	at org.apache.openjpa.kernel.ExpressionStoreQuery.populateFromCompilation(ExpressionStoreQuery.java:154)
	at org.apache.openjpa.kernel.QueryImpl.newCompilation(QueryImpl.java:671)
	at org.apache.openjpa.kernel.QueryImpl.compilationFromCache(QueryImpl.java:652)
	at org.apache.openjpa.kernel.QueryImpl.compileForCompilation(QueryImpl.java:618)
	at org.apache.openjpa.kernel.QueryImpl.compileForExecutor(QueryImpl.java:680)
	at org.apache.openjpa.kernel.QueryImpl.compile(QueryImpl.java:587)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:985)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:971)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:240)
	at $Proxy28.createQuery(Unknown Source)
	... 44 more
testFindAllFamilys(net.opentemperament.entities.FamilyIntegrationTest)  Time elapsed: 0.003 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
org.springframework.dao.InvalidDataAccessApiUsageException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []; nested exception is &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:286)
	at org.springframework.orm.jpa.aspectj.JpaExceptionTranslatorAspect.ajc$afterThrowing$org_springframework_orm_jpa_aspectj_JpaExceptionTranslatorAspect$1$18a1ac9(JpaExceptionTranslatorAspect.aj:15)
	at net.opentemperament.entities.Family_Roo_Entity.findFamilyEntries_aroundBody8(Family_Roo_Entity.aj:103)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethod$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj:1)
	at net.opentemperament.entities.Family.findFamilyEntries(Family.java:1)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethodDispatch1$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj:51)
	at net.opentemperament.entities.FamilyDataOnDemand.init(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj:36)
	at net.opentemperament.entities.FamilyDataOnDemand.getRandomFamily(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyIntegrationTest_Roo_IntegrationTest.ajc$interMethod$net_opentemperament_entities_FamilyIntegrationTest_Roo_IntegrationTest$net_opentemperament_entities_FamilyIntegrationTest$testFindAllFamilys(FamilyIntegrationTest_Roo_IntegrationTest.aj:43)
	at net.opentemperament.entities.FamilyIntegrationTest.testFindAllFamilys(FamilyIntegrationTest.java:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:59)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:115)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:102)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
Caused by: &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.parseException(AbstractExpressionBuilder.java:119)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassMetaData(JPQLExpressionBuilder.java:197)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.resolveClassMetaData(JPQLExpressionBuilder.java:167)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:242)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:212)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateType(JPQLExpressionBuilder.java:205)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.access$200(JPQLExpressionBuilder.java:81)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder$ParsedJPQL.populate(JPQLExpressionBuilder.java:2387)
	at org.apache.openjpa.kernel.jpql.JPQLParser.populate(JPQLParser.java:61)
	at org.apache.openjpa.kernel.ExpressionStoreQuery.populateFromCompilation(ExpressionStoreQuery.java:154)
	at org.apache.openjpa.kernel.QueryImpl.newCompilation(QueryImpl.java:671)
	at org.apache.openjpa.kernel.QueryImpl.compilationFromCache(QueryImpl.java:652)
	at org.apache.openjpa.kernel.QueryImpl.compileForCompilation(QueryImpl.java:618)
	at org.apache.openjpa.kernel.QueryImpl.compileForExecutor(QueryImpl.java:680)
	at org.apache.openjpa.kernel.QueryImpl.compile(QueryImpl.java:587)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:985)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:971)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:240)
	at $Proxy28.createQuery(Unknown Source)
	... 44 more
testFindFamilyEntries(net.opentemperament.entities.FamilyIntegrationTest)  Time elapsed: 0.003 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
org.springframework.dao.InvalidDataAccessApiUsageException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []; nested exception is &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:286)
	at org.springframework.orm.jpa.aspectj.JpaExceptionTranslatorAspect.ajc$afterThrowing$org_springframework_orm_jpa_aspectj_JpaExceptionTranslatorAspect$1$18a1ac9(JpaExceptionTranslatorAspect.aj:15)
	at net.opentemperament.entities.Family_Roo_Entity.findFamilyEntries_aroundBody8(Family_Roo_Entity.aj:103)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethod$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj:1)
	at net.opentemperament.entities.Family.findFamilyEntries(Family.java:1)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethodDispatch1$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj:51)
	at net.opentemperament.entities.FamilyDataOnDemand.init(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj:36)
	at net.opentemperament.entities.FamilyDataOnDemand.getRandomFamily(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyIntegrationTest_Roo_IntegrationTest.ajc$interMethod$net_opentemperament_entities_FamilyIntegrationTest_Roo_IntegrationTest$net_opentemperament_entities_FamilyIntegrationTest$testFindFamilyEntries(FamilyIntegrationTest_Roo_IntegrationTest.aj:53)
	at net.opentemperament.entities.FamilyIntegrationTest.testFindFamilyEntries(FamilyIntegrationTest.java:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:59)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:115)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:102)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
Caused by: &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.parseException(AbstractExpressionBuilder.java:119)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassMetaData(JPQLExpressionBuilder.java:197)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.resolveClassMetaData(JPQLExpressionBuilder.java:167)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:242)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:212)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateType(JPQLExpressionBuilder.java:205)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.access$200(JPQLExpressionBuilder.java:81)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder$ParsedJPQL.populate(JPQLExpressionBuilder.java:2387)
	at org.apache.openjpa.kernel.jpql.JPQLParser.populate(JPQLParser.java:61)
	at org.apache.openjpa.kernel.ExpressionStoreQuery.populateFromCompilation(ExpressionStoreQuery.java:154)
	at org.apache.openjpa.kernel.QueryImpl.newCompilation(QueryImpl.java:671)
	at org.apache.openjpa.kernel.QueryImpl.compilationFromCache(QueryImpl.java:652)
	at org.apache.openjpa.kernel.QueryImpl.compileForCompilation(QueryImpl.java:618)
	at org.apache.openjpa.kernel.QueryImpl.compileForExecutor(QueryImpl.java:680)
	at org.apache.openjpa.kernel.QueryImpl.compile(QueryImpl.java:587)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:985)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:971)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:240)
	at $Proxy28.createQuery(Unknown Source)
	... 44 more
testFlush(net.opentemperament.entities.FamilyIntegrationTest)  Time elapsed: 0.007 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
org.springframework.dao.InvalidDataAccessApiUsageException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []; nested exception is &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:286)
	at org.springframework.orm.jpa.aspectj.JpaExceptionTranslatorAspect.ajc$afterThrowing$org_springframework_orm_jpa_aspectj_JpaExceptionTranslatorAspect$1$18a1ac9(JpaExceptionTranslatorAspect.aj:15)
	at net.opentemperament.entities.Family_Roo_Entity.findFamilyEntries_aroundBody8(Family_Roo_Entity.aj:103)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethod$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj:1)
	at net.opentemperament.entities.Family.findFamilyEntries(Family.java:1)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethodDispatch1$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj:51)
	at net.opentemperament.entities.FamilyDataOnDemand.init(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj:36)
	at net.opentemperament.entities.FamilyDataOnDemand.getRandomFamily(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyIntegrationTest_Roo_IntegrationTest.ajc$interMethod$net_opentemperament_entities_FamilyIntegrationTest_Roo_IntegrationTest$net_opentemperament_entities_FamilyIntegrationTest$testFlush(FamilyIntegrationTest_Roo_IntegrationTest.aj:64)
	at net.opentemperament.entities.FamilyIntegrationTest.testFlush(FamilyIntegrationTest.java:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:59)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:115)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:102)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
Caused by: &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.parseException(AbstractExpressionBuilder.java:119)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassMetaData(JPQLExpressionBuilder.java:197)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.resolveClassMetaData(JPQLExpressionBuilder.java:167)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:242)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:212)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateType(JPQLExpressionBuilder.java:205)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.access$200(JPQLExpressionBuilder.java:81)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder$ParsedJPQL.populate(JPQLExpressionBuilder.java:2387)
	at org.apache.openjpa.kernel.jpql.JPQLParser.populate(JPQLParser.java:61)
	at org.apache.openjpa.kernel.ExpressionStoreQuery.populateFromCompilation(ExpressionStoreQuery.java:154)
	at org.apache.openjpa.kernel.QueryImpl.newCompilation(QueryImpl.java:671)
	at org.apache.openjpa.kernel.QueryImpl.compilationFromCache(QueryImpl.java:652)
	at org.apache.openjpa.kernel.QueryImpl.compileForCompilation(QueryImpl.java:618)
	at org.apache.openjpa.kernel.QueryImpl.compileForExecutor(QueryImpl.java:680)
	at org.apache.openjpa.kernel.QueryImpl.compile(QueryImpl.java:587)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:985)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:971)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:240)
	at $Proxy28.createQuery(Unknown Source)
	... 44 more
testMerge(net.opentemperament.entities.FamilyIntegrationTest)  Time elapsed: 0.004 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
org.springframework.dao.InvalidDataAccessApiUsageException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []; nested exception is &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:286)
	at org.springframework.orm.jpa.aspectj.JpaExceptionTranslatorAspect.ajc$afterThrowing$org_springframework_orm_jpa_aspectj_JpaExceptionTranslatorAspect$1$18a1ac9(JpaExceptionTranslatorAspect.aj:15)
	at net.opentemperament.entities.Family_Roo_Entity.findFamilyEntries_aroundBody8(Family_Roo_Entity.aj:103)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethod$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj:1)
	at net.opentemperament.entities.Family.findFamilyEntries(Family.java:1)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethodDispatch1$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj:51)
	at net.opentemperament.entities.FamilyDataOnDemand.init(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj:36)
	at net.opentemperament.entities.FamilyDataOnDemand.getRandomFamily(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyIntegrationTest_Roo_IntegrationTest.ajc$interMethod$net_opentemperament_entities_FamilyIntegrationTest_Roo_IntegrationTest$net_opentemperament_entities_FamilyIntegrationTest$testMerge(FamilyIntegrationTest_Roo_IntegrationTest.aj:79)
	at net.opentemperament.entities.FamilyIntegrationTest.testMerge(FamilyIntegrationTest.java:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:59)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:115)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:102)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
Caused by: &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.parseException(AbstractExpressionBuilder.java:119)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassMetaData(JPQLExpressionBuilder.java:197)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.resolveClassMetaData(JPQLExpressionBuilder.java:167)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:242)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:212)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateType(JPQLExpressionBuilder.java:205)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.access$200(JPQLExpressionBuilder.java:81)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder$ParsedJPQL.populate(JPQLExpressionBuilder.java:2387)
	at org.apache.openjpa.kernel.jpql.JPQLParser.populate(JPQLParser.java:61)
	at org.apache.openjpa.kernel.ExpressionStoreQuery.populateFromCompilation(ExpressionStoreQuery.java:154)
	at org.apache.openjpa.kernel.QueryImpl.newCompilation(QueryImpl.java:671)
	at org.apache.openjpa.kernel.QueryImpl.compilationFromCache(QueryImpl.java:652)
	at org.apache.openjpa.kernel.QueryImpl.compileForCompilation(QueryImpl.java:618)
	at org.apache.openjpa.kernel.QueryImpl.compileForExecutor(QueryImpl.java:680)
	at org.apache.openjpa.kernel.QueryImpl.compile(QueryImpl.java:587)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:985)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:971)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:240)
	at $Proxy28.createQuery(Unknown Source)
	... 44 more
testPersist(net.opentemperament.entities.FamilyIntegrationTest)  Time elapsed: 0.005 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
org.springframework.dao.InvalidDataAccessApiUsageException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []; nested exception is &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:286)
	at org.springframework.orm.jpa.aspectj.JpaExceptionTranslatorAspect.ajc$afterThrowing$org_springframework_orm_jpa_aspectj_JpaExceptionTranslatorAspect$1$18a1ac9(JpaExceptionTranslatorAspect.aj:15)
	at net.opentemperament.entities.Family_Roo_Entity.findFamilyEntries_aroundBody8(Family_Roo_Entity.aj:103)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethod$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj:1)
	at net.opentemperament.entities.Family.findFamilyEntries(Family.java:1)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethodDispatch1$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj:51)
	at net.opentemperament.entities.FamilyDataOnDemand.init(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj:36)
	at net.opentemperament.entities.FamilyDataOnDemand.getRandomFamily(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyIntegrationTest_Roo_IntegrationTest.ajc$interMethod$net_opentemperament_entities_FamilyIntegrationTest_Roo_IntegrationTest$net_opentemperament_entities_FamilyIntegrationTest$testPersist(FamilyIntegrationTest_Roo_IntegrationTest.aj:94)
	at net.opentemperament.entities.FamilyIntegrationTest.testPersist(FamilyIntegrationTest.java:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:59)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:115)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:102)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
Caused by: &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.parseException(AbstractExpressionBuilder.java:119)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassMetaData(JPQLExpressionBuilder.java:197)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.resolveClassMetaData(JPQLExpressionBuilder.java:167)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:242)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:212)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateType(JPQLExpressionBuilder.java:205)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.access$200(JPQLExpressionBuilder.java:81)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder$ParsedJPQL.populate(JPQLExpressionBuilder.java:2387)
	at org.apache.openjpa.kernel.jpql.JPQLParser.populate(JPQLParser.java:61)
	at org.apache.openjpa.kernel.ExpressionStoreQuery.populateFromCompilation(ExpressionStoreQuery.java:154)
	at org.apache.openjpa.kernel.QueryImpl.newCompilation(QueryImpl.java:671)
	at org.apache.openjpa.kernel.QueryImpl.compilationFromCache(QueryImpl.java:652)
	at org.apache.openjpa.kernel.QueryImpl.compileForCompilation(QueryImpl.java:618)
	at org.apache.openjpa.kernel.QueryImpl.compileForExecutor(QueryImpl.java:680)
	at org.apache.openjpa.kernel.QueryImpl.compile(QueryImpl.java:587)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:985)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:971)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:240)
	at $Proxy28.createQuery(Unknown Source)
	... 44 more
testRemove(net.opentemperament.entities.FamilyIntegrationTest)  Time elapsed: 0.005 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
org.springframework.dao.InvalidDataAccessApiUsageException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []; nested exception is &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:286)
	at org.springframework.orm.jpa.aspectj.JpaExceptionTranslatorAspect.ajc$afterThrowing$org_springframework_orm_jpa_aspectj_JpaExceptionTranslatorAspect$1$18a1ac9(JpaExceptionTranslatorAspect.aj:15)
	at net.opentemperament.entities.Family_Roo_Entity.findFamilyEntries_aroundBody8(Family_Roo_Entity.aj:103)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethod$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj:1)
	at net.opentemperament.entities.Family.findFamilyEntries(Family.java:1)
	at net.opentemperament.entities.Family_Roo_Entity.ajc$interMethodDispatch1$net_opentemperament_entities_Family_Roo_Entity$net_opentemperament_entities_Family$findFamilyEntries(Family_Roo_Entity.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj:51)
	at net.opentemperament.entities.FamilyDataOnDemand.init(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$init(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethod$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj:36)
	at net.opentemperament.entities.FamilyDataOnDemand.getRandomFamily(FamilyDataOnDemand.java:1)
	at net.opentemperament.entities.FamilyDataOnDemand_Roo_DataOnDemand.ajc$interMethodDispatch1$net_opentemperament_entities_FamilyDataOnDemand_Roo_DataOnDemand$net_opentemperament_entities_FamilyDataOnDemand$getRandomFamily(FamilyDataOnDemand_Roo_DataOnDemand.aj)
	at net.opentemperament.entities.FamilyIntegrationTest_Roo_IntegrationTest.ajc$interMethod$net_opentemperament_entities_FamilyIntegrationTest_Roo_IntegrationTest$net_opentemperament_entities_FamilyIntegrationTest$testRemove(FamilyIntegrationTest_Roo_IntegrationTest.aj:106)
	at net.opentemperament.entities.FamilyIntegrationTest.testRemove(FamilyIntegrationTest.java:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:59)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:115)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:102)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
Caused by: &amp;lt;openjpa-2.0.0-r422266:935683 nonfatal user error&amp;gt; org.apache.openjpa.persistence.ArgumentException: An error occurred while parsing the query filter "select o from Family o". Error message: The name "Family" is not a recognized entity or identifier. Known entity names: []
	at org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.parseException(AbstractExpressionBuilder.java:119)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassMetaData(JPQLExpressionBuilder.java:197)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.resolveClassMetaData(JPQLExpressionBuilder.java:167)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:242)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLExpressionBuilder.java:212)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateType(JPQLExpressionBuilder.java:205)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.access$200(JPQLExpressionBuilder.java:81)
	at org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder$ParsedJPQL.populate(JPQLExpressionBuilder.java:2387)
	at org.apache.openjpa.kernel.jpql.JPQLParser.populate(JPQLParser.java:61)
	at org.apache.openjpa.kernel.ExpressionStoreQuery.populateFromCompilation(ExpressionStoreQuery.java:154)
	at org.apache.openjpa.kernel.QueryImpl.newCompilation(QueryImpl.java:671)
	at org.apache.openjpa.kernel.QueryImpl.compilationFromCache(QueryImpl.java:652)
	at org.apache.openjpa.kernel.QueryImpl.compileForCompilation(QueryImpl.java:618)
	at org.apache.openjpa.kernel.QueryImpl.compileForExecutor(QueryImpl.java:680)
	at org.apache.openjpa.kernel.QueryImpl.compile(QueryImpl.java:587)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:985)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:971)
	at org.apache.openjpa.persistence.EntityManagerImpl.createQuery(EntityManagerImpl.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:240)
	at $Proxy28.createQuery(Unknown Source)
	... 44 more
</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JdbcDatabase.java</file>
		</fixedFiles>
	</bug>
	<bug id="1562" opendate="2010-10-14 21:56:06" fixdate="2010-10-14 21:59:10" resolution="Complete">
		<buginformation>
			<summary>Intermittent Roo shell startup issue with Op4JMetadataProvider</summary>
			<description>Oct 15, 2010 3:04:57 PM org.springframework.roo.felix.JdkDelegatingLogListener logNow
SEVERE: [org.springframework.roo.addon.op4j [30]] [org.springframework.roo.addon.op4j.Op4jMetadataProvider] Cannot create component instance due to failure to bind reference metadataService
Oct 15, 2010 3:04:57 PM org.springframework.roo.felix.JdkDelegatingLogListener logNow
SEVERE: [org.springframework.roo.addon.op4j [30]] FrameworkEvent ERROR
org.apache.felix.log.LogException: org.osgi.framework.ServiceException: Service factory returned null.</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.op4j.Op4jMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.json.JsonMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="1563" opendate="2010-10-14 22:27:44" fixdate="2010-10-14 22:32:08" resolution="Complete">
		<buginformation>
			<summary>DataOnDemand fails to set correct data for numeric primitive fields</summary>
			<description>When primitive numeric fields are declared without @NotNull, DoD uses null in the initializer resulting in failing tests. </description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1581" opendate="2010-10-17 00:44:25" fixdate="2010-10-17 00:45:58" resolution="Fixed">
		<buginformation>
			<summary>Web MVC JSP views not updated on domain changes</summary>
			<description>Web MVC JSP views not updated on domain changes. For example the removal of a field in a domain object does not cause the views to be updated.</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="1582" opendate="2010-10-17 01:39:57" fixdate="2010-10-17 04:11:20" resolution="Fixed">
		<buginformation>
			<summary>Roo Internationalization add on not working</summary>
			<description>I created a roo i18n addon for French language using the following command 
addon create i18n --topLevelPackage com.shekhar.roo.addon --locale fr --messageBundle messages_fr.properties --language french
perform eclipse
perform package
felix shell start file:///C:/dev/labs/spring-roo/addon-i18n-fr/target/com.shekhar.roo.addon-0.1.0.BUILD-SNAPSHOT.jar
The addon got created without any problem. But When I am trying to use this addon in my application I am getting this exception
roo&amp;gt; web mvc install language --code fr_fr
Language choice required
java.lang.IllegalArgumentException: Language choice required
    at org.springframework.roo.support.util.Assert.notNull(Assert.java:112)
    at org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.installI18n(JspOperationsImpl.java:409)
    at org.springframework.roo.addon.web.mvc.jsp.JspCommands.lang(JspCommands.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)
    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy$1.callback(ProcessManagerHostedExecutionStrategy.java:49)
    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:177)
    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:140)
    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)
    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:162)
    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:326)
    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:119)
    at java.lang.Thread.run(Thread.java:619)</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.I18nConverter.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.I18nComponent.java</file>
			<file type="M">org.springframework.roo.addon.creator.CreatorOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="1572" opendate="2010-10-16 00:09:46" fixdate="2010-10-17 14:57:49" resolution="Complete">
		<buginformation>
			<summary>DataOnDemand.init() no longer checks if data already created</summary>
			<description>I noticed that the init() method in the integration test generated DataOnDemand classes changed in RC1 from M3. It no longer checks to see if the test set has already been created. Becuase the getRandomXXX() method always calls init(), whenever getRandomXXX() is called, the test set is created again.
For example, with the clinic.roo example, the Visit entity has a relationship with Pet. In the VisitDataOnDemand.getNewTransientVisit() entity, it gets a Pet instance by calling PetDataOnDemand.getRandomPet(). Thus every time VisitDataOnDemand.getNewTransientVisit() is called, 10 Pet entities are created in PetDataOnDemand.init().
If Pet were to have a unique constraints (e.g. the description field), then the call to init() will fail with a constraint violation as the description will be repeated in the second set creation. This is what is happening with my application as I&amp;amp;apos;m using a unique constraint.
RC1 code (no check):
    public void PetDataOnDemand.init() {
        data = new java.util.ArrayList&amp;lt;com.springsource.petclinic.domain.Pet&amp;gt;();
        for (int i = 0; i &amp;lt; 10; i++) 
{
            com.springsource.petclinic.domain.Pet obj = getNewTransientPet(i);
            obj.persist();
            data.add(obj);
        }
    }

M3 code:
    public void PetDataOnDemand.init() {
        if (data != null &amp;amp;&amp;amp; !data.isEmpty()) {
            return;
        }

        data = com.springsource.petclinic.domain.Pet.findPetEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for &amp;amp;apos;Pet&amp;amp;apos; illegally returned null");
        if (!data.isEmpty()) {            return;        }

        data = new java.util.ArrayList&amp;lt;com.springsource.petclinic.domain.Pet&amp;gt;();
        for (int i = 0; i &amp;lt; 10; i++) {            com.springsource.petclinic.domain.Pet obj = getNewTransientPet(i);            obj.persist();            data.add(obj);        }
    }</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1565</link>
		</links>
	</bug>
	<bug id="1585" opendate="2010-10-17 11:44:24" fixdate="2010-10-17 21:36:11" resolution="Complete">
		<buginformation>
			<summary>HttpMethodFilter should come before springSecurityFilterChain in web.xml</summary>
			<description>When adding security to a Roo project with the "security setup" command, a filter is added to the web.xml for Spring Security. This filter is put before HttpMethodFilter, but it needs to be put after. HttpMethodFilter is responsible for converting the Spring MVC HTTP POST with parameter _method=DELETE into an actual HTTP DELETE method. If you want to define a Spring Security &amp;lt;intercept-url&amp;gt; with method="DELETE", a delete request will only be intercepted if the request has been converted to the HTTP DELETE method previously. Thus the HttpMethodFilter needs to have been called first, and should be put before the springSecurityFilterChain filter in the web.xml.</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.security.SecurityCommands.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1565" opendate="2010-10-14 23:42:24" fixdate="2010-10-18 04:20:54" resolution="Duplicate">
		<buginformation>
			<summary>Data on demand initialization causes integraion tests failures</summary>
			<description>The problem appears when one entity has non-optional reference to another entity which has field with unique constraint.</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1572</link>
		</links>
	</bug>
	<bug id="1590" opendate="2010-10-18 10:35:16" fixdate="2010-10-19 01:31:11" resolution="Complete">
		<buginformation>
			<summary>Spring Roo cannot reverse engineer Oracle db</summary>
			<description>I&amp;amp;apos;m trying to reverse engineer an Oracle database with Roo.
I am able to instrospect the database without error, and the results look correct.
When I reverse engineer the database, it creates the files then undoes the create. Below is what is sent to the screen (abbreviated to fit within a post), but I&amp;amp;apos;m not sure how to turn on any debugging to get more meaningful information.
Code:






roo&amp;gt; database reverse engineer --package ~.db --sCreated org.neoninc.db.TypeType




Managed ROOT\.roo-dbre                               Created org.neoninc.db.Unit




Created SRC_MAIN_JAVA\org\neoninc\db             Created org.neoninc.db.UnitTrsl




Created SRC_MAIN_JAVA\org\neoninc\db\Attr.java   Created 









....









Created SRC_MAIN_JAVA\org\neoninc\db\Samp_Roo_Entity.aj




Undo create SRC_MAIN_JAVA\org\neoninc\db\Samp_Roo_Entity.aj









....









Undo manage ROOT\.roo-dbre




Field &amp;amp;apos;samps4&amp;amp;apos; already defined in ITD (ITD target &amp;amp;apos;org.neoninc.db.Samp_Roo_DbMan




aged)&amp;amp;apos;






</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Table.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.JoinTable.java</file>
		</fixedFiles>
	</bug>
	<bug id="1599" opendate="2010-10-19 19:55:38" fixdate="2010-10-19 20:04:51" resolution="Complete">
		<buginformation>
			<summary>IllegalStateException when using CTRL+C to shutdown Roo</summary>
			<description>Using CTRL+C to shutdown Roo gives an illegal state exception:






java.lang.IllegalStateException: Shutdown in progress




	at java.lang.ApplicationShutdownHooks.add(ApplicationShutdownHooks.java:39)




	at java.lang.Runtime.addShutdownHook(Runtime.java:192)




	at jline.UnixTerminal.initializeTerminal(UnixTerminal.java:97)




	at jline.Terminal.setupTerminal(Terminal.java:75)




	at jline.ConsoleReader.getTermwidth(ConsoleReader.java:334)




	at org.springframework.roo.shell.jline.JLineShell.doAnsiFlash(JLineShell.java:316)




	at org.springframework.roo.shell.jline.JLineShell.flash(JLineShell.java:285)




	at org.springframework.roo.shell.osgi.AbstractFlashingObject.flash(AbstractFlashingObject.java:80)




	at org.springframework.roo.felix.JdkDelegatingLogListener.logNow(JdkDelegatingLogListener.java:75)




	at org.springframework.roo.felix.JdkDelegatingLogListener.logged(JdkDelegatingLogListener.java:54)




	at org.apache.felix.log.LogListenerThread.run(LogListenerThread.java:113)





</description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.jline.JLineShell.java</file>
		</fixedFiles>
	</bug>
	<bug id="1594" opendate="2010-10-19 01:19:46" fixdate="2010-10-19 20:56:19" resolution="Complete">
		<buginformation>
			<summary>parameterTypes collection from MethodMetadata is not well formed when has annotations defined</summary>
			<description>Sorry for been so late, but I haven&amp;amp;apos;t got enought time. 
Here is an example to reproduce the error described in https://jira.springsource.org/browse/ROO-1529 using a test Add-on to get toString representation of class methods:
Method testMethod:






@WebMethod




public void testMethod() {




    return;




}






Method testMethod toString:






[JavaParserMethodMetadata@6f48db9c declaredByMetadataId = [null], modifier = &amp;amp;apos;public&amp;amp;apos;, methodName = dajkjdsaj, parameterTypes = list[[empty]], parameterNames = list[[empty]], returnType = void, throwsTypes = list[[empty]], annotations = list[[JavaParserAnnotationMetadata@184a17d8 annotationType = org.gvnix.service.layer.roo.addon.annotations.GvNIXWebMethod, attributes = list[operationName -&amp;gt; dajkjdsaj, resultName -&amp;gt; void, webResultType -&amp;gt; java.lang.Void]]], body = &amp;amp;apos;{




    return;






Method correctInputParameters:






public String correctInputParameters(Car listaVacia,




        java.util.List&amp;lt;String&amp;gt; listaLlena, HashSet&amp;lt;String&amp;gt; primerHashSet,




        Set&amp;lt;String&amp;gt; set, String name) throws Exception,




        NullPointerException {









    return "aaaaaaaaaaaaaaaaaaaaaaaaa" + "aaaaaaaaaaaaaaaaaaaaaaaaah";




}






Method correctInputParameters toString:






[JavaParserMethodMetadata@5e8fee26 declaredByMetadataId = [null], modifier = &amp;amp;apos;public&amp;amp;apos;, methodName = correctInputParameters, parameterTypes = list[org.gvnix.test.relation.list.table.service.Car, java.util.List&amp;lt;java.lang.String&amp;gt;, java.util.HashSet&amp;lt;java.lang.String&amp;gt;, org.gvnix.test.relation.list.table.service.Set&amp;lt;java.lang.String&amp;gt;, java.lang.String], parameterNames = list[listaVacia, listaLlena, primerHashSet, set, name], returnType = java.lang.String, throwsTypes = list[java.lang.Exception, java.lang.NullPointerException], annotations = list[[empty]], body = &amp;amp;apos;{




    return "aaaaaaaaaaaaaaaaaaaaaaaaa" + "aaaaaaaaaaaaaaaaaaaaaaaaah";




}&amp;amp;apos;]






Method testMethod returnNothing:Parsing the method:






@WebMethod




public String returnNothing(




        @WebParam(name = "nenene", partName = "parameters", mode = Mode.IN, header = false)




        String nenene, 




        @WebParam(name = "numerooo", partName = "parameters", mode = Mode.IN, header = false)




        Integer numerooo, 




        @WebParam(name = "cuatrooo", targetNamespace = "http://service.table.list.relation.test.gvnix.org/", partName = "parameters", mode = Mode.IN, header = false)




        Cuarto cuatrooo, 




        @WebParam(name = "setString", partName = "parameters", mode = Mode.IN, header = false) 




        Set&amp;lt;String&amp;gt; set,




        @WebParam(name = "hashSetString", partName = "parameters", mode = Mode.IN, header = false) 




        HashSet&amp;lt;String&amp;gt; hashSetString) throws Exception {




    return "mensaje";




}






Method returnNothing toString:






com.sun.jdi.InvocationException occurred invoking method.









java.lang.NullPointerException




    at org.springframework.roo.classpath.details.AnnotationMetadataUtils.computeAttributeValue(AnnotationMetadataUtils.java:117)




    at org.springframework.roo.classpath.details.AnnotationMetadataUtils.toSourceForm(AnnotationMetadataUtils.java:78)




    at org.springframework.roo.classpath.details.AnnotationMetadataUtils.toSourceForm(AnnotationMetadataUtils.java:36)




    at org.springframework.roo.classpath.details.annotations.AnnotatedJavaType.toString(AnnotatedJavaType.java:52)




    at java.lang.String.valueOf(String.java:2615)




    at org.springframework.roo.support.style.DefaultValueStyler.style(DefaultValueStyler.java:78)




    at org.springframework.roo.support.style.DefaultValueStyler.style(DefaultValueStyler.java:107)




    at org.springframework.roo.support.style.DefaultValueStyler.style(DefaultValueStyler.java:72)




    at org.springframework.roo.support.style.DefaultToStringStyler.styleValue(DefaultToStringStyler.java:91)




    at org.springframework.roo.support.style.DefaultToStringStyler.styleField(DefaultToStringStyler.java:79)




    at org.springframework.roo.support.style.ToStringCreator.append(ToStringCreator.java:156)




    at org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadata.toString(JavaParserMethodMetadata.java:164)




    at org.test.service.layer.roo.addon.OperationsImpl.getMethodFromClass(OperationsImpl.java:195)




    at org.test.service.layer.roo.addon.Commands.getMethodFromClass(Commands.java:62)




    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)




    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)




    at java.lang.reflect.Method.invoke(Method.java:585)




    at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy$1.callback(ProcessManagerHostedExecutionStrategy.java:34)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:169)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:132)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:32)




    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:158)




    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:200)




    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:126)




    at java.lang.Thread.run(Thread.java:595)






Error in parameterTypes value:






com.sun.jdi.InvocationException occurred invoking method.






when in JavaParserMethodMetadata access to toString() method:






tsc.append("parameterTypes", parameterTypes);






The Error is reproduced when the method has annotations assigned to Method parameter types.
You can try it using this test Add-on attached to issue with the command ``get toString methods`` with the parameter --class to inspect a selected class with the methods defined in the issue.
Thank you! 
</description>
			<version>1.1.0.M1</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.details.AnnotationMetadataUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Supersede" description="supersedes">1529</link>
		</links>
	</bug>
	<bug id="1617" opendate="2010-10-21 14:36:27" fixdate="2010-10-21 14:37:31" resolution="Fixed">
		<buginformation>
			<summary>NPE in SolrMetadata</summary>
			<description>NPE is raised in SolrMetadata because it assumes version fields always exist.</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1624" opendate="2010-10-21 22:30:48" fixdate="2010-10-21 22:38:25" resolution="Complete">
		<buginformation>
			<summary>Assertion fails when adding annotation to ItdTypeDetailsBuilder</summary>
			<description>The addFieldAnnotation(DeclaredFieldAnnotationDetails declaredFieldAnnotationDetails) method in ItdTypeDetailsBuilder doesn&amp;amp;apos;t take into account whether the DeclaredFieldAnnotationDetails is to remove an annotation and fails assuming that the annotation has been declared multiple time. The assertion fail messages also need to be tweaked to produce more accurate messages.
Field annotation &amp;amp;apos;@ManyToOne&amp;amp;apos; already defined in target type &amp;amp;apos;org.springsource.roo.extrack.server.domain.Expense.report&amp;amp;apos; (ITD target &amp;amp;apos;org.springsource.roo.extrack.server.domain.Expense_Roo_Gae&amp;amp;apos;)
           java.lang.IllegalArgumentException: Field annotation &amp;amp;apos;@ManyToOne&amp;amp;apos; already defined in target type &amp;amp;apos;org.springsource.roo.extrack.server.domain.Expense.report&amp;amp;apos; (ITD target &amp;amp;apos;org.springsource.roo.extrack.server.domain.Expense_Roo_Gae&amp;amp;apos;)
             at org.springframework.roo.support.util.Assert.isTrue(Assert.java:65)
             at org.springframework.roo.classpath.details.ItdTypeDetailsBuilder.addFieldAnnotation(ItdTypeDetailsBuilder.java:103)
             at org.springframework.roo.addon.gae.GaeMetadata.&amp;lt;init&amp;gt;(GaeMetadata.java:57)
             at org.springframework.roo.addon.gae.GaeMetadataProvider.getMetadata(GaeMetadataProvider.java:42)
             at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:250)
             at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:139)
             at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:159)
             at org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.getMemberDetails(MemberDetailsScannerImpl.java:98)
             at org.springframework.roo.addon.beaninfo.BeanInfoMetadataProviderImpl.getMetadata(BeanInfoMetadataProviderImpl.java:34)
             at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:250)
             at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:139)
             at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:159)
             at org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.getMetadata(DataOnDemandMetadataProvider.java:56)
             at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:250)
             at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:139)
             at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:159)
             at org.springframework.roo.addon.test.IntegrationTestMetadataProvider.getMetadata(IntegrationTestMetadataProvider.java:57)
             at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:250)
             at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:139)
             at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:124)
             at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:179)
             at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:262)
             at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:138)
             at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)
             at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:318)
             at org.springframework.roo.process.manager.internal.DefaultFileManager.notify(DefaultFileManager.java:183)
             at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:276)
             at org.springframework.roo.addon.maven.MavenProjectMetadataProvider.onFileEvent(MavenProjectMetadataProvider.java:691)
             at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)
             at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:318)
             at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:36)
             at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:15)
             at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:177)
             at org.springframework.roo.process.manager.internal.DefaultProcessManager.completeStartup(DefaultProcessManager.java:99)
             at org.springframework.roo.process.manager.internal.DefaultProcessManager$1.frameworkEvent(DefaultProcessManager.java:62)
             at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListenerCallback(EventDispatcher.java:767)
             at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:724)
             at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:942)
             at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)
             at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)
             at java.lang.Thread.run(Thread.java:637)</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.details.ItdTypeDetailsBuilder.java</file>
		</fixedFiles>
		<links>
			<link type="Related" description="is related to">1611</link>
			<link type="Related" description="is related to">773</link>
		</links>
	</bug>
	<bug id="1601" opendate="2010-10-20 05:51:54" fixdate="2010-10-21 22:39:41" resolution="Complete">
		<buginformation>
			<summary>Exceptions with GWT when using class hierarchies with -mappedsuperclass during persisting</summary>
			<description>When I use the following ROO script, I get the exeptions below when creating a e.g. "BonusCard" instance. The reason is the use of a "mappedSuperclass". 
Without inheriting from a superclass, the example works... 

project --topLevelPackage at.frip --projectName Frip
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY
entity --class ~.domain.model.basic.CrudInfo --mappedSuperclass 
field string --fieldName createUser --notNull --sizeMin 2 --sizeMax 100
field date --type java.util.Date --fieldName createDate --timeFormat MEDIUM --notNull 
field string --fieldName updateUser --notNull --sizeMin 2 --sizeMax 100
field date --type java.util.Date --fieldName updateDate --timeFormat MEDIUM --notNull 
enum type --class ~.client.shared.domain.model.contract.Salutation
enum constant --name FEMALE
enum constant --name MALE
enum type --class ~.client.shared.domain.model.contract.Country
enum constant --name AUSTRIA
entity --class ~.domain.model.contract.Customer --extends ~.domain.model.basic.CrudInfo --testAutomatically
field enum --fieldName salutation --type ~.client.shared.domain.model.contract.Salutation --notNull
field string --fieldName title --sizeMax 30
field string --fieldName firstName --notNull --sizeMin 2 --sizeMax 100
field string --fieldName lastName --notNull --sizeMin 2 --sizeMax 100
field string --fieldName street --notNull --sizeMin 2 --sizeMax 200
field string --fieldName zip --notNull --sizeMin 2 --sizeMax 10
field string --fieldName city --notNull --sizeMin 2 --sizeMax 100
field enum --fieldName country --type ~.client.shared.domain.model.contract.Country --notNull
field string --fieldName email --notNull --sizeMin 5 --sizeMax 150
field string --fieldName phone --notNull --sizeMin 5 --sizeMax 50
field boolean --fieldName activated --notNull --comment "True if email activation has succeeded"
finder add --finderName findCustomersByFirstNameLike
finder add --finderName findCustomersByLastNameLike
entity --class ~.domain.model.contract.BonusCard --extends ~.domain.model.basic.CrudInfo --testAutomatically
field number --type java.lang.Long --fieldName cardNumber --notNull
finder add --finderName findBonusCardsByCardNumber
gwt setup
perform package
Stack trace:
[INFO] create exploded Jetty webapp in C:\roo\target\Frip-0.1.0.BUILD-SNAPSHOT
[ERROR] 20.10.2010 13:58:16 com.google.gwt.requestfactory.server.RequestFactoryServlet doPost
[ERROR] SCHWERWIEGEND: Unexpected error
[ERROR] com.google.gwt.requestfactory.server.RequestProcessingException: Unexpected exception
[ERROR]         at com.google.gwt.requestfactory.server.JsonRequestProcessor.decodeAndInvokeRequest(JsonRequestProcessor
.java:242)
[ERROR]         at com.google.gwt.requestfactory.server.JsonRequestProcessor.decodeAndInvokeRequest(JsonRequestProcessor
.java:62)
[ERROR]         at com.google.gwt.requestfactory.server.RequestFactoryServlet.doPost(RequestFactoryServlet.java:122)
[ERROR]         at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
[ERROR]         at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
[ERROR]         at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
[ERROR]         at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1097)
[ERROR]         at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77
)
[ERROR]         at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
[ERROR]         at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1088)
[ERROR]         at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:
88)
[ERROR]         at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
[ERROR]         at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1088)
[ERROR]         at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerI
nViewFilter.java:113)
[ERROR]         at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
[ERROR]         at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1088)
[ERROR]         at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
[ERROR]         at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
[ERROR]         at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
[ERROR]         at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:729)
[ERROR]         at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
[ERROR]         at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
[ERROR]         at org.mortbay.jetty.handler.RequestLogHandler.handle(RequestLogHandler.java:49)
[ERROR]         at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
[ERROR]         at org.mortbay.jetty.Server.handle(Server.java:324)
[ERROR]         at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
[ERROR]         at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:843)
[ERROR]         at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:647)
[ERROR]         at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
[ERROR]         at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
[ERROR]         at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
[ERROR]         at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:488)
[ERROR] Caused by: java.lang.IllegalArgumentException: Unknown operation at.frip.client.managed.request.BonusCardRequest
::persist
[ERROR]         at com.google.gwt.requestfactory.server.JsonRequestProcessor.getOperation(JsonRequestProcessor.java:702)
[ERROR]         at com.google.gwt.requestfactory.server.JsonRequestProcessor.processJsonRequest(JsonRequestProcessor.jav
a:844)
[ERROR]         at com.google.gwt.requestfactory.server.JsonRequestProcessor.decodeAndInvokeRequest(JsonRequestProcessor
.java:232)
[ERROR]         ... 31 more
[ERROR] Wed Oct 20 13:58:28 CEST 2010 at.frip.client.scaffold.Scaffold
[ERROR] SEVERE: One or more exceptions caught, see full set in UmbrellaException#getCauses
[ERROR] com.google.gwt.event.shared.UmbrellaException: One or more exceptions caught, see full set in UmbrellaException#
getCauses
[ERROR]         at com.google.gwt.event.shared.SimpleEventBus.doFire(SimpleEventBus.java:214)
[ERROR]         at com.google.gwt.event.shared.SimpleEventBus.fireEvent(SimpleEventBus.java:103)
[ERROR]         at com.google.gwt.place.shared.PlaceController.goTo(PlaceController.java:120)
[ERROR]         at at.frip.client.scaffold.place.AbstractProxyEditActivity.exit(AbstractProxyEditActivity.java:134)
[ERROR]         at at.frip.client.scaffold.place.CreateAndEditProxy.exit(CreateAndEditProxy.java:44)
[ERROR]         at at.frip.client.scaffold.place.AbstractProxyEditActivity$1.onSuccess(AbstractProxyEditActivity.java:97
)
[ERROR]         at at.frip.client.scaffold.place.AbstractProxyEditActivity$1.onSuccess(AbstractProxyEditActivity.java:1)
[ERROR]         at com.google.gwt.requestfactory.client.impl.AbstractRequestContext$4.onTransportSuccess(AbstractRequest
Context.java:394)
[ERROR]         at com.google.gwt.requestfactory.client.DefaultRequestTransport$1.onResponseReceived(DefaultRequestTrans
port.java:140)
[ERROR]         at com.google.gwt.http.client.Request.fireOnResponseReceived(Request.java:287)
[ERROR]         at com.google.gwt.http.client.RequestBuilder$1.onReadyStateChange(RequestBuilder.java:395)
[ERROR]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[ERROR]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
[ERROR]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
[ERROR]         at java.lang.reflect.Method.invoke(Method.java:597)
[ERROR]         at com.google.gwt.dev.shell.MethodAdaptor.invoke(MethodAdaptor.java:103)
[ERROR]         at com.google.gwt.dev.shell.MethodDispatch.invoke(MethodDispatch.java:71)
[ERROR]         at com.google.gwt.dev.shell.OophmSessionHandler.invoke(OophmSessionHandler.java:157)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.reactToMessagesWhileWaitingForReturn(BrowserChannelServ
er.java:326)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.invokeJavascript(BrowserChannelServer.java:207)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpaceOOPHM.doInvoke(ModuleSpaceOOPHM.java:126)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpace.invokeNative(ModuleSpace.java:562)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpace.invokeNativeObject(ModuleSpace.java:269)
[ERROR]         at com.google.gwt.dev.shell.JavaScriptHost.invokeNativeObject(JavaScriptHost.java:91)
[ERROR]         at com.google.gwt.core.client.impl.Impl.apply(Impl.java)
[ERROR]         at com.google.gwt.core.client.impl.Impl.entry0(Impl.java:214)
[ERROR]         at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source)
[ERROR]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
[ERROR]         at java.lang.reflect.Method.invoke(Method.java:597)
[ERROR]         at com.google.gwt.dev.shell.MethodAdaptor.invoke(MethodAdaptor.java:103)
[ERROR]         at com.google.gwt.dev.shell.MethodDispatch.invoke(MethodDispatch.java:71)
[ERROR]         at com.google.gwt.dev.shell.OophmSessionHandler.invoke(OophmSessionHandler.java:157)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.reactToMessages(BrowserChannelServer.java:281)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.processConnection(BrowserChannelServer.java:531)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.run(BrowserChannelServer.java:352)
[ERROR]         at java.lang.Thread.run(Thread.java:619)
[ERROR] Caused by: com.google.gwt.event.shared.UmbrellaException: One or more exceptions caught, see full set in Umbrell
aException#getCauses
[ERROR]         at com.google.gwt.activity.shared.ActivityManager.onPlaceChange(ActivityManager.java:176)
[ERROR]         at com.google.gwt.place.shared.PlaceChangeEvent.dispatch(PlaceChangeEvent.java:57)
[ERROR]         at com.google.gwt.place.shared.PlaceChangeEvent.dispatch(PlaceChangeEvent.java:1)
[ERROR]         at com.google.gwt.event.shared.SimpleEventBus.doFire(SimpleEventBus.java:204)
[ERROR]         at com.google.gwt.event.shared.SimpleEventBus.fireEvent(SimpleEventBus.java:103)
[ERROR]         at com.google.gwt.place.shared.PlaceController.goTo(PlaceController.java:120)
[ERROR]         at at.frip.client.scaffold.place.AbstractProxyEditActivity.exit(AbstractProxyEditActivity.java:134)
[ERROR]         at at.frip.client.scaffold.place.CreateAndEditProxy.exit(CreateAndEditProxy.java:44)
[ERROR]         at at.frip.client.scaffold.place.AbstractProxyEditActivity$1.onSuccess(AbstractProxyEditActivity.java:97
)
[ERROR]         at at.frip.client.scaffold.place.AbstractProxyEditActivity$1.onSuccess(AbstractProxyEditActivity.java:1)
[ERROR]         at com.google.gwt.requestfactory.client.impl.AbstractRequestContext$4.onTransportSuccess(AbstractRequest
Context.java:394)
[ERROR]         at com.google.gwt.requestfactory.client.DefaultRequestTransport$1.onResponseReceived(DefaultRequestTrans
port.java:140)
[ERROR]         at com.google.gwt.http.client.Request.fireOnResponseReceived(Request.java:287)
[ERROR]         at com.google.gwt.http.client.RequestBuilder$1.onReadyStateChange(RequestBuilder.java:395)
[ERROR]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[ERROR]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
[ERROR]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
[ERROR]         at java.lang.reflect.Method.invoke(Method.java:597)
[ERROR]         at com.google.gwt.dev.shell.MethodAdaptor.invoke(MethodAdaptor.java:103)
[ERROR]         at com.google.gwt.dev.shell.MethodDispatch.invoke(MethodDispatch.java:71)
[ERROR]         at com.google.gwt.dev.shell.OophmSessionHandler.invoke(OophmSessionHandler.java:157)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.reactToMessagesWhileWaitingForReturn(BrowserChannelServ
er.java:326)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.invokeJavascript(BrowserChannelServer.java:207)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpaceOOPHM.doInvoke(ModuleSpaceOOPHM.java:126)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpace.invokeNative(ModuleSpace.java:562)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpace.invokeNativeObject(ModuleSpace.java:269)
[ERROR]         at com.google.gwt.dev.shell.JavaScriptHost.invokeNativeObject(JavaScriptHost.java:91)
[ERROR]         at com.google.gwt.core.client.impl.Impl.apply(Impl.java)
[ERROR]         at com.google.gwt.core.client.impl.Impl.entry0(Impl.java:214)
[ERROR]         at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source)
[ERROR]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
[ERROR]         at java.lang.reflect.Method.invoke(Method.java:597)
[ERROR]         at com.google.gwt.dev.shell.MethodAdaptor.invoke(MethodAdaptor.java:103)
[ERROR]         at com.google.gwt.dev.shell.MethodDispatch.invoke(MethodDispatch.java:71)
[ERROR]         at com.google.gwt.dev.shell.OophmSessionHandler.invoke(OophmSessionHandler.java:157)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.reactToMessages(BrowserChannelServer.java:281)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.processConnection(BrowserChannelServer.java:531)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.run(BrowserChannelServer.java:352)
[ERROR]         at java.lang.Thread.run(Thread.java:619)
[ERROR] Caused by: java.lang.IllegalArgumentException: Cannot fetch unpersisted entity
[ERROR]         at com.google.gwt.requestfactory.client.impl.AbstractRequestFactory.find(AbstractRequestFactory.java:103
)
[ERROR]         at at.frip.client.managed.activity.BonusCardDetailsActivity.start(BonusCardDetailsActivity.java:106)
[ERROR]         at com.google.gwt.activity.shared.ActivityManager.onPlaceChange(ActivityManager.java:161)
[ERROR]         at com.google.gwt.place.shared.PlaceChangeEvent.dispatch(PlaceChangeEvent.java:57)
[ERROR]         at com.google.gwt.place.shared.PlaceChangeEvent.dispatch(PlaceChangeEvent.java:1)
[ERROR]         at com.google.gwt.event.shared.SimpleEventBus.doFire(SimpleEventBus.java:204)
[ERROR]         at com.google.gwt.event.shared.SimpleEventBus.fireEvent(SimpleEventBus.java:103)
[ERROR]         at com.google.gwt.place.shared.PlaceController.goTo(PlaceController.java:120)
[ERROR]         at at.frip.client.scaffold.place.AbstractProxyEditActivity.exit(AbstractProxyEditActivity.java:134)
[ERROR]         at at.frip.client.scaffold.place.CreateAndEditProxy.exit(CreateAndEditProxy.java:44)
[ERROR]         at at.frip.client.scaffold.place.AbstractProxyEditActivity$1.onSuccess(AbstractProxyEditActivity.java:97
)
[ERROR]         at at.frip.client.scaffold.place.AbstractProxyEditActivity$1.onSuccess(AbstractProxyEditActivity.java:1)
[ERROR]         at com.google.gwt.requestfactory.client.impl.AbstractRequestContext$4.onTransportSuccess(AbstractRequest
Context.java:394)
[ERROR]         at com.google.gwt.requestfactory.client.DefaultRequestTransport$1.onResponseReceived(DefaultRequestTrans
port.java:140)
[ERROR]         at com.google.gwt.http.client.Request.fireOnResponseReceived(Request.java:287)
[ERROR]         at com.google.gwt.http.client.RequestBuilder$1.onReadyStateChange(RequestBuilder.java:395)
[ERROR]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[ERROR]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
[ERROR]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
[ERROR]         at java.lang.reflect.Method.invoke(Method.java:597)
[ERROR]         at com.google.gwt.dev.shell.MethodAdaptor.invoke(MethodAdaptor.java:103)
[ERROR]         at com.google.gwt.dev.shell.MethodDispatch.invoke(MethodDispatch.java:71)
[ERROR]         at com.google.gwt.dev.shell.OophmSessionHandler.invoke(OophmSessionHandler.java:157)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.reactToMessagesWhileWaitingForReturn(BrowserChannelServ
er.java:326)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.invokeJavascript(BrowserChannelServer.java:207)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpaceOOPHM.doInvoke(ModuleSpaceOOPHM.java:126)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpace.invokeNative(ModuleSpace.java:562)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpace.invokeNativeObject(ModuleSpace.java:269)
[ERROR]         at com.google.gwt.dev.shell.JavaScriptHost.invokeNativeObject(JavaScriptHost.java:91)
[ERROR]         at com.google.gwt.core.client.impl.Impl.apply(Impl.java)
[ERROR]         at com.google.gwt.core.client.impl.Impl.entry0(Impl.java:214)
[ERROR]         at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source)
[ERROR]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
[ERROR]         at java.lang.reflect.Method.invoke(Method.java:597)
[ERROR]         at com.google.gwt.dev.shell.MethodAdaptor.invoke(MethodAdaptor.java:103)
[ERROR]         at com.google.gwt.dev.shell.MethodDispatch.invoke(MethodDispatch.java:71)
[ERROR]         at com.google.gwt.dev.shell.OophmSessionHandler.invoke(OophmSessionHandler.java:157)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.reactToMessages(BrowserChannelServer.java:281)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.processConnection(BrowserChannelServer.java:531)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.run(BrowserChannelServer.java:352)
[ERROR]         at java.lang.Thread.run(Thread.java:619)
[ERROR] 20.10.2010 13:58:32 com.google.gwt.requestfactory.server.RequestFactoryServlet doPost
[ERROR] SCHWERWIEGEND: Unexpected error
[ERROR] com.google.gwt.requestfactory.server.RequestProcessingException: Unexpected exception
[ERROR]         at com.google.gwt.requestfactory.server.JsonRequestProcessor.decodeAndInvokeRequest(JsonRequestProcessor
.java:238)
[ERROR]         at com.google.gwt.requestfactory.server.JsonRequestProcessor.decodeAndInvokeRequest(JsonRequestProcessor
.java:62)
[ERROR]         at com.google.gwt.requestfactory.server.RequestFactoryServlet.doPost(RequestFactoryServlet.java:122)
[ERROR]         at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
[ERROR]         at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
[ERROR]         at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
[ERROR]         at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1097)
[ERROR]         at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77
)
[ERROR]         at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
[ERROR]         at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1088)
[ERROR]         at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:
88)
[ERROR]         at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
[ERROR]         at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1088)
[ERROR]         at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerI
nViewFilter.java:113)
[ERROR]         at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
[ERROR]         at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1088)
[ERROR]         at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
[ERROR]         at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
[ERROR]         at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
[ERROR]         at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:729)
[ERROR]         at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
[ERROR]         at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
[ERROR]         at org.mortbay.jetty.handler.RequestLogHandler.handle(RequestLogHandler.java:49)
[ERROR]         at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
[ERROR]         at org.mortbay.jetty.Server.handle(Server.java:324)
[ERROR]         at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
[ERROR]         at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:843)
[ERROR]         at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:647)
[ERROR]         at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
[ERROR]         at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
[ERROR]         at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
[ERROR]         at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:488)
[ERROR] Caused by: java.lang.reflect.InvocationTargetException
[ERROR]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[ERROR]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
[ERROR]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
[ERROR]         at java.lang.reflect.Method.invoke(Method.java:597)
[ERROR]         at com.google.gwt.requestfactory.server.JsonRequestProcessor.invokeDomainMethod(JsonRequestProcessor.jav
a:828)
[ERROR]         at com.google.gwt.requestfactory.server.JsonRequestProcessor.processJsonRequest(JsonRequestProcessor.jav
a:886)
[ERROR]         at com.google.gwt.requestfactory.server.JsonRequestProcessor.decodeAndInvokeRequest(JsonRequestProcessor
.java:232)
[ERROR]         ... 31 more
[ERROR] Caused by: java.lang.IllegalStateException: Can&amp;amp;apos;t overwrite cause
[ERROR]         at java.lang.Throwable.initCause(Throwable.java:320)
[ERROR]         at com.google.gwt.logging.server.StackTraceDeobfuscator.deobfuscateThrowable(StackTraceDeobfuscator.java
:90)
[ERROR]         at com.google.gwt.logging.server.StackTraceDeobfuscator.deobfuscateThrowable(StackTraceDeobfuscator.java
:90)
[ERROR]         at com.google.gwt.logging.server.StackTraceDeobfuscator.deobfuscateLogRecord(StackTraceDeobfuscator.java
:60)
[ERROR]         at com.google.gwt.logging.server.RemoteLoggingServiceUtil.logOnServer(RemoteLoggingServiceUtil.java:58)
[ERROR]         at com.google.gwt.logging.server.RemoteLoggingServiceUtil.logOnServer(RemoteLoggingServiceUtil.java:73)
[ERROR]         at com.google.gwt.requestfactory.server.Logging.logMessage(Logging.java:40)
[ERROR]         ... 38 more
[ERROR] Wed Oct 20 13:58:55 CEST 2010 at.frip.client.scaffold.Scaffold
[ERROR] SEVERE: Server Error: Can&amp;amp;apos;t overwrite cause
[ERROR] java.lang.RuntimeException: Server Error: Can&amp;amp;apos;t overwrite cause
[ERROR]         at com.google.gwt.requestfactory.shared.Receiver.onFailure(Receiver.java:36)
[ERROR]         at com.google.gwt.requestfactory.client.impl.AbstractRequest.fail(AbstractRequest.java:187)
[ERROR]         at com.google.gwt.requestfactory.client.impl.AbstractRequest.handleResponseText(AbstractRequest.java:96)
[ERROR]         at com.google.gwt.requestfactory.client.impl.AbstractRequestContext$4.onTransportSuccess(AbstractRequest
Context.java:390)
[ERROR]         at com.google.gwt.requestfactory.client.DefaultRequestTransport$1.onResponseReceived(DefaultRequestTrans
port.java:140)
[ERROR]         at com.google.gwt.http.client.Request.fireOnResponseReceived(Request.java:287)
[ERROR]         at com.google.gwt.http.client.RequestBuilder$1.onReadyStateChange(RequestBuilder.java:395)
[ERROR]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[ERROR]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
[ERROR]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
[ERROR]         at java.lang.reflect.Method.invoke(Method.java:597)
[ERROR]         at com.google.gwt.dev.shell.MethodAdaptor.invoke(MethodAdaptor.java:103)
[ERROR]         at com.google.gwt.dev.shell.MethodDispatch.invoke(MethodDispatch.java:71)
[ERROR]         at com.google.gwt.dev.shell.OophmSessionHandler.invoke(OophmSessionHandler.java:157)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.reactToMessagesWhileWaitingForReturn(BrowserChannelServ
er.java:326)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.invokeJavascript(BrowserChannelServer.java:207)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpaceOOPHM.doInvoke(ModuleSpaceOOPHM.java:126)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpace.invokeNative(ModuleSpace.java:562)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpace.invokeNativeObject(ModuleSpace.java:269)
[ERROR]         at com.google.gwt.dev.shell.JavaScriptHost.invokeNativeObject(JavaScriptHost.java:91)
[ERROR]         at com.google.gwt.core.client.impl.Impl.apply(Impl.java)
[ERROR]         at com.google.gwt.core.client.impl.Impl.entry0(Impl.java:214)
[ERROR]         at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source)
[ERROR]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
[ERROR]         at java.lang.reflect.Method.invoke(Method.java:597)
[ERROR]         at com.google.gwt.dev.shell.MethodAdaptor.invoke(MethodAdaptor.java:103)
[ERROR]         at com.google.gwt.dev.shell.MethodDispatch.invoke(MethodDispatch.java:71)
[ERROR]         at com.google.gwt.dev.shell.OophmSessionHandler.invoke(OophmSessionHandler.java:157)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.reactToMessages(BrowserChannelServer.java:281)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.processConnection(BrowserChannelServer.java:531)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.run(BrowserChannelServer.java:352)
[ERROR]         at java.lang.Thread.run(Thread.java:619)
[ERROR] 20.10.2010 13:58:55 com.google.gwt.logging.server.RemoteLoggingServiceUtil logOnServer
[ERROR] SCHWERWIEGEND: Server Error: Can&amp;amp;apos;t overwrite cause
[ERROR] java.lang.Throwable: Server Error: Can&amp;amp;apos;t overwrite cause
[ERROR]         at com.google.gwt.requestfactory.shared.Receiver.onFailure(Receiver.java:36)
[ERROR]         at com.google.gwt.requestfactory.client.impl.AbstractRequest.fail(AbstractRequest.java:187)
[ERROR]         at com.google.gwt.requestfactory.client.impl.AbstractRequest.handleResponseText(AbstractRequest.java:96)
[ERROR]         at com.google.gwt.requestfactory.client.impl.AbstractRequestContext$4.onTransportSuccess(AbstractRequest
Context.java:390)
[ERROR]         at com.google.gwt.requestfactory.client.DefaultRequestTransport$1.onResponseReceived(DefaultRequestTrans
port.java:140)
[ERROR]         at com.google.gwt.http.client.Request.fireOnResponseReceived(Request.java:287)
[ERROR]         at com.google.gwt.http.client.RequestBuilder$1.onReadyStateChange(RequestBuilder.java:395)
[ERROR]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[ERROR]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
[ERROR]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
[ERROR]         at java.lang.reflect.Method.invoke(Method.java:597)
[ERROR]         at com.google.gwt.dev.shell.MethodAdaptor.invoke(MethodAdaptor.java:103)
[ERROR]         at com.google.gwt.dev.shell.MethodDispatch.invoke(MethodDispatch.java:71)
[ERROR]         at com.google.gwt.dev.shell.OophmSessionHandler.invoke(OophmSessionHandler.java:157)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.reactToMessagesWhileWaitingForReturn(BrowserChannelServ
er.java:326)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.invokeJavascript(BrowserChannelServer.java:207)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpaceOOPHM.doInvoke(ModuleSpaceOOPHM.java:126)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpace.invokeNative(ModuleSpace.java:562)
[ERROR]         at com.google.gwt.dev.shell.ModuleSpace.invokeNativeObject(ModuleSpace.java:269)
[ERROR]         at com.google.gwt.dev.shell.JavaScriptHost.invokeNativeObject(JavaScriptHost.java:91)
[ERROR]         at com.google.gwt.core.client.impl.Impl.apply(Impl.java)
[ERROR]         at com.google.gwt.core.client.impl.Impl.entry0(Impl.java:214)
[ERROR]         at sun.reflect.GeneratedMethodAccessor40.invoke()
[ERROR]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
[ERROR]         at java.lang.reflect.Method.invoke(Method.java:597)
[ERROR]         at com.google.gwt.dev.shell.MethodAdaptor.invoke(MethodAdaptor.java:103)
[ERROR]         at com.google.gwt.dev.shell.MethodDispatch.invoke(MethodDispatch.java:71)
[ERROR]         at com.google.gwt.dev.shell.OophmSessionHandler.invoke(OophmSessionHandler.java:157)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.reactToMessages(BrowserChannelServer.java:281)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.processConnection(BrowserChannelServer.java:531)
[ERROR]         at com.google.gwt.dev.shell.BrowserChannelServer.run(BrowserChannelServer.java:352)
[ERROR]         at java.lang.Thread.run(Thread.java:619)
</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.1.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1643" opendate="2010-10-27 22:10:20" fixdate="2010-10-28 00:15:44" resolution="Complete">
		<buginformation>
			<summary>declaredByMetadataId is never assigned in JavaParserMethodMetadata</summary>
			<description></description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1652" opendate="2010-10-30 00:44:54" fixdate="2010-10-31 18:19:01" resolution="Complete">
		<buginformation>
			<summary>Roo DBRE : Repeated column in mapping for entity</summary>
			<description>In an effort to obtain access to key values of foreign keys,
Ttable.java defines @Column(name = "first_bee")
Roo notices, and creates relevant _JavaBean.aj ITD, 
but fails to annotate for: (should be mapped with insert="false" update="false")
Attached is the backup.zip with mysql dump, log.roo, tc.log (the stacktrace from tc-server)
and the whole eclipse project.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.details.MemberFindingUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1662" opendate="2010-11-01 10:12:38" fixdate="2010-11-01 12:14:45" resolution="Fixed">
		<buginformation>
			<summary>Documentation on web mvc install language is wrong</summary>
			<description>The documentation on web mvc install language states:
Create a new manual Controller (ie where you write the methods)
This is wrong of course - it adds i18n for the specificied language.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="1657" opendate="2010-10-30 17:36:08" fixdate="2010-11-02 09:51:40" resolution="Fixed">
		<buginformation>
			<summary>&amp;apos;controller scaffold&amp;apos; command gives confusing error with missing entity</summary>
			<description>Roo script:-
project --topLevelPackage pluralbug
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY
entity --class ~.domain.SomeEntity --testAutomatically
field string junkText --notNull --sizeMax 30
controller scaffold --class ~.web.SomeEntityController --entity ~.domain.OtherEntity
The final line of this script should throw some error about not finding ~.domain.OtherEntity - but instead Roo is ignoring the elephant in the room (or lack thereof) and saying:-
[...]
controller scaffold --class ~.web.SomeEntityController --entity ~.domain.OtherEntity
Could not determine plural for &amp;amp;apos;OtherEntity&amp;amp;apos;
Script execution aborted
Roo exited with code 1

Thanks.

</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="1667" opendate="2010-11-02 16:32:56" fixdate="2010-11-02 18:58:47" resolution="Complete">
		<buginformation>
			<summary>Quoted single arguments in Roo shell do not terminate the current argument buffer unless a space is added at the end of argument</summary>
			<description>When surrounding an argument with double quotes, currently a space must be added to the end of the argument before the second double quote else the same option is displayed again when TAB is pressed.
For example:
entity --class "Foo" then TAB causes --class to be displayed again. 
Multiple valued arguments are not affected. For example, the hypothetical command below works OK:
echo --message "foo bar" then TAB does not cause --message to be displayed again.
Also, echo --message "foo" then ENTER prompts for the --message again</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.Parser.java</file>
			<file type="M">org.springframework.roo.shell.AbstractShell.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
			<file type="M">org.springframework.roo.shell.ParserUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="1677" opendate="2010-11-04 04:19:05" fixdate="2010-11-05 13:07:18" resolution="Complete">
		<buginformation>
			<summary>Date handling in MVC broken</summary>
			<description>If I enter a date using the standard Roo view everything looks fine (see BeforeSubmit.png). Then I submit the value and get an error (see AfterSubmit.png). If I enter the same String without using the widget it works.
This is on Ubuntu with the browser integrated in Eclipse. Using Google Chrome  on Linux leads to different behavior (see BeforeSubmitChrome / AfterSubmitChrome). As you can see the format used there is 11.2.2010 which is a typical German layout for a Date. I am running on a German localization with the browser - maybe that is the reason for the issue.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1696" opendate="2010-11-06 10:08:23" fixdate="2010-11-07 00:48:14" resolution="Complete">
		<buginformation>
			<summary>DBRE maps HSQL boolean columns to Zero-length string fields</summary>
			<description>DBRE maps the HSQL boolean column type to a zero-length string field in the generated aspectJ code, resulting in the message:
{{{
Caused by: org.hibernate.HibernateException: Wrong column type in PUBLIC.TABLE_NAME for column column_name. Found: boolean, expected: varchar(0)
}}}</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.ColumnType.java</file>
		</fixedFiles>
	</bug>
	<bug id="1675" opendate="2010-11-03 09:23:36" fixdate="2010-11-08 21:49:45" resolution="Complete">
		<buginformation>
			<summary>Java keywords still being written into entities generated by Roo using reverse engineering</summary>
			<description>What&amp;amp;apos;s described in ROO-1357 is still happening.  Please see my comment there.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreTypeResolutionServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">1357</link>
		</links>
	</bug>
	<bug id="1719" opendate="2010-11-09 00:10:25" fixdate="2010-11-09 00:14:06" resolution="Complete">
		<buginformation>
			<summary>DbreDatabaseListenerImpl fails to update @RooIdentifier classes until Roo is restarted</summary>
			<description></description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.entity.AbstractIdentifierServiceAwareMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="1718" opendate="2010-11-08 23:47:50" fixdate="2010-11-09 00:29:43" resolution="Fixed">
		<buginformation>
			<summary>FileConverter uses Unix-specific check for absolute path names, breaking Windows behavior</summary>
			<description>Current code checks if String denoting file name starts with File.separator to treat the name as an absolute path, but Windows doesn&amp;amp;apos;t work like that as it uses drive letters for absolute paths. </description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.jline.JLineShell.java</file>
			<file type="M">org.springframework.roo.support.util.FileUtils.java</file>
			<file type="M">org.springframework.roo.shell.jline.JLineLogHandler.java</file>
			<file type="M">org.springframework.roo.shell.converters.FileConverter.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">1681</link>
		</links>
	</bug>
	<bug id="1687" opendate="2010-11-05 06:35:22" fixdate="2010-11-09 11:33:05" resolution="Fixed">
		<buginformation>
			<summary>Solr plugin does not allow overriding of methods added to bean</summary>
			<description>If you attempt to define Bean.indexBean(Collection&amp;lt;Bean&amp;gt; beans) in Bean.java after adding solr to the Bean class, it will cause errors due to the method being declared twice (also in Bean_Roo_SolrSearch.aj). This is different than the way it is done for setters/getters/etc. Redefining this is useful when you only want to search on specific fields.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1690" opendate="2010-11-05 10:27:49" fixdate="2010-11-09 16:04:09" resolution="Complete">
		<buginformation>
			<summary>DBRE overrides renamed Classes</summary>
			<description>I started a new Spring Roo project in STS on the specified environment.  I ran the following roo shell commands:
roo&amp;gt; persistence setup --provider HIBERNATE --database MYSQL --hostName localhost --databaseName foodb --userName uname --password pwd
roo&amp;gt; database reverse engineer --package foo.model --schema foodb
This generated the entities from an existing database with dbre.  One of my entities was named "Customers" because I have a "customers" table.  In the IDE, I renamed the class "Customer".  The IDE changed the class name from Customers.java to Customer.java for me.  The roo shell responded with:
Created SRC_MAIN_JAVA/foo/model/Customer_Roo_Entity.aj
Created SRC_MAIN_JAVA/foo/model/Customer_Roo_Configurable.aj
Created SRC_MAIN_JAVA/foo/model/Customer_Roo_ToString.aj
Deleted SRC_MAIN_JAVA/foo/model/Customers_Roo_ToString.aj
Deleted SRC_MAIN_JAVA/foo/model/Customers_Roo_Entity.aj
Deleted SRC_MAIN_JAVA/foo/model/Customers_Roo_DbManaged.aj
Deleted SRC_MAIN_JAVA/foo/model/Customers_Roo_Configurable.aj
Note: no Customer_Roo_DbManaged.aj was created, which seemed odd.
I next closed the roo shell and reopened it.  roo responded with:
Created /home/poneil/projects/workspace/foo/src/main/java/foo/model/Customers.java
Deleted /home/poneil/projects/workspace/foo/src/main/java/foo/model/Customer.java
Created /home/poneil/projects/workspace/foo/src/main/java/foo/model/Customers_Roo_Entity.aj
Created SRC_MAIN_JAVA/foo/model/Customers_Roo_Configurable.aj
Created SRC_MAIN_JAVA/foo/model/Customers_Roo_DbManaged.aj
Created SRC_MAIN_JAVA/foo/model/Customers_Roo_ToString.aj
Deleted SRC_MAIN_JAVA/foo/model/Customer_Roo_Configurable.aj
Deleted SRC_MAIN_JAVA/foo/model/Customer_Roo_ToString.aj
Deleted SRC_MAIN_JAVA/foo/model/Customer_Roo_Entity.aj
this essentially completely reverses the renaming of the entity, and is the problem that I wish to report.  I should be able to rename/tweak an entity after DBRE.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreTypeResolutionServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
		</fixedFiles>
	</bug>
	<bug id="1726" opendate="2010-11-10 18:42:37" fixdate="2010-11-14 21:37:08" resolution="Complete">
		<buginformation>
			<summary>DBRE fails quietly if database contains certain tablename patterns</summary>
			<description>1. Create a MSSQL database.
2. Create a table in the default schema "dbo".
3. Name the table with "dbo." prepended to the filename, e.g. "dbo.myTable". So in the database&amp;amp;apos;s table listing the table shows up as "dbo.dbo.myTable".
4. Create other tables as appropriate. 
4. Create a roo project with Hibernate as the persistence provider.
5. Enter "database introspect --schema dbo --file test.xml". The xml file will be created as expected.
7. Enter "database reverse engineer --schema dbo --package ~.foo"
8. .roo-dbre is created and peristence.xml is updated, but that&amp;amp;apos;s it. No entities are created.
Roo script and ddl attached.
Not a naming scheme one would wisely or typically employ, but the resulting behavior is unexpected and confusing.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreTypeResolutionServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1691" opendate="2010-11-05 11:10:43" fixdate="2010-11-15 20:10:07" resolution="Complete">
		<buginformation>
			<summary>DBRE failing with mysql database Field &amp;apos;foo&amp;apos; already defined in ITD</summary>
			<description>
Field &amp;amp;apos;materialquantities&amp;amp;apos; already defined in ITD (ITD target &amp;amp;apos;com.nemt.mmsweb.maintenance.domain.Shipment_Roo_DbManaged)&amp;amp;apos;
Not really sure what to do with that message. The Table Shipment doesn&amp;amp;apos;t have that field
----------------------------------------------------------+


 Field            
 Type         
 Null 
 Key 
 Default 
 Extra          


----------------------------------------------------------+


 id               
 bigint(20)   
 NO   
 PRI 
 NULL    
 auto_increment 


 CONFIRMEDDATE    
 date         
 YES  

 NULL    



 MODIFIER         
 varchar(255) 
 YES  

 NULL    



 STRIKEDATE       
 date         
 YES  

 NULL    



 STRIKERANGEFROM  
 date         
 YES  

 NULL    



 STRIKERANGETO    
 date         
 YES  

 NULL    



 DEVLIVERFROMDATE 
 date         
 YES  

 NULL    



 DEVLIVERToDATE   
 date         
 YES  

 NULL    



 exchange         
 tinyblob     
 YES  

 NULL    



 export           
 bit(1)       
 YES  

 NULL    



 FREIGHT          
 double       
 YES  

 NULL    



 ITEMDESC         
 varchar(255) 
 YES  

 NULL    



 ITEMNAME         
 varchar(255) 
 YES  

 NULL    



 loadNumber       
 int(11)      
 NO   

 NULL    



 LOADWEIGHTMAX    
 double       
 YES  

 NULL    



 LOADWEIGHTMIN    
 double       
 YES  

 NULL    



 LOADERID         
 bigint(20)   
 YES  

 NULL    



 orderStatus      
 varchar(255) 
 YES  

 NULL    



 requestDate      
 datetime     
 YES  
 MUL 
 NULL    



 SALEPRICES       
 double       
 YES  

 NULL    



 STRIKEPRICES     
 double       
 YES  

 NULL    



 type             
 varchar(255) 
 YES  

 NULL    



 company_id       
 bigint(20)   
 YES  
 MUL 
 NULL    



 freightOrder_fk  
 bigint(20)   
 YES  
 MUL 
 NULL    



 order_id         
 bigint(20)   
 YES  
 MUL 
 NULL    



 supervisor_id    
 bigint(20)   
 YES  
 MUL 
 NULL    



----------------------------------------------------------+
----------------------------------------------+


 Field           
 Type       
 Null 
 Key 
 Default 
 Extra 


----------------------------------------------+


 Shipment_id     
 bigint(20) 
 NO   
 PRI 
 NULL    



 shippedItems_id 
 bigint(20) 
 NO   
 PRI 
 NULL    



----------------------------------------------+
shippmdItems references materialQuantity.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.jdbc.DatabaseIntrospector.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.JoinTable.java</file>
		</fixedFiles>
	</bug>
	<bug id="1746" opendate="2010-11-18 15:14:51" fixdate="2010-11-18 16:33:32" resolution="Complete">
		<buginformation>
			<summary>DBRE does not handle unique constraints</summary>
			<description>Generated class does not have unique=true in @Column annotation</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Column.java</file>
		</fixedFiles>
	</bug>
	<bug id="1747" opendate="2010-11-18 15:52:49" fixdate="2010-11-19 12:05:16" resolution="Complete">
		<buginformation>
			<summary>DBRE does not handle NOT NULL constraint on Foreign Keys</summary>
			<description>Although user_id field in "comment" table is specified as NOT NULL,
the generated Comment class has:
@ManyToOne
@JoinColumn(name = "user_id", referencedColumnName = "id")
private Person Comment.person;
In other words NOT NULL on FK is not added as field annotation.
The consequence is failed integration test:
ERROR org.hibernate.util.JDBCExceptionReporter - Column &amp;amp;apos;user_id&amp;amp;apos; cannot be null
Also I manually add @NotNull in CommentDbManaged.aj, that doesn&amp;amp;apos;t help, since TestDataOnDemand would not be changed automatically.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1754" opendate="2010-11-19 18:45:58" fixdate="2010-11-22 05:04:13" resolution="Complete">
		<buginformation>
			<summary>getter method without corresponding field causes GwtMetadata.buildProxy to throw a NullPointerException</summary>
			<description>Changes in commit 5b3c43c241e006f06596e5f8ba38ae9eb66002ae cause the Gwt addon to produce a NPE if there is a getter method but no corresponding field in a bean.
In commit 45dfd34f0753c6e95129083f0cd5b14bbb5e73a9 this happens in line 238 of GwtMetadata. I&amp;amp;apos;ve attached a simple patch that uses the accessor method&amp;amp;apos;s return type in case there&amp;amp;apos;s no corresponding field. I don&amp;amp;apos;t understand why it was changed in the first place though.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1758" opendate="2010-11-22 10:34:50" fixdate="2010-11-22 18:05:46" resolution="Complete">
		<buginformation>
			<summary>Incorrect Accept headers in RequestMapping for CreateFromJson methods</summary>
			<description>Currently when using the @RooJson annotation the json create method @RequestMapping headers in the Controller aspect are set as headers = "Accept=application/json" and are returning new ResponseEntity&amp;lt;String&amp;gt;("myThing created", HttpStatus.CREATED).
I believe this is incorrect and that the @RequestMapping headers should be headers = "Accept=text/plain".
This however will probably clash with the default create method for the aspect so it may be better to change the method to return the json format of the created object e.g.






createFromJson






@RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")




@ResponseBody




public String MyThingController.createFromJson(@RequestBody final String json) {




    MyThing myThing = MyThing.fromJsonToMyThing(json);




    myThing.persist();




    return myThing.toJson();




}






I believe it will work to change the headers for the createFromJsonArray method as it is the only method mapped to path /jsonArray. You could of course also change this method to return the json format of the created objects e.g.






createFromJsonArray






@RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")




@ResponseBody




public final String MyThingController.createFromJsonArray(@RequestBody final String json) {




    List&amp;lt;MyThing&amp;gt; myThings = new ArrayList&amp;lt;MyThing&amp;gt;();




    for (MyThing myThing : MyThing.fromJsonArrayToMyThing(json)) {




        myThing.persist();




        myThings.add(myThing);




    }




    return MyThing.toJsonArray(myThings);




}






I have had a quick look at the code for WebScaffoldMetadata.java in the mvc controller addon and believe this issue could be resolved by changing the 






WebScaffoldMetadata.java






    private MethodMetadata getJsonCreateMethod() {




        JavaSymbolName fromJsonMethodName = jsonMetadata.getFromJsonMethodName();




        if (fromJsonMethodName == null) {




            return null;




        }




        




        JavaSymbolName toJsonMethodName = jsonMetadata.getToJsonMethodName();




        if (toJsonMethodName == null) {




            return null;




        }









        JavaSymbolName methodName = new JavaSymbolName("createFromJson");









        List&amp;lt;AnnotationMetadata&amp;gt; parameters = new ArrayList&amp;lt;AnnotationMetadata&amp;gt;();




        AnnotationMetadataBuilder requestBodyAnnotation = new AnnotationMetadataBuilder(new JavaType("org.springframework.web.bind.annotation.RequestBody"));




        parameters.add(requestBodyAnnotation.build());









        List&amp;lt;AnnotatedJavaType&amp;gt; paramTypes = new ArrayList&amp;lt;AnnotatedJavaType&amp;gt;();




        paramTypes.add(new AnnotatedJavaType(JavaType.STRING_OBJECT, parameters));




        




        MethodMetadata jsonCreateMethod = methodExists(methodName, paramTypes);




        if (jsonCreateMethod != null) return jsonCreateMethod;









        List&amp;lt;JavaSymbolName&amp;gt; paramNames = new ArrayList&amp;lt;JavaSymbolName&amp;gt;();




        paramNames.add(new JavaSymbolName("json"));









        List&amp;lt;AnnotationAttributeValue&amp;lt;?&amp;gt;&amp;gt; requestMappingAttributes = new ArrayList&amp;lt;AnnotationAttributeValue&amp;lt;?&amp;gt;&amp;gt;();




        requestMappingAttributes.add(new EnumAttributeValue(new JavaSymbolName("method"), new EnumDetails(new JavaType("org.springframework.web.bind.annotation.RequestMethod"), new JavaSymbolName("POST"))));




        requestMappingAttributes.add(new StringAttributeValue(new JavaSymbolName("headers"), "Accept=application/json"));




        AnnotationMetadataBuilder requestMapping = new AnnotationMetadataBuilder(new JavaType("org.springframework.web.bind.annotation.RequestMapping"), requestMappingAttributes);




        List&amp;lt;AnnotationMetadataBuilder&amp;gt; annotations = new ArrayList&amp;lt;AnnotationMetadataBuilder&amp;gt;();




        annotations.add(requestMapping);




        annotations.add(new AnnotationMetadataBuilder(new JavaType("org.springframework.web.bind.annotation.ResponseBody")));




        




        InvocableMemberBodyBuilder bodyBuilder = new InvocableMemberBodyBuilder();




        bodyBuilder.appendFormalLine(beanInfoMetadata.getJavaBean().getNameIncludingTypeParameters(false, builder.getImportRegistrationResolver()) + " " + entityName + " = " + beanInfoMetadata.getJavaBean().getNameIncludingTypeParameters(false, builder.getImportRegistrationResolver()) + "." + fromJsonMethodName.getSymbolName() + "(json);");




        bodyBuilder.appendFormalLine(entityName + "." + entityMetadata.getPersistMethod().getMethodName().getSymbolName() + "();");









        bodyBuilder.appendFormalLine("return " + entityName + "." +  toJsonMethodName.getSymbolName() + "();");









        MethodMetadataBuilder methodBuilder = new MethodMetadataBuilder(getId(), Modifier.PUBLIC, methodName, JavaType.STRING_OBJECT, bodyBuilder);




        




        methodBuilder.setAnnotations(annotations);




        return methodBuilder.build();




    }






... and changing the Accept in getCreateFromJsonArrayMethod:






WebScaffoldMetadata.java






        requestMappingAttributes.add(new StringAttributeValue(new JavaSymbolName("headers"), "Accept=text/plain"));






NOTE: the code/attached has not been tested as I have had an issue building locally and have not had the time to investigate</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1661" opendate="2010-11-01 09:59:38" fixdate="2010-11-23 00:38:37" resolution="Complete">
		<buginformation>
			<summary> Multiple writable mappings for fields if using database reverse engineering</summary>
			<description>I tried the database reverse engineering on a MySQL database Hyperic stores its data in. I use EclipseLink as JPA provider.
The result when I start the application is:
Exception [EclipseLink-48] (Eclipse Persistence Services - 2.1.0.v20100614-r7608): org.eclipse.persistence.exceptions.DescriptorException
Exception Description: Multiple writable mappings exist for the field [HQ.EAM_UI_ATTACH_RSRC.ATTACH_ID].  Only one may be defined as writable, all others must be specified read-only.
Mapping: org.eclipse.persistence.mappings.OneToOneMapping[eamUiAttachment]
Descriptor: RelationalDescriptor(com.springsource.dbintrospection.domain.EamUiAttachRsrc --&amp;gt; [DatabaseTable(HQ.EAM_UI_ATTACH_RSRC)])
I attached the ITDs. It appears that it mapped to a relation to another table as well as the primary key. I am not sure how the foreign key relation was reverse engineered but I believe this database design is not so uncommon after all.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1717" opendate="2010-11-08 16:15:52" fixdate="2010-11-23 17:28:33" resolution="Complete">
		<buginformation>
			<summary>Standard Scaffold controller methods defined in parent class are not detected</summary>
			<description>I have a Roo Controller class called Foo with scaffolding and there is a list method in the FooController_Roo_Controller aspect. If I implement list in my Foo class then Roo detects it and removes it from the aspect as expected.
If I now move that list method up into an Abstract base class called ParentOfFoo and change Foo so that it extends ParentOfFoo then Roo puts back the list method into the aspect. This is not what I expect.
Can we change Roo to detect methods implemented by base classes please?</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1763" opendate="2010-11-23 18:24:17" fixdate="2010-11-23 18:29:15" resolution="Complete">
		<buginformation>
			<summary>ShellStatus does not have a valid hashCode() or equals() method implementation</summary>
			<description>In reviewing code for ShellStatus, I noticed it omits the recently-added message field. Need to correct it.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.event.ShellStatus.java</file>
		</fixedFiles>
	</bug>
	<bug id="1684" opendate="2010-11-04 16:30:41" fixdate="2010-11-24 16:14:17" resolution="Complete">
		<buginformation>
			<summary>The UTF8 (german and cyrillic) data is not correctly written to the database</summary>
			<description>The utf8 characters are not correctly written to database.
a) german special characters (,,,)
b) cyrillic characters (...)
See 
http://forum.springsource.org/showthread.php?p=327431#post327431
and
https://jira.springsource.org/browse/ROO-89?focusedCommentId=60102#action_60102
I did some tests already, it didnt help:
1. Set the CharacterEncodingFilter filter in web.xml to first place
2. Set &amp;lt;property name="hibernate.connection.charSet" value="UTF-8" /&amp;gt; in persistence xml
3. I updated the DB manually with a correct UTF8 data (copied from hsqldb from same application but in grails) and is showed correctly, so the utf8 data is correcly read\displayed from database.
I have same application in grails. Same db (hsqldb), db settings, db version.
Here the sample of data in:
Grails:
Entered value " Mnchen", 
value in db "INSERT INTO GUETER_EINHEIT VALUES(17,0,&amp;amp;apos;\u041f\u0440\u0438\u0432\u0435\u0442 M\u00fcnchen&amp;amp;apos;)"
Roo:
Entered value " mnchen",
value in the db "INSERT INTO GUETER_EINHEIT VALUES(2,&amp;amp;apos;\u00d0\u009f\u00d1\u0080\u00d0\u00b8\u00d0\u00b2\ u00d0\u00b5\u00d1\u0082 m\u00c3\u00bcnchen&amp;amp;apos;,0)"
Very strange, I see in Roo for one special character two unicode characters and the generated unicode of grails and roo is different</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2259</link>
			<link type="Relate" description="is related to">1731</link>
		</links>
	</bug>
	<bug id="1714" opendate="2010-11-08 04:53:04" fixdate="2010-11-24 17:18:17" resolution="Complete">
		<buginformation>
			<summary>Pagination doesn&amp;apos;t reset</summary>
			<description>1. generate clinic application and run
2. create 2 owners
3. create 9 pets
4. go to "List all Pets" page
5. change results per page to 5 and go to the second page result.
6. click "List all Owners" in the menu --&amp;gt; no owners found because page number is 2.
I guess, there must be reset of page number to 1 before entities fetching in this case.






if (page &amp;gt; maxPages) page = 1;






Thanks
</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="1782" opendate="2010-11-30 14:23:30" fixdate="2010-12-01 01:15:47" resolution="Complete">
		<buginformation>
			<summary>Error when using the &amp;apos;field embedded&amp;apos; command </summary>
			<description>Upon using the &amp;amp;apos;field embedded&amp;amp;apos; command, I ran into the following error/warning: "The field embedded command is only applicable to JPA @Entity target types". I&amp;amp;apos;ve checked my classes and the target type had the @RooEntity annotation, so I guess this should work. I&amp;amp;apos;ve temporarily replaced that annotation with the @Entity annotation, performend the same &amp;amp;apos;field embedded&amp;amp;apos; command without any problems. Changing the annotation then again back to &amp;amp;apos;@RooEntity&amp;amp;apos; worked fine and even the unit tests kept working, so not much of a problem, but still a bit of a strange annoyance.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="1787" opendate="2010-12-01 00:15:02" fixdate="2010-12-08 14:52:59" resolution="Fixed">
		<buginformation>
			<summary>Setting findAllMethod="" in an Entity removes POST methods in Controller</summary>
			<description>My requirement is that I want to limit users to dealing with a searched for entity by rather than given them access to a list of all elements.
I thought the easiest way to achieve this was to set findAllMethod="" within the entity, so I had the following within my @RooEntity annotation:
@RooEntity( findAllMethod="" )
 Unfortunately when I did so, I discovered that the controller was modified to remove all POST related methods which is not desirable. 
</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="1795" opendate="2010-12-04 09:31:19" fixdate="2010-12-08 15:19:19" resolution="Fixed">
		<buginformation>
			<summary>Webscaffold throws exception with self-referencing domain object</summary>
			<description>I&amp;amp;apos;m using Roo 1.1.1 from git, and on launching in an existing Roo 1.1.0 managed project I get an exception (below).
I have been able to reduce this to a simple repeatable test case, which fails on the final line:-
[Roo script]
project --topLevelPackage com.example.treenode.webscaffold
persistence setup --provider ECLIPSELINK --database HYPERSONIC_IN_MEMORY
entity --class ~.domain.TreeNode --testAutomatically
field string name --notNull --sizeMax 30
field reference --fieldName parent --type ~.domain.TreeNode --cardinality ONE_TO_ONE
field set --fieldName children --type ~.domain.TreeNode --cardinality ONE_TO_MANY --mappedBy parent
controller scaffold --class ~.web.roo.TreeNodeController --entity ~.domain.TreeNode
[Exception]
java.lang.IllegalArgumentException: Method &amp;amp;apos;getTreeNodeConverter&amp;amp;apos; already defined in ITD (ITD target &amp;amp;apos;com.example.treenode.webscaffold.web.roo.TreeNodeController_Roo_Controller&amp;amp;apos;
    at org.springframework.roo.support.util.Assert.isNull(Assert.java:89)
    at org.springframework.roo.classpath.details.ItdTypeDetailsBuilder.onAddMethod(ItdTypeDetailsBuilder.java:78)
    at org.springframework.roo.classpath.details.AbstractMemberHoldingTypeDetailsBuilder.addMethod(AbstractMemberHoldingTypeDetailsBuilder.java:105)
    at org.springframework.roo.classpath.details.AbstractMemberHoldingTypeDetailsBuilder.addMethod(AbstractMemberHoldingTypeDetailsBuilder.java:123)
    at org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.getRegisterConvertersMethod(WebScaffoldMetadata.java:948)
    at org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.&amp;lt;init&amp;gt;(WebScaffoldMetadata.java:137)
    at org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadataProviderImpl.getMetadata(WebScaffoldMetadataProviderImpl.java:76)
    at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:251)
    at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:139)
    at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:125)
    at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:179)
    at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:262)
    at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:138)
    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)
    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanNotified(PollingFileMonitorService.java:217)
    at org.springframework.roo.process.manager.internal.DefaultFileManager.scan(DefaultFileManager.java:195)
    at org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.createWebApplicationContext(WebMvcOperationsImpl.java:151)
    at org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.installMinmalWebArtefacts(WebMvcOperationsImpl.java:48)
    at org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.installAllWebMvcArtifacts(WebMvcOperationsImpl.java:54)
    at org.springframework.roo.addon.web.mvc.controller.ControllerOperationsImpl.createAutomaticController(ControllerOperationsImpl.java:123)
    at org.springframework.roo.addon.web.mvc.controller.ControllerCommands.newController(ControllerCommands.java:93)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)
    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy$1.callback(ProcessManagerHostedExecutionStrategy.java:49)
    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:177)
    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:140)
    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)
    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:165)
    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:358)
    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:132)
    at java.lang.Thread.run(Thread.java:619)</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1824" opendate="2010-12-13 16:30:58" fixdate="2010-12-13 17:29:25" resolution="Fixed">
		<buginformation>
			<summary>@Transient Service objects in a @RooEntity cause Web Scaffold to fail</summary>
			<description>Previously reported by someone in the referenced post, but also causing us problems.  
Given:
@RooJavaBean
@RooEntity
public class Money{
@Autowired
@Transient
private MoneyService moneyService;
... other private fields that map to the db
}
Get "Could not scaffold controller for type Money, the referenced type MoneyService cannot be handled" and roo stops managing the file (or just hangs).
My understanding of ActiveRecord is that the Domain objects should encapsulate their business logic, and in our case that involves interacting with other services.  This service object is not itself a @RooEntity (in our case it has a @Service annotation and is being instantiated via Component Scanning
What causes the related Controller Scaffold to error?</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1735" opendate="2010-11-15 09:50:03" fixdate="2010-12-15 01:33:30" resolution="Complete">
		<buginformation>
			<summary>Initial tests fail after reverse engineering</summary>
			<description>I&amp;amp;apos;ve reverse engineered a database, generated test classes for each entity (one at a time), and when I run the tests they all fail. I don&amp;amp;apos;t think I&amp;amp;apos;m even hitting the db before it fails.
The exceptions can be found in the Surefire-Reports directory.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Column.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Index.java</file>
			<file type="D">org.springframework.roo.addon.dbre.model.ColumnType.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Table.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseContentHandler.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseIntrospector.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="depends on">1783</link>
			<link type="Relate" description="is related to">2220</link>
		</links>
	</bug>
	<bug id="1829" opendate="2010-12-14 19:00:48" fixdate="2010-12-15 01:45:02" resolution="Complete">
		<buginformation>
			<summary>Integer value for @javax.validation.contraints.Min breaks on generated @DataOnDemand</summary>
			<description>When processing @DataOnDemand for an Entity which has JSR-303 validation @javax.validation.constraints.Min if the argument supplied is an integer type the roo console will report the following exception
 [Timer-0] java.lang.Integer cannot be cast to java.lang.Long
          java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.Long
changing the argument type to a long works around this.
e.g.
@Min(4)  // kills roo with ClassCastException
private Integer pintsOfBeer;
@Min(4L) // works but is inconsistent with the annotation&amp;amp;apos;s description (see below)
private Integer pintsOfBeer;
According to javax.validation.contraints.Min
Supported types are: 
BigDecimal 
BigInteger 
byte, short, int, long, and their respective wrappers </description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="1655" opendate="2010-10-30 10:42:25" fixdate="2010-12-16 07:13:12" resolution="Complete">
		<buginformation>
			<summary>Controllers register duplicate type converters, construction order dictates which wins</summary>
			<description>If I create two sets of entities:






ObjectA &amp;gt;-- ObjectB




ObjectD &amp;gt;-- ObjectC






and push-in and modify the the converters in the ObjectAController and the ObjectDController, the changes I make in A controller will be ignored (because they are overwritten by the same converters that ObjectBController generates) but the changes I make in D controller will work just fine. 
So, every time I create a new controller that references some entity, it could, based on how it collates with the other controllers, undo any customizations I&amp;amp;apos;ve made to the String conversion of an entity.
In some sense, this is similar to ROO-1405 which looks like it was closed primarily because it suggested placing the default converter in the entity.
I would propose any of the following solutions:

Allow me to set registerConverters=false at a global level so that I can fully take over that process.
Keep track of which converters have been generated, and don&amp;amp;apos;t generate and register duplicates.
Generate duplicate converters, but ask the registry if that type already has a converter before registering it.
Only generate and register a single converter per controller (ObjectAController registers a converter for ObjectA, ignores any referenced entities).
Generate all converters into a single global file.

</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ConversionServiceMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.addon.web.mvc.controller.RooJavaType.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ConversionServiceMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.addon.web.mvc.controller.RooJavaTypeTests.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ConversionServiceMetadataTests.java</file>
			<file type="D">org.springframework.roo.addon.web.mvc.controller.DomainJavaType.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.StubMutableFile.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ConversionServiceOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ConversionServiceOperationsImplTests.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.RooWebScaffold.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">1405</link>
		</links>
	</bug>
	<bug id="1781" opendate="2010-11-29 14:43:28" fixdate="2010-12-16 17:19:27" resolution="Complete">
		<buginformation>
			<summary>High CPU usage for 5 mins during startup</summary>
			<description>When I launch Roo in my project folder it eats CPU for ~5 mins, using 200% of CPU for approx half of that time, then dropping to 100% for the remainder of that time.
It&amp;amp;apos;s bogging down Eclipse/STS, although I get identical problems running Roo at a command prompt.
My project has ~50 entities (all scaffolded) and I have another 80 or so classes elsewhere in the project. Not a trivial amount, but not huge either. I&amp;amp;apos;ve currently got no generated tests in the project, because then Roo takes even longer to start up. 
Don&amp;amp;apos;t know if it makes any difference, but my project also has some GWT components in it, because I&amp;amp;apos;m also using Vaadin libs.
I&amp;amp;apos;m using Oracle&amp;amp;apos;s JRockit VM - but I am experiencing these delays no matter what VM I choose.
I have tried different settings for -Xms and -Xmx, but that made no noticeable difference.
Here&amp;amp;apos;s some diagnostic info:-
localhost$ time roo metadata status
    ____  ____  ____  
   / __ \/ __ \/ __ \ 
  / /_/ / / / / / / / 
 / , _/ // / /_/ /  
// ||___/___/    1.1.0.RELEASE [rev 793f2b0]
Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.
Notification count: 934
375: org.springframework.roo.process.manager.internal.DefaultFileManager
1116: org.springframework.roo.addon.configurable.ConfigurableMetadata
1308: org.springframework.roo.addon.javabean.JavaBeanMetadata
1727: org.springframework.roo.classpath.PhysicalTypeIdentifier
2336: org.springframework.roo.addon.entity.EntityMetadata
2703: org.springframework.roo.addon.tostring.ToStringMetadata
5674: org.springframework.roo.project.AutomaticProjectUpgradeService
5850: org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata
6065: org.springframework.roo.addon.finder.FinderMetadata
7463: org.springframework.roo.addon.beaninfo.BeanInfoMetadata
7785: org.springframework.roo.addon.plural.PluralMetadata
194309: org.springframework.roo.addon.web.mvc.jsp.JspMetadata
[DefaultMetadataService@12c42222 providers = set[org.springframework.roo.addon.beaninfo.BeanInfoMetadataProviderImpl@13495a6e, org.springframework.roo.addon.configurable.ConfigurableMetadataProviderImpl@1348f42b, org.springframework.roo.addon.dbre.DbreMetadataProviderImpl@1368e98e, org.springframework.roo.addon.dod.DataOnDemandMetadataProvider@134d8930, org.springframework.roo.addon.entity.EntityMetadataProviderImpl@134728a8, org.springframework.roo.addon.entity.IdentifierMetadataProviderImpl@13463ad3, org.springframework.roo.addon.finder.FinderMetadataProvider@13480919, org.springframework.roo.addon.gwt.GwtMetadataProvider@137bdb57, org.springframework.roo.addon.javabean.JavaBeanMetadataProvider@1345ac0f, org.springframework.roo.addon.json.JsonMetadataProvider@13400761, org.springframework.roo.addon.maven.MavenProjectMetadataProvider@136caadc, org.springframework.roo.addon.plural.PluralMetadataProviderImpl@133eeffa, org.springframework.roo.addon.property.editor.EditorMetadataProvider@133e82dd, org.springframework.roo.addon.serializable.SerializableMetadataProviderImpl@133df772, org.springframework.roo.addon.solr.SolrJspMetadataListener@1344b69a, org.springframework.roo.addon.solr.SolrMetadataProvider@134ed00b, org.springframework.roo.addon.solr.SolrWebSearchMetadataProvider@12c64069, org.springframework.roo.addon.test.IntegrationTestMetadataProvider@134455a7, org.springframework.roo.addon.tostring.ToStringMetadataProvider@1344435b, org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadataProviderImpl@1374c356, org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener@12cc9a0e, org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider@1343a38c], validGets = 104625, recursiveGets = 1170, cachePuts = 2258, cacheHits = 48489, cacheMisses = 56136, cacheEvictions = 55002, cacheCurrentSize = 694, cacheMaximumSize = 100000]
Roo exited with code 0
real	4m11.758s
user	5m16.356s
sys	1m29.106s
localhost$
I have a bunch of jstack traces also: I&amp;amp;apos;ve taken a selection of samples during this high CPU startup period. I&amp;amp;apos;ll attach a zip containing 5 traces from the early startup phase (when CPU is 200%), and 5 from the later phase (when CPU is 100%).
If you want stack traces on a different VM, or any other info, let me know. 
Thanks,
Jim</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="D">org.springframework.roo.addon.dbre.DbreTypeResolutionService.java</file>
			<file type="D">org.springframework.roo.addon.dbre.DbreTypeResolutionServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProviderImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1831</link>
		</links>
	</bug>
	<bug id="1836" opendate="2010-12-16 10:19:47" fixdate="2010-12-16 17:27:32" resolution="Fixed">
		<buginformation>
			<summary>Generated application.properties are not sorted</summary>
			<description>Properties in WEB-INF/i18n/application.properties are not sorted, but in the code there is an attempt to sort them with calls such as 
propFileOperations.addPropertyIfNotExists(Path.SRC_MAIN_WEBAPP, "/WEB-INF/i18n/application.properties", "label" + folderName.replace("/", "") + "" + lcViewName, title, true);
where the last parameter, sorted, is true but has no effects.
</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.propfiles.PropFileOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1837" opendate="2010-12-16 13:46:11" fixdate="2010-12-17 02:54:03" resolution="Complete">
		<buginformation>
			<summary>GWT 2.1.1 api changes break addon-gwt code gen</summary>
			<description></description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.MirrorType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileListener.java</file>
			<file type="M">org.springframework.roo.addon.gwt.SharedType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtPath.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.shared.scaffold.UserInformationProxy-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldDesktopApp-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldMobileApp-template.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1839</link>
		</links>
	</bug>
	<bug id="1839" opendate="2010-12-16 20:50:27" fixdate="2010-12-18 07:58:26" resolution="Invalid">
		<buginformation>
			<summary>Refactor the GWT addon to support changes in GWT 2.1.1</summary>
			<description>With the upcoming release of GWT 2.1.1 the addon needs to be updated to support the new release.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Task</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.MirrorType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileListener.java</file>
			<file type="M">org.springframework.roo.addon.gwt.SharedType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtPath.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.shared.scaffold.UserInformationProxy-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldDesktopApp-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldMobileApp-template.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1837</link>
		</links>
	</bug>
	<bug id="1750" opendate="2010-11-19 01:59:13" fixdate="2010-12-19 07:38:20" resolution="Complete">
		<buginformation>
			<summary>GWT managed code: Use ProxyForName and ServiceName annotations instead of ProxyFor</summary>
			<description>Domain classes should be in the server part, and it is not necessary to share them with gwt.
If you use ProxyForName and ServiceName annotations, you could remove these classes from the shared folder and put them in the server side. 
This change allows us to customize Entity.java files with whatever we need in the server side. 
Right now, it isn&amp;amp;apos;t possible this customization unless introducing aspect files, and it is not possible to remove completely the roo dependencies using the eclipse &amp;amp;apos;Refactor -&amp;gt; Push In&amp;amp;apos; ajdt feature.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.RooGwtMirroredFrom.java</file>
		</fixedFiles>
	</bug>
	<bug id="1852" opendate="2010-12-20 01:26:18" fixdate="2010-12-20 03:43:01" resolution="Complete">
		<buginformation>
			<summary>database reverse engineer does not work for table name starts with number</summary>
			<description>if Database has Table name i.e. 1On1_x , database does not reverse engineer it, it only generates the .roo-dbre file and then does not create any entity file.
Attached here is one such .dbre file.
</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseIntrospector.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreTypeResolutionServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1845" opendate="2010-12-17 12:27:37" fixdate="2010-12-23 18:24:55" resolution="Fixed">
		<buginformation>
			<summary>controller all fails because of an existing controller</summary>
			<description>Using Roo 1.1.1 snapshot, I&amp;amp;apos;m getting this exception:
controller scaffold --class ~.web.ChangeUserDataController --entity ~.domain.ChangeUserData --disallowedOperations update,delete
[...]
controller all --package ~.web
SRC_MAIN_JAVA/com/myapp/web/ChangeUserDataController.java already exists
java.lang.IllegalArgumentException: SRC_MAIN_JAVA/com/lbpoker/selfcare/web/ChangeUserDataController.java already exists
    at org.springframework.roo.support.util.Assert.isTrue(Assert.java:65)
    at org.springframework.roo.classpath.operations.ClasspathOperationsImpl.generateClassFile(ClasspathOperationsImpl.java:119)
    at org.springframework.roo.addon.web.mvc.controller.ControllerOperationsImpl.createAutomaticController(ControllerOperationsImpl.java:116)
    at org.springframework.roo.addon.web.mvc.controller.ControllerOperationsImpl.generateAll(ControllerOperationsImpl.java:75)
    at org.springframework.roo.addon.web.mvc.controller.ControllerCommands.generateAll(ControllerCommands.java:52)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)
    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy$1.callback(ProcessManagerHostedExecutionStrategy.java:49)
    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:177)
    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:140)
    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)
    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:165)
    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:358)
    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:132)
    at java.lang.Thread.run(Thread.java:662)
This seems to contradict the documentation...
roo&amp;gt; help controller all
Keyword:                   controller all
Description:               Scaffold a controller for all entities without an existing controlle,</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1897" opendate="2010-12-27 09:03:28" fixdate="2010-12-29 02:37:05" resolution="Duplicate">
		<buginformation>
			<summary>Unknown failure of Roo-Generated MVC app on Google App Enging (GAE)</summary>
			<description>OK first off.  Great job on the latest release of roo.  The GAE integration works so well and really hides the idiosyncracies of GAE from the developer.  It lets me concentrate on what is different about my app not what the different environment needs will be.  That being said, My app does not appear to be working on GAE.
Here is the roo.log
// Spring Roo 1.1.0.RELEASE [rev 793f2b0] log opened at 2010-12-27 10:47:55
project --topLevelPackage net.youngdev.services.global --projectName youngdevservices
persistence setup --provider DATANUCLEUS --database GOOGLE_APP_ENGINE 
entity --class ~.domain.Faq 
field string question
field string answer
field string context
json all
controller all --package ~.controller 
perform eclipse
quit
// Spring Roo 1.1.0.RELEASE [rev 793f2b0] log closed at 2010-12-27 11:00:46
After that, I updated the appengine-web.xml with a version number and a application id for appengine.  
Next, I deployed it to GAE via mvn gae:deploy
When I hit my site, It just sits there.  Eventually, the screen returns but the page is just a blank white page with no style or text.
When I do a view source, I see this:
&amp;lt;html xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:tiles="http://tiles.apache.org/tags-tiles" xmlns:spring="http://www.springframework.org/tags" xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" &amp;gt;  
	&amp;lt;jsp:output doctype-root-element="HTML" doctype-system="about:legacy-compat" /&amp;gt;
	&amp;lt;jsp:directive.page contentType="text/html;charset=UTF-8" /&amp;gt;  
	&amp;lt;head&amp;gt;
		&amp;lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&amp;gt;
		&amp;lt;meta http-equiv="X-UA-Compatible" content="IE=8" /&amp;gt;	
		&amp;lt;util:load-scripts /&amp;gt;
		&amp;lt;spring:message code="application_name" var="app_name"/&amp;gt;
		&amp;lt;title&amp;gt;&amp;lt;spring:message code="welcome_h3" arguments="$
{app_name}
" /&amp;gt;&amp;lt;/title&amp;gt;
	&amp;lt;/head&amp;gt;
  	&amp;lt;body class="tundra spring"&amp;gt;
   		&amp;lt;div id="wrapper"&amp;gt;
		    &amp;lt;tiles:insertAttribute name="header" ignore="true" /&amp;gt;
		    &amp;lt;tiles:insertAttribute name="menu" ignore="true" /&amp;gt;   
		    &amp;lt;div id="main"&amp;gt;
	    		&amp;lt;tiles:insertAttribute name="body"/&amp;gt; 
		    	&amp;lt;tiles:insertAttribute name="footer" ignore="true"/&amp;gt;
		    &amp;lt;/div&amp;gt;
		&amp;lt;/div&amp;gt;
	&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
Any ideas what is wrong here or when it will be fixed?</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1006</link>
		</links>
	</bug>
	<bug id="1905" opendate="2011-01-02 03:18:26" fixdate="2011-01-02 03:24:32" resolution="Complete">
		<buginformation>
			<summary>database.properties and VMforce config.properties files not written out to disk</summary>
			<description>The database.properties and config.properties file in JpaOperationsImpl do not get written out to disk.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1917</link>
			<link type="Relate" description="relates to">1915</link>
			<link type="Relate" description="relates to">1919</link>
			<link type="Relate" description="relates to">1922</link>
		</links>
	</bug>
	<bug id="1888" opendate="2010-12-26 06:01:05" fixdate="2011-01-03 22:00:28" resolution="Fixed">
		<buginformation>
			<summary>Plural error for java.lang.String in MVC scaffold</summary>
			<description>Use "script vote.roo".
Quit Roo
Edit Vote.java, comment out just the line "private Choice choice" (not the @ManyToOne annotation)
Reload Roo, noting error:
                     java.lang.IllegalArgumentException: Could not determine the plural for the &amp;amp;apos;java.lang.String&amp;amp;apos; type
                         at org.springframework.roo.support.util.Assert.notNull(Assert.java:112)
                         at org.springframework.roo.addon.web.mvc.jsp.JspViewManager.getPlural(JspViewManager.java:613)</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="1831" opendate="2010-12-15 02:52:14" fixdate="2011-01-04 01:05:22" resolution="Complete">
		<buginformation>
			<summary>Improve performance of DBRE</summary>
			<description></description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="D">org.springframework.roo.addon.dbre.DbreTypeResolutionService.java</file>
			<file type="D">org.springframework.roo.addon.dbre.DbreTypeResolutionServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProviderImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1781</link>
		</links>
	</bug>
	<bug id="1918" opendate="2011-01-04 03:49:03" fixdate="2011-01-04 04:30:01" resolution="Complete">
		<buginformation>
			<summary>WebScaffoldMetadata should use its MetadataProvider class name to ensure optimal loop detection semantics</summary>
			<description>MemberDetailsScanner uses the passed FQCN string to determine whether to skip a request for a particular metadata provider. It is preferable therefore to present a MetadataProvider&amp;amp;apos;s FQCN if that MetadataProvider caused the MemberDetailsScanner invocation, or one of its helper classes within that MetadataProvider&amp;amp;apos;s control flow caused the invocation. A change to WebScaffoldMetadata is required to reflect this.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1914</link>
			<link type="Duplicate" description="is duplicated by">1899</link>
		</links>
	</bug>
	<bug id="1917" opendate="2011-01-04 03:33:27" fixdate="2011-01-04 04:30:54" resolution="Duplicate">
		<buginformation>
			<summary>JpaOperationsImpl should close OutputStream</summary>
			<description>The OutputStream was not closing, resulting in empty database.properties files.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1905</link>
		</links>
	</bug>
	<bug id="1919" opendate="2011-01-04 07:08:57" fixdate="2011-01-04 07:13:40" resolution="Complete">
		<buginformation>
			<summary>SolrOperations, JpaOperations and LoggingOperations not closing OutputStreams</summary>
			<description>The above are working with java.util.Properties and failing to close the OutputStream after a Properties.write(..).</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.logging.LoggingOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">1940</link>
			<link type="Relate" description="relates to">1922</link>
			<link type="Relate" description="is related to">1915</link>
			<link type="Relate" description="is related to">1905</link>
		</links>
	</bug>
	<bug id="1915" opendate="2011-01-04 02:24:57" fixdate="2011-01-04 07:14:35" resolution="Complete">
		<buginformation>
			<summary>email sender setup no longer works on git master</summary>
			<description>Latest roo master
commit 7732cdf313cb649a12646ac412446a5fc06bb94e
email sender setup --hostServer smtp.gmail.com --username info@test.com --password test --port 465
results in an empty
/src/main/resources/META-INF/spring/email.properties
Using the following script:
project --topLevelPackage org.example
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY 
entity --class ~.Owner
field string --fieldName name --notNull 
entity --class ~.Pet
field string --fieldName name --notNull 
field reference --fieldName owner --type ~.Owner --cardinality MANY_TO_ONE
field set --fieldName pets --class ~.Owner --type ~.Pet --cardinality ONE_TO_MANY 
controller scaffold --class ~.web.OwnerController
controller scaffold --class ~.web.PetController --entity ~.Pet
email sender setup --hostServer smtp.gmail.com --username info@test.com --password test --port 465</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.email.MailOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">1919</link>
			<link type="Relate" description="is related to">1905</link>
		</links>
	</bug>
	<bug id="1914" opendate="2011-01-04 02:21:28" fixdate="2011-01-04 07:16:39" resolution="Duplicate">
		<buginformation>
			<summary>Missing Dependencies in generated Controllers on git master</summary>
			<description>Latest roo master
commit 7732cdf313cb649a12646ac412446a5fc06bb94e
Generated ROO Controllers do not build do to missing dependencies:
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;
import java.io.UnsupportedEncodingException;
Using the following script:
project --topLevelPackage org.example
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY 
entity --class ~.Owner
field string --fieldName name --notNull 
entity --class ~.Pet
field string --fieldName name --notNull 
field reference --fieldName owner --type ~.Owner --cardinality MANY_TO_ONE
field set --fieldName pets --class ~.Owner --type ~.Pet --cardinality ONE_TO_MANY 
controller scaffold --class ~.web.OwnerController
controller scaffold --class ~.web.PetController --entity ~.Pet
Running mvn package on will then not work due to those dependencies used but not imported in
OwnerController_Roo_Controller.aj
and
PetController_Roo_Controller.aj</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1918</link>
			<link type="Duplicate" description="is duplicated by">1899</link>
		</links>
	</bug>
	<bug id="1899" opendate="2010-12-28 16:22:05" fixdate="2011-01-04 07:27:10" resolution="Duplicate">
		<buginformation>
			<summary>missing imports in _Roo_Controller.aj</summary>
			<description>Built the latest roo-1.1.1 from git; (with the new Conversion Service [rev 43c185c]),
now the geneated _Roo_Controller.aj get multiple errors for missing imports in encodeUrlPathSegment:
[code]
import java.io.UnsupportedEncodingException;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;
[\code]
Controllers with addDateTimeFormatPatterns() are also missing
[code]
import org.joda.time.format.DateTimeFormat;
[/code]</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1914</link>
			<link type="Duplicate" description="duplicates">1918</link>
		</links>
	</bug>
	<bug id="1863" opendate="2010-12-22 18:04:01" fixdate="2011-01-04 07:38:42" resolution="Complete">
		<buginformation>
			<summary>Roo chokes on static variables in annotations, even if these annotations are NOT PART of ROO</summary>
			<description>
Adding a non roo annotation. with a final static value inside kills roo code generation.
// The id
@org.codehaus.jackson.annotate.JsonProperty(PROPERTY_UUID)
private String uuid;
</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1734" opendate="2010-11-15 08:37:42" fixdate="2011-01-04 08:15:43" resolution="Complete">
		<buginformation>
			<summary>Type names starting with lowercase should be acceptable to Roo</summary>
			<description>There are valid Java packages not accepted by Roo
For example:

org.gvnix._2009_03_31
Underscores and numbers are valid Java identifiers for package, however Roo throws an error when classes on this package are managed.






java.lang.IllegalArgumentException: The first letter of the type name portion must be uppercase (attempted &amp;amp;apos;org.gvnix._2009_03_31&amp;amp;apos;)




	at org.springframework.roo.model.JavaType.&amp;lt;init&amp;gt;(JavaType.java:120)




	at org.springframework.roo.model.JavaType.&amp;lt;init&amp;gt;(JavaType.java:91)




	at org.springframework.roo.model.JavaType.getEnclosingType(JavaType.java:293)




	at org.springframework.roo.model.JavaType.getPackage(JavaType.java:260)




	at org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.&amp;lt;init&amp;gt;(JavaParserMutableClassOrInterfaceTypeDetails.java:125)




	at org.springframework.roo.classpath.javaparser.JavaParserClassMetadata.&amp;lt;init&amp;gt;(JavaParserClassMetadata.java:70)




	at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.get(JavaParserMetadataProvider.java:146)




	at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:133)




	at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:151)




	at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:209)




	at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:126)




	at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:170)




	at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:262)




	at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:124)




	at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:354)




	at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:327)




	at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:167)




	at org.springframework.roo.process.manager.internal.DefaultProcessManager.backgroundPoll(DefaultProcessManager.java:114)




	at org.springframework.roo.process.manager.internal.DefaultProcessManager.timerBasedPoll(DefaultProcessManager.java:225)




	at org.springframework.roo.process.manager.internal.DefaultProcessManager$2.run(DefaultProcessManager.java:75)




	at java.util.TimerThread.mainLoop(Timer.java:512)




	at java.util.TimerThread.run(Timer.java:462)






There are valid Java types not accepted by Roo
For example:

JAXB data binding library generates a package-info.java class.
Java classes starting with lowercase letter are discouraged but accepted.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
		</fixedFiles>
	</bug>
	<bug id="1686" opendate="2010-11-05 00:28:51" fixdate="2011-01-04 12:32:53" resolution="Complete">
		<buginformation>
			<summary>Roo adds unnecessary imports for inner types</summary>
			<description>When a class refers to an inner type in a method signature, field type, etc., Roo erroneously adds an import for the type, which triggers Eclipse warnings.
Given the following sample class, Roo incorrectly adds "import example.MyEntity.MyEnum;" to MyEntity_Roo_JavaBean.aj:
package example;
@Entity
@RooEntity
@RooToString
@RooJavaBean
public class MyEntity {
    private String myName;
    private MyEnum enumValue;
    public enum MyEnum 
{ VALUE1, VALUE2 }
}</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
		</fixedFiles>
	</bug>
	<bug id="1900" opendate="2010-12-28 16:37:31" fixdate="2011-01-04 13:23:50" resolution="Complete">
		<buginformation>
			<summary>Parsing failure for random java files due to static import resolution failure</summary>
			<description>Several of my "non-roo" utility files now get parsing errors (since upgrading to rev 43c185c)
 .../javaparser/CompilationUnitServices.java        |    3 +
 .../javaparser/JavaParserClassMetadata.java        |   14 +-
 .../javaparser/JavaParserMetadataProvider.java     |    6 +-
 ...vaParserMutableClassOrInterfaceTypeDetails.java |  459 +++++++++--
 .../roo/classpath/javaparser/JavaParserUtils.java  |  210 +++---
 .../details/JavaParserConstructorMetadata.java     |    8 +-
 .../details/JavaParserFieldMetadata.java           |   15 +-
 .../details/JavaParserInnerTypeMetadata.java       |  609 +++++++++++++
 .../details/JavaParserMethodMetadata.java          |   43 +-
 .../roo/classpath/MetadataCommands.java            |   18 +-
Each file fails to parse twice:
:myProject&amp;gt;roo-dev
    ____  ____  ____
   / __ \/ __ \/ __ \
  / /_/ / / / / / / /
 / , _/ // / /_/ /
// ||___/___/    1.1.1.RELEASE [rev 43c185c]
Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.
[FelixDispatchQueue]
 Parsing failure for &amp;amp;apos;C:\Data\Programs\java\myProject\src\main\java\com\myproj\mypkg\util\EmailSender.java&amp;amp;apos; (development mode diagnostics)
                     java.lang.NullPointerException
       at org.springframework.roo.classpath.javaparser.details.JavaParserInnerTypeMetadata.&amp;lt;init&amp;gt;(JavaParserInnerTypeMetadata.java:201)
       at org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.&amp;lt;init&amp;gt;(JavaParserMutableClassOrInterfaceTypeDetails.java:269)
       at org.springframework.roo.classpath.javaparser.JavaParserClassMetadata.&amp;lt;init&amp;gt;(JavaParserClassMetadata.java:69)
       at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.get(JavaParserMetadataProvider.java:160)
       at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
       at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
       at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:179)
       at org.springframework.roo.classpath.TypeLocationServiceImpl.getClassOrInterfaceTypeDetails(TypeLocationServiceImpl.java:137)
       at org.springframework.roo.classpath.TypeLocationServiceImpl.processTypesWithAnnotation(TypeLocationServiceImpl.java:88)
       at org.springframework.roo.classpath.TypeLocationServiceImpl.findClassesOrInterfaceDetailsWithAnnotation(TypeLocationServiceImpl.java:128)
       at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.reverseEngineer(DbreDatabaseListenerImpl.java:98)
       at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.processDatabase(DbreDatabaseListenerImpl.java:90)
       at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.notifyDatabaseRefreshed(DbreDatabaseListenerImpl.java:73)
       at org.springframework.roo.addon.dbre.DbreModelServiceImpl.publishToListeners(DbreModelServiceImpl.java:247)
       at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:206)
       at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:185)
       at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:150)
       at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.getIdentifiers(DbreDatabaseListenerImpl.java:306)
       at org.springframework.roo.addon.entity.AbstractIdentifierServiceAwareMetadataProvider.getIdentifiersForType(AbstractIdentifierServiceAwareMetadataProvider.java:53)
       at org.springframework.roo.addon.entity.EntityMetadataProviderImpl.getMetadata(EntityMetadataProviderImpl.java:83)
       at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:235)
       at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
       at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
       at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:179)
       at org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.getMetadata(DbreMetadataProviderImpl.java:52)
       at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:235)
       at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
       at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
       at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:179)
       at org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.getMemberDetails(MemberDetailsScannerImpl.java:135)
       at org.springframework.roo.addon.beaninfo.BeanInfoMetadataProviderImpl.getMetadata(BeanInfoMetadataProviderImpl.java:34)
       at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:235)
       at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
       at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
       at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:179)
       at org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadataProviderImpl.getMetadata(WebScaffoldMetadataProviderImpl.java:64)
       at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:235)
       at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
       at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
       at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:112)
       at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:199)
       at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:262)
       at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:138)
       at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)
       at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:318)
       at org.springframework.roo.process.manager.internal.DefaultFileManager.notify(DefaultFileManager.java:199)
       at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:276)
       at org.springframework.roo.addon.maven.MavenProjectMetadataProvider.onFileEvent(MavenProjectMetadataProvider.java:778)
       at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)
       at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:318)
       at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:36)
       at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:15)
       at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:177)
       at org.springframework.roo.process.manager.internal.DefaultProcessManager.completeStartup(DefaultProcessManager.java:99)
       at org.springframework.roo.process.manager.internal.DefaultProcessManager$1.frameworkEvent(DefaultProcessManager.java:62)
       at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListenerCallback(EventDispatcher.java:767)
       at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:724)
       at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:942)
       at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)
       at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)
       at java.lang.Thread.run(Thread.java:619)
[FelixDispatchQueue]
 Parsing failure for &amp;amp;apos;C:\Data\Programs\java\myProject\src\main\java\com\myproj\mypkg\util\EmailSender.java&amp;amp;apos; (development mode diagnostics)
                     java.lang.NullPointerException
       at org.springframework.roo.classpath.javaparser.details.JavaParserInnerTypeMetadata.&amp;lt;init&amp;gt;(JavaParserInnerTypeMetadata.java:201)
       at org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.&amp;lt;init&amp;gt;(JavaParserMutableClassOrInterfaceTypeDetails.java:269)
       at org.springframework.roo.classpath.javaparser.JavaParserClassMetadata.&amp;lt;init&amp;gt;(JavaParserClassMetadata.java:69)
       at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.get(JavaParserMetadataProvider.java:160)
       at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
       at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
       at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:179)
       at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:183)
       at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
       at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
       at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:112)
       at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:199)
       at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:262)
       at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:138)
       at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)
       at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:318)
       at org.springframework.roo.process.manager.internal.DefaultFileManager.notify(DefaultFileManager.java:199)
       at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:276)
       at org.springframework.roo.addon.maven.MavenProjectMetadataProvider.onFileEvent(MavenProjectMetadataProvider.java:778)
       at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)
       at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:318)
       at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:36)
       at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:15)
       at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:177)
       at org.springframework.roo.process.manager.internal.DefaultProcessManager.completeStartup(DefaultProcessManager.java:99)
       at org.springframework.roo.process.manager.internal.DefaultProcessManager$1.frameworkEvent(DefaultProcessManager.java:62)
       at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListenerCallback(EventDispatcher.java:767)
       at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:724)
       at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:942)
       at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)
       at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)
       at java.lang.Thread.run(Thread.java:619)
</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserClassOrInterfaceTypeDetails.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">1834</link>
		</links>
	</bug>
	<bug id="1903" opendate="2010-12-31 14:22:16" fixdate="2011-01-04 22:28:42" resolution="Fixed">
		<buginformation>
			<summary>Selenium test does not work when jetty is used as web container</summary>
			<description>I have created selenium test cases for application created using Spring Roo and when I am trying to run those tests against jetty container tests fails. But the same test works with tomcat. I launch jetty and tomcat using maven plugins</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1694" opendate="2010-11-05 20:36:16" fixdate="2011-01-05 00:33:14" resolution="Complete">
		<buginformation>
			<summary>Roo aborts AJ processing without explanation</summary>
			<description>When Roo encounters a JPA @Id field that does not have a public setter, it complains on the shell.  (This is questionable behavior itself, since the ID field may be managed some "magic" way, as in the case of a Hibernate foreign-key ID generator.)
It appears that encountering this situation causes Roo to abort processing and creating/managing AJ files, but Roo provides no indication of this fact; it merely fails silently because of an apparently unrelated issue.  Instead, if for some reason of internal plumbing Roo really can&amp;amp;apos;t continue, it should inform the user.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">1923</link>
			<link type="Relate" description="is related to">1704</link>
		</links>
	</bug>
	<bug id="1840" opendate="2010-12-17 01:10:53" fixdate="2011-01-05 01:28:02" resolution="Fixed">
		<buginformation>
			<summary>View is wrong</summary>
			<description>roo&amp;gt;
persistence setup --database MYSQL --provider HIBERNATE
entity --class ~.model.Produttore --testAutomatically
field string --fieldName nome
entity --class ~.model.Articolo --testAutomatically
field reference --fieldName produttore --type ~.model.Produttore  
field string --fieldName nome
controller scaffold --class ~.business.ProduttoreController --entity ~.model.Produttore --path /produttore
controller scaffold --class ~.business.ArticoloController --entity ~.model.Articolo --path /articolo

On left menu the links to create new entry are correct.
ex.
http://localhost:8080/Magazzino/produttore?form
http://localhost:8080/Magazzino/articolo?form
But inside articolo form (when produttore&amp;amp;apos;s table is empty), the link to create new produttore is wrong
It&amp;amp;apos;s 
http://localhost:8080/Magazzino/produttores?form
THK</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="1906" opendate="2011-01-02 07:36:55" fixdate="2011-01-05 06:24:01" resolution="Complete">
		<buginformation>
			<summary>Impossible to generate a GWT app when sources are in the package &amp;apos;shared&amp;apos; or &amp;apos;server&amp;apos;</summary>
			<description>Hi,
I&amp;amp;apos;m pretty surprised with the implementation of GWT : the main blocking point is that I&amp;amp;apos;m obliged to declare my entities in the [B]client[/B] package : if I declare them on the server package, there are dependencies that are hard coded on the entities (instead of the entities proxies). Trying to resolve the problem by making the entities in the &amp;amp;apos;shared&amp;amp;apos; package makes the command &amp;amp;apos;gwt setup&amp;amp;apos; rollback after a &amp;amp;apos;String index out of range: -1&amp;amp;apos; mysterious error. 
This is really a blocking design issue since I can&amp;amp;apos;t use the GAE core types like com.google.appengine.api.datastore.Text in my entities for example;</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1867" opendate="2010-12-23 09:36:25" fixdate="2011-01-05 07:19:16" resolution="Complete">
		<buginformation>
			<summary>creating a field named "owner" generates runtime exception</summary>
			<description>When running the following attached script in roo we get an exception when trying to add an Entry
Changing the field name from owner to something else will prevent the error</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1927" opendate="2011-01-05 08:27:00" fixdate="2011-01-05 08:30:06" resolution="Complete">
		<buginformation>
			<summary>pluginRepository elements are being added to a pom.xml file as repository elements</summary>
			<description>When a pluginRepository is added to the pom.xml instead of being added as a pluginRepository under pluginRepositories it is add as a repository under pluginRepositories.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.ProjectMetadata.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="M">org.springframework.roo.project.ProjectOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="1711" opendate="2010-11-08 03:55:23" fixdate="2011-01-05 10:09:36" resolution="Complete">
		<buginformation>
			<summary>"Perform tests" problem using app engine datastore.</summary>
			<description>Add a project, setup the database using the "persistence setup --provider DATANUCLEUS --database GOOGLE_APP_ENGINE" command, an entity, a field and a controller. 
The "perform tests" command produces this error, which is also reported by other forum members(please check the forum post):
-------------------------------------------------------
  T E S T S
 -------------------------------------------------------
 Running org.firstats.web.domain.CategoryIntegrationTest
 2010-11-07 18:10:55,583 [main] ERROR DataNucleus.Transaction - Opera
tion rollback failed on resource: org.datanucleus.store.appengine.DatastoreXARes
ource@e63606, error code UNKNOWN and transaction: [DataNucleus Transaction, ID=Xid=    enlisted resources=[org.datanucleus.store.appengine.DatastoreXAResource@18ed77a]]
 2010-11-07 18:14:58,383 [main] ERROR DataNucleus.Transaction - Opera
tion rollback failed on resource: org.datanucleus.store.appengine.DatastoreXARes
ource@15af049, error code UNKNOWN and transaction: [DataNucleus Transaction, ID=Xid=   enlisted resources=[org.datanucleus.store.appengine.DatastoreXAResource@15af049]]
 Tests run: 9, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 6.5
8 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
 Results :
 Tests in error:
   testCountCategorys(org.firstats.web.domain.CategoryIntegrationTes
)
 Tests run: 9, Failures: 0, Errors: 1, Skipped: 0
 [INFO] ------------------------------------------------------------
-----------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------
-----------
[INFO] There are test failures.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="depends on">941</link>
		</links>
	</bug>
	<bug id="1929" opendate="2011-01-05 11:47:00" fixdate="2011-01-05 20:21:00" resolution="Complete">
		<buginformation>
			<summary>Specifying "--database DB2400" on the pers s command and pressing tab changes DB2400 to DB2</summary>
			<description>While performing the command "pers s --database DB2400" if I tab to get the provider option, Roo changes DB2400 to DB2.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2005</link>
		</links>
	</bug>
	<bug id="1041" opendate="2010-06-28 10:54:36" fixdate="2011-01-06 14:24:30" resolution="Complete">
		<buginformation>
			<summary>Roo Spring MVC scaffolding support for JPA custom primary keys</summary>
			<description>Controller scaffolding from this Entity with a primary key of type string currently results in a






javax.el.PropertyNotFoundException: Property &amp;amp;apos;id&amp;amp;apos; not found on type dk.prispiraten.domain.TSecurityquestion




	at javax.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:193)




	at javax.el.BeanELResolver$BeanProperties.access$400(BeanELResolver.java:170)




	at javax.el.BeanELResolver.property(BeanELResolver.java:279)




	at javax.el.BeanELResolver.getValue(BeanELResolver.java:60)




	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:54)




	at org.apache.el.parser.AstValue.getValue(AstValue.java:123)




	at org.apache.el.parser.AstDynamicExpression.getValue(AstDynamicExpression.java:42)




	at org.apache.el.parser.AstCompositeExpression.getValue(AstCompositeExpression.java:47)




	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:186)




	at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:935)




	at org.apache.jsp.tag.web.form.fields.table_tagx._jspx_meth_spring_005furl_005f0(table_tagx.java:811)






where the actual property should be &amp;amp;apos;securityquestionId&amp;amp;apos; for the entity listing page</description>
			<version>1.1.0.M2</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1071</link>
		</links>
	</bug>
	<bug id="1934" opendate="2011-01-06 06:24:23" fixdate="2011-01-06 14:40:28" resolution="Complete">
		<buginformation>
			<summary>Todays git fails with the MySQL JDBC driver</summary>
			<description>Hi guys,
On my current roo 1.1.0 project, if I fire up roo-dev pulled from git today, I get the following errors, seems to come from a null pointer exception and leading to the mysql jdbc driver not being found
[Thread-2] [org.springframework.roo.addon.dbre [11]] ServiceEvent REGISTERED
roo&amp;gt; java.lang.IllegalStateException: java.lang.NullPointerException
	at org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.readDatabaseStructureFromInputStream(DatabaseXmlUtils.java:280)
	at org.springframework.roo.addon.dbre.DbreModelServiceImpl.deserializeDatabaseMetadataIfPossible(DbreModelServiceImpl.java:307)
	at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:201)
	at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:185)
	at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:150)
	at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.getIdentifiers(DbreDatabaseListenerImpl.java:306)
	at org.springframework.roo.addon.entity.AbstractIdentifierServiceAwareMetadataProvider.getIdentifiersForType(AbstractIdentifierServiceAwareMetadataProvider.java:53)
	at org.springframework.roo.addon.entity.EntityMetadataProviderImpl.getMetadata(EntityMetadataProviderImpl.java:87)
	at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:266)
	at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
	at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
	at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:179)
	at org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.getMetadata(DbreMetadataProviderImpl.java:52)
	at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:266)
	at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
	at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
	at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:143)
	at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:199)
	at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:262)
	at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:141)
	at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)
	at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:318)
	at org.springframework.roo.process.manager.internal.DefaultFileManager.notify(DefaultFileManager.java:199)
	at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:276)
	at org.springframework.roo.addon.maven.MavenProjectMetadataProvider.onFileEvent(MavenProjectMetadataProvider.java:220)
	at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)
	at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:318)
	at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:36)
	at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:15)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:177)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.completeStartup(DefaultProcessManager.java:99)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager$1.frameworkEvent(DefaultProcessManager.java:62)
	at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListenerCallback(EventDispatcher.java:767)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:724)
	at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:942)
	at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)
	at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.NullPointerException
	at org.springframework.roo.addon.dbre.model.DatabaseContentHandler.getColumn(DatabaseContentHandler.java:115)
	at org.springframework.roo.addon.dbre.model.DatabaseContentHandler.startElement(DatabaseContentHandler.java:46)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:501)
	at com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:179)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1343)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2755)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1205)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:522)
	at javax.xml.parsers.SAXParser.parse(SAXParser.java:395)
	at javax.xml.parsers.SAXParser.parse(SAXParser.java:198)
	at org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.readDatabaseStructureFromInputStream(DatabaseXmlUtils.java:275)
	... 37 more
[FelixDispatchQueue] Downloaded 0% of roobot.xml.zip
[FelixDispatchQueue] Downloaded 100% of roobot.xml.zip
[FelixDispatchQueue] Located add-on that may offer this JDBC driver
[FelixDispatchQueue] 1 found, sorted by rank; T = trusted developer; R = Roo 1.1 compatible
[FelixDispatchQueue] ID T R DESCRIPTION -------------------------------------------------------------
[FelixDispatchQueue] 01 Y Y 5.1.13.0001 #jdbcdriver driverclass:com.mysql.jdbc.Driver. This...
[FelixDispatchQueue] --------------------------------------------------------------------------------
[FelixDispatchQueue] [HINT] use &amp;amp;apos;addon info TAB&amp;amp;apos; to see details about a bundle
[FelixDispatchQueue] [HINT] use &amp;amp;apos;addon install TAB&amp;amp;apos; to install a specific bundle
[FelixDispatchQueue] JDBC driver not available for &amp;amp;apos;com.mysql.jdbc.Driver&amp;amp;apos;
                     java.lang.IllegalArgumentException: JDBC driver not available for &amp;amp;apos;com.mysql.jdbc.Driver&amp;amp;apos;
                         at org.springframework.roo.support.util.Assert.notNull(Assert.java:112)
                         at org.springframework.roo.addon.dbre.jdbc.ConnectionProviderImpl.getConnection(ConnectionProviderImpl.java:41)
                         at org.springframework.roo.addon.dbre.jdbc.ConnectionProviderImpl.getConnection(ConnectionProviderImpl.java:53)
                         at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getConnection(DbreModelServiceImpl.java:317)
                         at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:214)
                         at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:185)
                         at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:150)
                         at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.getIdentifiers(DbreDatabaseListenerImpl.java:306)
                         at org.springframework.roo.addon.entity.AbstractIdentifierServiceAwareMetadataProvider.getIdentifiersForType(AbstractIdentifierServiceAwareMetadataProvider.java:53)
                         at org.springframework.roo.addon.entity.EntityMetadataProviderImpl.getMetadata(EntityMetadataProviderImpl.java:87)
                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:266)
                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
                         at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
                         at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:179)
                         at org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.getMetadata(DbreMetadataProviderImpl.java:52)
                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:266)
                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
                         at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:143)
                         at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:199)
                         at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:262)
                         at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:141)
                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)
                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:318)
                         at org.springframework.roo.process.manager.internal.DefaultFileManager.notify(DefaultFileManager.java:199)
                         at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:276)
                         at org.springframework.roo.addon.maven.MavenProjectMetadataProvider.onFileEvent(MavenProjectMetadataProvider.java:220)
                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)
                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:318)
                         at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:36)
                         at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:15)
                         at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:177)
                         at org.springframework.roo.process.manager.internal.DefaultProcessManager.completeStartup(DefaultProcessManager.java:99)
                         at org.springframework.roo.process.manager.internal.DefaultProcessManager$1.frameworkEvent(DefaultProcessManager.java:62)
                         at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListenerCallback(EventDispatcher.java:767)
                         at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:724)
                         at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:942)
                         at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)
                         at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)
                         at java.lang.Thread.run(Thread.java:680)
roo&amp;gt; java.lang.IllegalStateException: java.lang.NullPointerException
	at org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.readDatabaseStructureFromInputStream(DatabaseXmlUtils.java:280)
	at org.springframework.roo.addon.dbre.DbreModelServiceImpl.deserializeDatabaseMetadataIfPossible(DbreModelServiceImpl.java:307)
	at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:201)
	at org.springframework.roo.addon.dbre.DbreModelServiceImpl.considerStartup(DbreModelServiceImpl.java:86)
	at org.springframework.roo.addon.dbre.DbreModelServiceImpl.onProcessManagerStatusChange(DbreModelServiceImpl.java:78)
	at org.springframework.roo.process.manager.event.AbstractProcessManagerStatusPublisher.setProcessManagerStatus(AbstractProcessManagerStatusPublisher.java:52)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.completeStartup(DefaultProcessManager.java:103)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager$1.frameworkEvent(DefaultProcessManager.java:62)
	at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListenerCallback(EventDispatcher.java:767)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:724)
	at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:942)
	at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)
	at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.NullPointerException
	at org.springframework.roo.addon.dbre.model.DatabaseContentHandler.getColumn(DatabaseContentHandler.java:115)
	at org.springframework.roo.addon.dbre.model.DatabaseContentHandler.startElement(DatabaseContentHandler.java:46)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:501)
	at com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:179)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1343)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2755)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1205)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:522)
	at javax.xml.parsers.SAXParser.parse(SAXParser.java:395)
	at javax.xml.parsers.SAXParser.parse(SAXParser.java:198)
	at org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.readDatabaseStructureFromInputStream(DatabaseXmlUtils.java:275)
	... 13 more
[FelixDispatchQueue] Located add-on that may offer this JDBC driver
[FelixDispatchQueue] 1 found, sorted by rank; T = trusted developer; R = Roo 1.1 compatible
[FelixDispatchQueue] ID T R DESCRIPTION -------------------------------------------------------------
[FelixDispatchQueue] 01 Y Y 5.1.13.0001 #jdbcdriver driverclass:com.mysql.jdbc.Driver. This...
[FelixDispatchQueue] --------------------------------------------------------------------------------
[FelixDispatchQueue] [HINT] use &amp;amp;apos;addon info TAB&amp;amp;apos; to see details about a bundle
[FelixDispatchQueue] [HINT] use &amp;amp;apos;addon install TAB&amp;amp;apos; to install a specific bundle
roo&amp;gt; ERROR: EventDispatcher: Error during dispatch. (java.lang.IllegalStateException: java.lang.IllegalArgumentException: JDBC driver not available for &amp;amp;apos;com.mysql.jdbc.Driver&amp;amp;apos;)
java.lang.IllegalStateException: java.lang.IllegalArgumentException: JDBC driver not available for &amp;amp;apos;com.mysql.jdbc.Driver&amp;amp;apos;
	at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:237)
	at org.springframework.roo.addon.dbre.DbreModelServiceImpl.considerStartup(DbreModelServiceImpl.java:86)
	at org.springframework.roo.addon.dbre.DbreModelServiceImpl.onProcessManagerStatusChange(DbreModelServiceImpl.java:78)
	at org.springframework.roo.process.manager.event.AbstractProcessManagerStatusPublisher.setProcessManagerStatus(AbstractProcessManagerStatusPublisher.java:52)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.completeStartup(DefaultProcessManager.java:103)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager$1.frameworkEvent(DefaultProcessManager.java:62)
	at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListenerCallback(EventDispatcher.java:767)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:724)
	at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:942)
	at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)
	at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.IllegalArgumentException: JDBC driver not available for &amp;amp;apos;com.mysql.jdbc.Driver&amp;amp;apos;
	at org.springframework.roo.support.util.Assert.notNull(Assert.java:112)
	at org.springframework.roo.addon.dbre.jdbc.ConnectionProviderImpl.getConnection(ConnectionProviderImpl.java:41)
	at org.springframework.roo.addon.dbre.jdbc.ConnectionProviderImpl.getConnection(ConnectionProviderImpl.java:53)
	at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getConnection(DbreModelServiceImpl.java:317)
	at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:214)
	... 11 more
[Thread-2] [org.apache.felix.framework [0]] FrameworkEvent STARTLEVEL CHANGED
I can also recreate this with a new project:
project --topLevelPackage tld.tempproject
persistence setup --provider OPENJPA --database MYSQL --userName temp --password pass --databaseName tempproject --hostName 10.0.1.4
database reverse engineer --package ~.domain --schema schema
gives
Located add-on that may offer this JDBC driver
1 found, sorted by rank; T = trusted developer; R = Roo 1.1 compatible
ID T R DESCRIPTION -------------------------------------------------------------
01 Y Y 5.1.13.0001 #jdbcdriver driverclass:com.mysql.jdbc.Driver. This...
--------------------------------------------------------------------------------
[HINT] use &amp;amp;apos;addon info TAB&amp;amp;apos; to see details about a bundle
[HINT] use &amp;amp;apos;addon install TAB&amp;amp;apos; to install a specific bundle
JDBC driver not available for &amp;amp;apos;com.mysql.jdbc.Driver&amp;amp;apos;
java.lang.IllegalArgumentException: JDBC driver not available for &amp;amp;apos;com.mysql.jdbc.Driver&amp;amp;apos;
    at org.springframework.roo.support.util.Assert.notNull(Assert.java:112)
    at org.springframework.roo.addon.dbre.jdbc.ConnectionProviderImpl.getConnection(ConnectionProviderImpl.java:41)
    at org.springframework.roo.addon.dbre.jdbc.ConnectionProviderImpl.getConnection(ConnectionProviderImpl.java:53)
    at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getConnection(DbreModelServiceImpl.java:317)
    at org.springframework.roo.addon.dbre.DbreModelServiceImpl.getDatabase(DbreModelServiceImpl.java:214)
    at org.springframework.roo.addon.dbre.DbreModelServiceImpl.refreshDatabase(DbreModelServiceImpl.java:155)
    at org.springframework.roo.addon.dbre.DbreOperationsImpl.reverseEngineerDatabase(DbreOperationsImpl.java:77)
    at org.springframework.roo.addon.dbre.DbreCommands.serializeDatabaseMetadata(DbreCommands.java:50)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)
    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy$1.callback(ProcessManagerHostedExecutionStrategy.java:49)
    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:177)
    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:140)
    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)
    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:165)
    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:358)
    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:132)
    at java.lang.Thread.run(Thread.java:680)
What&amp;amp;apos;s going on? Is MySQL no longer supported?</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseContentHandler.java</file>
		</fixedFiles>
	</bug>
	<bug id="1940" opendate="2011-01-06 23:32:25" fixdate="2011-01-06 23:34:23" resolution="Complete">
		<buginformation>
			<summary>"persistence setup" command causes log4j.properties to be truncated</summary>
			<description>This works:
project com.foo.bar
logging setup --level DEBUG
This doesn&amp;amp;apos;t:
project com.foo.bar
persistence setup --provider HIBERNATE --database HYPERSONIC_PERSISTENT
logging setup --level DEBUG</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">1919</link>
		</links>
	</bug>
	<bug id="1928" opendate="2011-01-05 10:11:37" fixdate="2011-01-07 00:52:11" resolution="Complete">
		<buginformation>
			<summary>Annotations are rejected if they contain binary expressions which refer to a named reference</summary>
			<description>refined from ROO-1900; upgrade to Roo-1.1.1 creates new failure:
The problem is caused by &amp;amp;apos;complex&amp;amp;apos; String literal, as used in RequestMapping
   static final String URLPATH="myService";
   @RequestMapping("/"+URLPATH)
To reproduce: 
&amp;gt; cd rootest
&amp;gt; roo-dev
roo&amp;gt; project --topLevelPackage mypkg
Then save this file in rootest/src/main/java/mypkg/MyService.java
package mypkg;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
public interface MyService {
    final static String URLPATH = "myService";
    @Controller
    @RequestMapping("/"+URLPATH)
    public static class Cont implements MyService {}
}
[Timer-0] Parsing failure for &amp;amp;apos;C:\Data\Programs\java\rootest\src\main\java\mypkg\MyService.java&amp;amp;apos; (development mode diagnostics)
          java.lang.IllegalArgumentException: Object of class [japa.parser.ast.expr.NameExpr] must be an instance of class japa.parser.ast.expr.StringLiteralExpr
              at org.springframework.roo.support.util.Assert.isInstanceOf(Assert.java:337)
              at org.springframework.roo.support.util.Assert.isInstanceOf(Assert.java:319)
              at org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.convert(JavaParserAnnotationMetadata.java:159)
              at org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.&amp;lt;init&amp;gt;(JavaParserAnnotationMetadata.java:98)
              at org.springframework.roo.classpath.javaparser.JavaParserClassOrInterfaceTypeDetails.&amp;lt;init&amp;gt;(JavaParserClassOrInterfaceTypeDetails.java:258)
              at org.springframework.roo.classpath.javaparser.JavaParserClassOrInterfaceTypeDetails.&amp;lt;init&amp;gt;(JavaParserClassOrInterfaceTypeDetails.java:297)
              at org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.&amp;lt;init&amp;gt;(JavaParserMutableClassOrInterfaceTypeDetails.java:55)
              at org.springframework.roo.classpath.javaparser.JavaParserClassMetadata.&amp;lt;init&amp;gt;(JavaParserClassMetadata.java:69)
              at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.get(JavaParserMetadataProvider.java:163)
              at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
              at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
              at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:179)
              at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:183)
              at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
              at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
              at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:112)
              at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:199)
              at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:262)
              at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:141)
              at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)
              at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:318)
              at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:175)
              at org.springframework.roo.process.manager.internal.DefaultProcessManager.backgroundPoll(DefaultProcessManager.java:122)
              at org.springframework.roo.process.manager.internal.DefaultProcessManager.timerBasedPoll(DefaultProcessManager.java:233)
              at org.springframework.roo.process.manager.internal.DefaultProcessManager$2.run(DefaultProcessManager.java:75)
              at java.util.TimerThread.mainLoop(Timer.java:512)
              at java.util.TimerThread.run(Timer.java:462)
roo&amp;gt;
Possible Workaround:
    static final String URLPATH="myService";
    static final String URLPATH2="/"+URLPATH;
    @RequestMapping(URLPATH2)
... amazingly parse shows no error for this computed string:
    @RequestMapping("/"+"myService")
</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1938" opendate="2011-01-06 22:04:18" fixdate="2011-01-07 03:59:50" resolution="Complete">
		<buginformation>
			<summary>Roo "quit" commands given random shutdown exceptions</summary>
			<description>Sometimes Roo commands are ignored by the shell.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.process.manager.event.ProcessManagerStatus.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManager.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultProcessManager.java</file>
			<file type="M">org.springframework.roo.shell.ExecutionStrategy.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.java</file>
			<file type="M">org.springframework.roo.shell.AbstractShell.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">2270</link>
			<link type="Relate" description="is related to">1037</link>
		</links>
	</bug>
	<bug id="1946" opendate="2011-01-07 14:18:38" fixdate="2011-01-09 15:03:00" resolution="Fixed">
		<buginformation>
			<summary>NPE in WebScaffoldMetadata.getDatePatterns</summary>
			<description>scaffold generation fails for DBRE generated domain objects.
The first object that contains a Date field, fails when the show.jspx is generated.
Something about the date patterns is failing:






 roo&amp;gt; controller all --package ~.admin




...




Created SRC_MAIN_WEBAPP\WEB-INF\views\members




7a89f73 Created SRC_MAIN_WEBAPP\WEB-INF\views\members\list.jspx




e37ac40 Created SRC_MAIN_WEBAPP\WEB-INF\views\members\views.xml




45ddfe6 Created SRC_MAIN_WEBAPP\WEB-INF\views\members\show.jspx




cebd76a Updated SRC_MAIN_WEBAPP\WEB-INF\views\members\views.xml




java.lang.NullPointerException




    at org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.getDatePatterns(WebScaffoldMetadata.java:1231)




    at org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.&amp;lt;init&amp;gt;(WebScaffoldMetadata.java:107)




    at org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadataProviderImpl.getMetadata(WebScaffoldMetadataProviderImpl.java:86)




    at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:266)




    at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)




    at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




    at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:179)




    at org.springframework.roo.addon.web.mvc.jsp.JspViewManager.getPathForType(JspViewManager.java:533)




    at org.springframework.roo.addon.web.mvc.jsp.JspViewManager.createFieldsForCreateAndUpdate(JspViewManager.java:446)




    at org.springframework.roo.addon.web.mvc.jsp.JspViewManager.getCreateDocument(JspViewManager.java:253)




    at org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.get(JspMetadataListener.java:175)




    at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)




    at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




    at org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.notify(JspMetadataListener.java:352)




    at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:199)




    at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:262)




    at org.springframework.roo.metadata.AbstractHashCodeTrackingMetadataNotifier.notifyIfRequired(AbstractHashCodeTrackingMetadataNotifier.java:52)




    at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:313)




    at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)




    at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




    at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:179)




    at org.springframework.roo.addon.web.mvc.jsp.JspViewManager.getPathForType(JspViewManager.java:533)




    at org.springframework.roo.addon.web.mvc.jsp.JspViewManager.createFieldsForCreateAndUpdate(JspViewManager.java:446)




    at org.springframework.roo.addon.web.mvc.jsp.JspViewManager.getCreateDocument(JspViewManager.java:253)




    at org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.get(JspMetadataListener.java:175)




    at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)




    at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




    at org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.notify(JspMetadataListener.java:352)




    at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:199)




    at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:262)




    at org.springframework.roo.metadata.AbstractHashCodeTrackingMetadataNotifier.notifyIfRequired(AbstractHashCodeTrackingMetadataNotifier.java:52)




    at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:313)




    at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)




    at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




    at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:143)




    at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:199)




    at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:262)




    at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:141)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanNotified(PollingFileMonitorService.java:217)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:187)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:141)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)




    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:165)




    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:358)




    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:132)




    at java.lang.Thread.run(Thread.java:619)





</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2035</link>
		</links>
	</bug>
	<bug id="1952" opendate="2011-01-09 16:18:28" fixdate="2011-01-09 16:20:17" resolution="Fixed">
		<buginformation>
			<summary>NPE in WebScaffoldMetadata &amp; JspViewManager when version field is removed</summary>
			<description>When removing a version field from a scaffolded entity with versionField="" WebScaffoldMetadata &amp;amp; JspViewManager throw an exception because FinderMetadata is null.
This can be resolved by moving the finder MD lookup to WebScaffoldMetadataProviderImpl and JspViewManager respectively.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="1977" opendate="2011-01-13 01:21:41" fixdate="2011-01-13 01:27:07" resolution="Complete">
		<buginformation>
			<summary>Intermittent Process Manager lock-ups</summary>
			<description>People loading Roo are intermittently experience lock-ups where Roo reports it is "still loading". This is similar to ROO-1974, although the problem can be reproduced with zero files in the current working directory. As such I am logging it as a separate bug, so we can address the specifics in ROO-1974 separately.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.jline.osgi.JLineShellComponent.java</file>
			<file type="M">org.springframework.roo.process.manager.event.ProcessManagerStatus.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManager.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultProcessManager.java</file>
			<file type="M">org.springframework.roo.bootstrap.Main.java</file>
			<file type="M">org.springframework.roo.shell.ExitShellRequest.java</file>
			<file type="M">org.springframework.roo.shell.jline.JLineShell.java</file>
			<file type="M">org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.java</file>
			<file type="M">org.springframework.roo.metadata.DefaultMetadataLogger.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">1974</link>
		</links>
	</bug>
	<bug id="1976" opendate="2011-01-12 19:40:26" fixdate="2011-01-13 13:39:44" resolution="Complete">
		<buginformation>
			<summary>toString() method of Column class in DBRE causes stack overflow if called </summary>
			<description>A circular reference to the table object in the toString() method causes a stack overflow exception when called.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.Column.java</file>
		</fixedFiles>
	</bug>
	<bug id="1988" opendate="2011-01-16 03:15:34" fixdate="2011-01-16 13:00:42" resolution="Complete">
		<buginformation>
			<summary>Dependency should not use JavaSymbolName for artifactId</summary>
			<description>Currently, Dependency.java uses JavaSymbolName for the type of the artifactId. This is unnecessary as artifact ids are typically not class or package types like the groupId. It also prevents the dash ("-") character being added as an invalid character for class and package names.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.Dependency.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.ProjectOperations.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">1990</link>
		</links>
	</bug>
	<bug id="1990" opendate="2011-01-16 13:07:45" fixdate="2011-01-16 14:15:23" resolution="Complete">
		<buginformation>
			<summary>Dependency should not use JavaPackage for groupId</summary>
			<description>The groupId field of the Dependency class uses JavaPackage for its type. Maven groupIds can be specified such that they are not valid Java package names. For example commons-logging is a valid groupId but is not a valid Java package name as it contains a dash. This prevents the dash character to be added to the list of illegal characters in the check for valid package names in JavaSymbolName. This change will make groupId a String with some checks to ensure the XML remains well-formed and also add the dash character to JavaPackage as it should.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.model.JavaPackage.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadata.java</file>
			<file type="M">org.springframework.roo.model.JavaSymbolName.java</file>
			<file type="M">org.springframework.roo.project.Dependency.java</file>
			<file type="M">org.springframework.roo.addon.maven.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.Plugin.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="M">org.springframework.roo.project.ProjectOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">1988</link>
			<link type="Relate" description="relates to">1671</link>
		</links>
	</bug>
	<bug id="1966" opendate="2011-01-11 06:21:09" fixdate="2011-01-16 15:52:31" resolution="Complete">
		<buginformation>
			<summary>roo controller add: NullPointerException in org.springframework.roo.addon.web.mvc.jsp.JspViewManager</summary>
			<description>I&amp;amp;apos;m trying to scaffold controllers in a test roo project, however,






roo&amp;gt; controller all --package ~.server.web




[...]




NullPointerException at org.springframework.roo.addon.web.mvc.jsp.JspViewManager.addCommonAttributes(JspViewManager.java:560)






Perhaps this is related to ROO-1419.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="1982" opendate="2011-01-13 22:06:59" fixdate="2011-01-16 17:40:43" resolution="Complete">
		<buginformation>
			<summary>UnsupportedOperationException with composite primary key</summary>
			<description>The database reverse enginnering works fine for the entity named &amp;amp;apos;SystemCapacity&amp;amp;apos;; but when I try to generate a controller for it, I get the UnsupportedOperationException.
&amp;lt;Roo output, version 1.1.2.SNAPSHOT&amp;gt;
...
Created SRC_MAIN_WEBAPP\WEB-INF\views\systemcapacitys
e510d36 Created SRC_MAIN_WEBAPP\WEB-INF\views\systemcapacitys\list.jspx
07429f8 Created SRC_MAIN_WEBAPP\WEB-INF\views\systemcapacitys\views.xml
b5c08ac Created SRC_MAIN_WEBAPP\WEB-INF\views\systemcapacitys\show.jspx
a262103 Updated SRC_MAIN_WEBAPP\WEB-INF\views\systemcapacitys\views.xml
java.lang.UnsupportedOperationException
at java.util.Collections$UnmodifiableCollection.add(C ollections.java:1018)
at org.springframework.roo.addon.web.mvc.jsp.JspViewM anager.getCreateDocument(JspViewManager.java:245)
at org.springframework.roo.addon.web.mvc.jsp.JspMetad ataListener.get(JspMetadataListener.java:175)
at org.springframework.roo.metadata.DefaultMetadataSe rvice.getInternal(DefaultMetadataService.java:148)
at org.springframework.roo.metadata.DefaultMetadataSe rvice.get(DefaultMetadataService.java:82)
at org.springframework.roo.addon.web.mvc.jsp.JspMetad ataListener.notify(JspMetadataListener.java:353)
Looking at the code at (JspViewManager.java:245) shows that it is indeed trying to add to an UnmodifiableCollection.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">1973</link>
		</links>
	</bug>
	<bug id="2011" opendate="2011-01-19 13:50:08" fixdate="2011-01-19 19:48:09" resolution="Fixed">
		<buginformation>
			<summary>Roo generated controller contains compile errors for Entity called Request</summary>
			<description>An entity called Request creates a controller aspect that has compile errors.






RequestController_Roo_Controller






@RequestMapping(method = RequestMethod.PUT)




public String RequestController.update(@Valid Request request, BindingResult result, Model model, HttpServletRequest request) {




    if (result.hasErrors()) {




        model.addAttribute("request", request);




        return "requests/update";




    }




    request.merge();




    return "redirect:/requests/" + encodeUrlPathSegment(request.getRequestId().toString(), request);




}












Compile errors






error at public String RequestController.create(@Valid Request request, BindingResult result, Model model, HttpServletRequest request) {




                                                                                                                     ^^




/Users/SunSear/NetBeansProjects/RAD/roo/src/main/java/eu/comparegroup/radpims/web/RequestController_Roo_Controller.aj:31:0::0 Duplicate parameter request




error at request.persist();




        




/Users/SunSear/NetBeansProjects/RAD/roo/src/main/java/eu/comparegroup/radpims/web/RequestController_Roo_Controller.aj:36:0::0 The method persist() is undefined for the type HttpServletRequest




error at return "redirect:/requests/" + encodeUrlPathSegment(request.getRequestId().toString(), request);




                                                            ^^^




/Users/SunSear/NetBeansProjects/RAD/roo/src/main/java/eu/comparegroup/radpims/web/RequestController_Roo_Controller.aj:37:0::0 The method getRequestId() is undefined for the type HttpServletRequest




error at public String RequestController.update(@Valid Request request, BindingResult result, Model model, HttpServletRequest request) {




                                                                                                                     ^^




/Users/SunSear/NetBeansProjects/RAD/roo/src/main/java/eu/comparegroup/radpims/web/RequestController_Roo_Controller.aj:67:0::0 Duplicate parameter request




error at request.merge();




        




/Users/SunSear/NetBeansProjects/RAD/roo/src/main/java/eu/comparegroup/radpims/web/RequestController_Roo_Controller.aj:72:0::0 The method merge() is undefined for the type HttpServletRequest




error at return "redirect:/requests/" + encodeUrlPathSegment(request.getRequestId().toString(), request);




                                                            ^^^




/Users/SunSear/NetBeansProjects/RAD/roo/src/main/java/eu/comparegroup/radpims/web/RequestController_Roo_Controller.aj:73:0::0 The method getRequestId() is undefined for the type HttpServletRequest





</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2012" opendate="2011-01-19 19:44:20" fixdate="2011-01-19 19:51:11" resolution="Complete">
		<buginformation>
			<summary>Roo shell throws exception when an entity is created without a "." in the name if entity was previously created with the same command and then manually deleted</summary>
			<description>If an entity was created initially with entity --class Foo (without a period (".") in the name, and then is deleted from the file system, the same command executed again will throw an exception because the JavaType created is not valid.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.converters.JavaTypeConverter.java</file>
		</fixedFiles>
	</bug>
	<bug id="1223" opendate="2010-08-17 00:42:25" fixdate="2011-01-19 20:27:35" resolution="Duplicate">
		<buginformation>
			<summary>Addon that allows the user to create constructors</summary>
			<description>
empty constructors
ones setting all fields and/or selected fields

</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperations.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperationsImpl.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">266</link>
			<link type="Related" description="is related to">622</link>
		</links>
	</bug>
	<bug id="2025" opendate="2011-01-21 11:52:56" fixdate="2011-01-23 15:30:26" resolution="Complete">
		<buginformation>
			<summary>The redirect from delete operation has duplicated parameters (size and page)</summary>
			<description>The delete method in the controller generated by Roo has a problem: it generates a redirect with duplicate size and page parameterss. E.g. /pets?page=1&amp;amp;size=10&amp;amp;page=1&amp;amp;size=10
The generated code is:
        model.addAttribute("page", (page == null) ? "1" : page.toString());
        model.addAttribute("size", (size == null) ? "10" : size.toString());
        return "redirect:/pets?page=" + ((page == null) ? "1" : page.toString()) + "&amp;amp;size=" + ((size == null) ? "10" : size.toString());
A solution is to return "redirect:/pets", like list method.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2035" opendate="2011-01-25 12:40:04" fixdate="2011-01-25 13:52:27" resolution="Duplicate">
		<buginformation>
			<summary>DBRE NullPointerException getting DatePatterns during "controller all --package ~.web"</summary>
			<description>After database reverse engineer;
(from roo.log)
database reverse engineer --includeTables "mytable1 mytable2 ... mytable12" --testAutomatically  --package org.xxx.mypackage.domain --schema myschema
perform tests
// [failed] controller all --package ~.web
NullPointerException at org.springframework.roo.addon.web.mvc.controller.WebScaf
foldMetadata.getDatePatterns(WebScaffoldMetadata.java:1231)</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1946</link>
		</links>
	</bug>
	<bug id="2041" opendate="2011-01-27 16:25:31" fixdate="2011-01-27 16:28:09" resolution="Complete">
		<buginformation>
			<summary>List of DeclaredFieldAnnotationDetails passed to addFieldAnnotation method of ItdTypeDetailsBuilder incorrectly uses List.contains() to check for presented annotation</summary>
			<description>The method addFieldAnnotation of ItdTypeDetails checks for the existence of an annotation using the java.util.List contains method. This will not work as the objects compared will never be equal. The solution is to use MemberFindingUtils.getAnnotationOfType(..) instead. </description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.details.ItdTypeDetailsBuilder.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="is depended on by">2029</link>
		</links>
	</bug>
	<bug id="2040" opendate="2011-01-27 04:29:42" fixdate="2011-01-29 03:39:26" resolution="Complete">
		<buginformation>
			<summary>database reverse engineer doesn&amp;apos;t create all artefacts</summary>
			<description>We have a database with 4 tables and 2 views.
Command below:






database reverse engineer --schema public --package ~.domain 




  --testAutomatically --enableViews 






creates the 1st table (alphabetic order) found.
Then, by exiting and executing Roo again, other artefacts related to the other tables.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2053" opendate="2011-01-30 16:40:35" fixdate="2011-01-30 18:23:47" resolution="Complete">
		<buginformation>
			<summary>DataOnDemand incorrectly expects a DoD type for enum fields</summary>
			<description>Reproduce with roo-dev script clinic.roo; mvn clean test:






[ERROR] Failed to execute goal




org.codehaus.mojo:aspectj-maven-plugin:1.0:test-compile (default) on




project petclinic: Compiler errors :




[ERROR] error at import




com.springsource.petclinic.reference.PetTypeDataOnDemand;




[ERROR] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^




[ERROR]




/tmp/rootest/src/test/java/com/springsource/petclinic/domain/PetDataOnDemand_Roo_DataOnDemand.aj:8:0::0




The import com.springsource.petclinic.reference.PetTypeDataOnDemand




cannot be resolved




[ERROR] error at private PetTypeDataOnDemand




PetDataOnDemand.petTypeDataOnDemand;




[ERROR] ^^^^^^^^^^^^^^




[ERROR]




/tmp/rootest/src/test/java/com/springsource/petclinic/domain/PetDataOnDemand_Roo_DataOnDemand.aj:26:0::0




PetTypeDataOnDemand cannot be resolved to a type




[ERROR] error at obj.setType(petTypeDataOnDemand.getRandomPetType());




[ERROR] ^^^^^^^^^^




[ERROR]




/tmp/rootest/src/test/java/com/springsource/petclinic/domain/PetDataOnDemand_Roo_DataOnDemand.aj:34:0::0




petTypeDataOnDemand cannot be resolved




[ERROR] error at import




com.springsource.petclinic.reference.SpecialtyDataOnDemand;




[ERROR] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^




[ERROR]




/tmp/rootest/src/test/java/com/springsource/petclinic/domain/VetDataOnDemand_Roo_DataOnDemand.aj:7:0::0




The import com.springsource.petclinic.reference.SpecialtyDataOnDemand




cannot be resolved




[ERROR] error at private SpecialtyDataOnDemand




VetDataOnDemand.specialtyDataOnDemand;




[ERROR] ^^^^^^^^^^^^^^^^




[ERROR]




/tmp/rootest/src/test/java/com/springsource/petclinic/domain/VetDataOnDemand_Roo_DataOnDemand.aj:22:0::0




SpecialtyDataOnDemand cannot be resolved to a type




[ERROR] error at




obj.setSpecialty(specialtyDataOnDemand.getRandomSpecialty());




[ERROR] ^^^^^^^^^^^^




[ERROR]




/tmp/rootest/src/test/java/com/springsource/petclinic/domain/VetDataOnDemand_Roo_DataOnDemand.aj:59:0::0




specialtyDataOnDemand cannot be resolved




[ERROR] -&amp;gt; [Help 1]




[ERROR]





</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="8" opendate="2009-05-13 17:26:49" fixdate="2011-02-02 14:20:27" resolution="Complete">
		<buginformation>
			<summary>Review templating approach to be more flexible and allow better custom branding of generated applications</summary>
			<description>The generated view artifacts do currently allow for customization of the generated application via CSS, the header.jsp and the footer.jsp but there are some opportunities to simplify end-user branding.</description>
			<version>1.0.0.A2</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperations.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.JspOperations.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.menu.MenuOperations.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspDocumentHelper.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspRoundTripper.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.DojoUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebScaffoldMetadata.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspUtils.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperations.java</file>
			<file type="M">org.springframework.roo.addon.mvc.jsp.TilesOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperations.java</file>
			<file type="D">org.springframework.roo.addon.mvc.jsp.JspMenuHelper.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="is depended on by">139</link>
			<link type="Depends" description="is depended on by">131</link>
			<link type="Duplicate" description="is duplicated by">553</link>
			<link type="Related" description="is related to">38</link>
			<link type="Related" description="is related to">168</link>
			<link type="Related" description="is related to">552</link>
			<link type="Related" description="is related to">176</link>
			<link type="Related" description="is related to">612</link>
		</links>
	</bug>
	<bug id="2063" opendate="2011-02-01 15:13:57" fixdate="2011-02-03 22:38:17" resolution="Complete">
		<buginformation>
			<summary>field of Abstract type in class covered by Roo Integration Tests causes invalid DataOnDemand.aj</summary>
			<description>Here is script to reproduce
project --topLevelPackage com.dod
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY 
entity --class Base --abstract
field string --fieldName blah
// [failed] test integration --entity ~.Base 
// ^ This is an expected result, can&amp;amp;apos;t create an integration test for an abstract entity.
entity --class ~.Suspect
field reference --type ~.Base --fieldName base
test integration --entity ~.Suspect
// ^ Integration test is created fine, but it won&amp;amp;apos;t compile.  Having a field on an entity that is an 
// abstract class is perfectly legal.
perform tests
Result:
[ERROR] Failed to execute goal org.codehaus.mojo:aspectj-maven-plugin:1.0:test-compile (default) on project dod: Compiler errors :
[ERROR] error at import com.dod.BaseDataOnDemand;
[ERROR] ^^^^^^^^^^^^^^^^^^^^^^^
[ERROR] C:\springsource\workspace-sts-2.5.0.RELEASE\dodtest\src\test\java\com\dod\SuspectDataOnDemand_Roo_DataOnDemand.aj:6:0::0 The import
com.dod.BaseDataOnDemand cannot be resolved
[ERROR] error at private BaseDataOnDemand SuspectDataOnDemand.baseDataOnDemand;
[ERROR] ^^^^^^^^^^^
[ERROR] C:\springsource\workspace-sts-2.5.0.RELEASE\dodtest\src\test\java\com\dod\SuspectDataOnDemand_Roo_DataOnDemand.aj:22:0::0 BaseDataOn
Demand cannot be resolved to a type
[ERROR] error at obj.setBase(baseDataOnDemand.getRandomBase());
[ERROR] ^^^^^^^
[ERROR] C:\springsource\workspace-sts-2.5.0.RELEASE\dodtest\src\test\java\com\dod\SuspectDataOnDemand_Roo_DataOnDemand.aj:26:0::0 baseDataOn
Demand cannot be resolved
The SuspectDataOnDemand_Roo_DataOnDemand class has been created with this line:
 @Autowired
    private BaseDataOnDemand SuspectDataOnDemand.baseDataOnDemand;
but since Base.java is an abstract class, it isn&amp;amp;apos;t a canditate for test integration, and there is no BaseDataOnDemand.java.
Not sure if this is by design, but I can&amp;amp;apos;t see any reason why a BaseDataOnDemand shouldn&amp;amp;apos;t be created, after all Base.java has a field that needs a value for testing purposes, even if Base itself can&amp;amp;apos;t be tested in isolation</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="1857" opendate="2010-12-21 00:32:29" fixdate="2011-02-04 03:02:51" resolution="Duplicate">
		<buginformation>
			<summary>Integration test is failing for @EmbeddedId field</summary>
			<description>1. Create a table with composite primary key, having two fields with none of the field is having any auto generated value.
2. Reverse engineer with "database reverse engineer"
3. Create integration test by "Test Integration" (Ideally there should be option in database reverse engineer to create test also ).
4. test by running as Junit.
Second test case failing with org.springframework.orm.jpa.JpaSystemException: org.hibernate.id.IdentifierGenerationException: null id generated for:class .....</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.dod.EmbeddedIdentifierHolder.java</file>
			<file type="M">org.springframework.roo.model.JavaSymbolName.java</file>
			<file type="D">org.springframework.roo.addon.dod.EmbeddedHolder.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1994</link>
			<link type="Supersede" description="is superseded by">2070</link>
		</links>
	</bug>
	<bug id="2050" opendate="2011-01-29 20:19:48" fixdate="2011-02-06 02:18:31" resolution="Complete">
		<buginformation>
			<summary>Advanced add-on doesn&amp;apos;t build</summary>
			<description>Advanced add-on doesn&amp;amp;apos;t build. I created it using the command "addon create advanced".
The class AddonOperationsImpl uses undefined PhysicalTypeMetadata API. See line 78.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.creator.CreatorOperations.java</file>
			<file type="M">org.springframework.roo.addon.creator.CreatorOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.creator.CreatorCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="1983" opendate="2011-01-14 09:14:05" fixdate="2011-02-06 14:57:52" resolution="Complete">
		<buginformation>
			<summary>JavaBeanMetadata creates an AspectJ file with an "Employee" type</summary>
			<description>In certain cases, Roo may generate an AspectJ file implementing the JavaBean properties that contains a hard-coded "Employee" type.  See the referenced forum posting for details and script file that can be used to duplicate the issue.
Attached is what I assume is the fix, a one-liner patch file.  I haven&amp;amp;apos;t built the source to confirm this yet, but will do so and update this afterwards.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2114</link>
			<link type="Relate" description="relates to">2078</link>
		</links>
	</bug>
	<bug id="2078" opendate="2011-02-06 15:33:39" fixdate="2011-02-06 15:38:12" resolution="Complete">
		<buginformation>
			<summary>JavaBeanMetadata does not consider collections of entities for GAE</summary>
			<description>A regression that causes collections of @RooEntity&amp;amp;apos;s being overlooked for GAE.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">1983</link>
		</links>
	</bug>
	<bug id="1770" opendate="2010-11-25 07:28:01" fixdate="2011-02-06 21:19:57" resolution="Complete">
		<buginformation>
			<summary>ConcurrentModificationException in project creation with IBM JDK</summary>
			<description>I am trying to create a new Spring Roo Project using STS by invoking File-&amp;gt;New-&amp;gt;Spring Roo Project. The wizard fails and closes so I cannot see the error. The created project does not have any source folders (and applicationContext.xml as a result) or a pom.xml file. Bu the Roo Shell is accessible in STS. Invoking "project --topLevelPackage com.test" reveals the error as this:
ConcurrentModificationException at java.util.HashMap$AbstractMapIterator.checkConcurrentMod(HashMap.java:122)
which is followed by this error:
NullPointerException at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:78)
The log.roo file does not contain much but it is attached anyway. If I use Sun JDK (1.6.0.22) the wizard works well and Roo creates the project as intended.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.file.monitor.polling.PollingFileMonitorService.java</file>
		</fixedFiles>
	</bug>
	<bug id="2082" opendate="2011-02-07 00:36:42" fixdate="2011-02-07 01:44:44" resolution="Duplicate">
		<buginformation>
			<summary>Composite primary support by MVC scaffolding</summary>
			<description>Add composite primary keys support for MVC scaffolding and integration tests.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
			<file type="D">org.springframework.roo.addon.dod.EmbeddedIdentifierMetadataHolder.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.entity.RooIdentifier.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseContentHandler.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperationsImpl.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.CustomDataPersistenceTags.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1999</link>
			<link type="Duplicate" description="duplicates">2070</link>
		</links>
	</bug>
	<bug id="2034" opendate="2011-01-24 22:44:40" fixdate="2011-02-07 21:51:52" resolution="Complete">
		<buginformation>
			<summary>perform command --mavenCommand gae:deploy fails if no username/password in settings.xml</summary>
			<description>gae:deploy fails because maven prompts for username/passwords for GAE deployment and the prompt doesn&amp;amp;apos;t appear in spring roo console. It appears to get stucked in the "Initiating update" step when in fact it prompts for gae email/password.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="2096" opendate="2011-02-09 11:40:12" fixdate="2011-02-09 11:41:25" resolution="Complete">
		<buginformation>
			<summary>Minor help error displayed after &amp;apos;download privacy level&amp;apos; command is used</summary>
			<description>roo&amp;gt; download privacy level --privacyLevel DISABLE_UAA
UAA privacy level updated Tue Feb 08 11:08:25 CET 2011 (use &amp;amp;apos;uaa view&amp;amp;apos; to view the new data)
roo&amp;gt; uaa view
Command &amp;amp;apos;uaa view&amp;amp;apos; not found (for assistance press TAB or type "hint" then hit ENTER)
addon search --requiresCommand "uaa view" found no matches
roo&amp;gt;</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.uaa.UaaCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="2104" opendate="2011-02-10 06:52:51" fixdate="2011-02-10 15:31:48" resolution="Fixed">
		<buginformation>
			<summary>Invested in the @RequestMapping get and post methods</summary>
			<description>Invested in the @ RequestMapping get and post methods to create a controller with the command "controller class - class ~. web.FooController"
**log.roo**
project --topLevelPackage com.example --java 6 --projectName testBug
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY
controller class --class ~.web.FooController
perform command --mavenCommand compile
perform command --mavenCommand tomcat:run
**log.roo**
**FooController.java**
@RequestMapping("/foo/**")
@Controller
public class FooController {
    @RequestMapping(method = RequestMethod.POST, value = "
{id}
") &amp;lt;======this line should go in the post method
    public void get(ModelMap modelMap, HttpServletRequest request, HttpServletResponse response) {
    }
    public void post(@PathVariable Long id, ModelMap modelMap, HttpServletRequest request, 
                              HttpServletRequest request, HttpServletResponse response) {
    }
    @RequestMapping
    public String index() 
{
        return "foo/index";
    }
}
**FooController.java**</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2018" opendate="2011-01-20 07:19:54" fixdate="2011-02-12 04:22:45" resolution="Complete">
		<buginformation>
			<summary>Roo 1.1.1 does not support inheritanceType TABLE_PER_CLASS with GWT 2.1.1</summary>
			<description>hi 
1. SINGLE_TABLE
2. TABLE_PER_CLASS
3. MAPPED_SUPERCLASS
4.JOINED
Out of the list above it appears that SINGLE_TABLE, JOINED and MAPPED_SUPERCLASS work (see scripts @ http://forum.springsource.org/showthread.php?t=101118) but TABLE_PER_CLASS does not.
TABLE_PER_CLASS doesn&amp;amp;apos;t work
project --topLevelPackage com.example
persistence setup --provider HIBERNATE --database MYSQL
database properties set --key database.username --value root
database properties set --key database.password --value pwd
database properties set --key database.url --value jdbc:mysql://localhost:3306/inheritance_table_per_class
entity --class ~.server.domain.Shape --abstract --inheritanceType TABLE_PER_CLASS
entity --class ~.server.domain.Square --extends ~.server.domain.Shape --testAutomatically
entity --class ~.server.domain.Circle --extends ~.server.domain.Shape --testAutomatically
field number --fieldName area --type java.lang.Double --class ~.server.domain.Shape
field number --fieldName volume --type java.lang.Double --class ~.server.domain.Shape
gwt setup
this is the error message that I&amp;amp;apos;m getting, so I guess its not support in GWT because of union subclass joins. Could someone shed some light on this please
[INFO] at org.springframework.beans.factory.support.BeanDefi nitionValueResolver.resolveReference(BeanDefinitio nValueResolver.java:328)
[INFO] at org.springframework.beans.factory.support.BeanDefi nitionValueResolver.resolveValueIfNecessary(BeanDe finitionValueResolver.java:106)
[INFO] at org.springframework.beans.factory.support.Abstract AutowireCapableBeanFactory.applyPropertyValues(Abs tractAutowireCapableBeanFactory.java:1325)
[INFO] at org.springframework.beans.factory.support.Abstract AutowireCapableBeanFactory.populateBean(AbstractAu towireCapableBeanFactory.java:1086)
[INFO] at org.springframework.beans.factory.support.Abstract AutowireCapableBeanFactory.doCreateBean(AbstractAu towireCapableBeanFactory.java:517)
[INFO] at org.springframework.beans.factory.support.Abstract AutowireCapableBeanFactory.createBean(AbstractAuto wireCapableBeanFactory.java:456)
[INFO] at org.springframework.beans.factory.support.Abstract BeanFactory$1.getObject(AbstractBeanFactory.java:2 91)
[INFO] at org.springframework.beans.factory.support.DefaultS ingletonBeanRegistry.getSingleton(DefaultSingleton BeanRegistry.java:222)
[INFO] at org.springframework.beans.factory.support.Abstract BeanFactory.doGetBean(AbstractBeanFactory.java:288 )
[INFO] at org.springframework.beans.factory.support.Abstract BeanFactory.getBean(AbstractBeanFactory.java:190)
[INFO] at org.springframework.beans.factory.support.DefaultL istableBeanFactory.preInstantiateSingletons(Defaul tListableBeanFactory.java:580)
[INFO] at org.springframework.context.support.AbstractApplic ationContext.finishBeanFactoryInitialization(Abstr actApplicationContext.java:895)
[INFO] at org.springframework.context.support.AbstractApplic ationContext.refresh(AbstractApplicationContext.ja va:425)
[INFO] at org.springframework.web.context.ContextLoader.crea teWebApplicationContext(ContextLoader.java:276)
[INFO] at org.springframework.web.context.ContextLoader.init WebApplicationContext(ContextLoader.java:197)
[INFO] at org.springframework.web.context.ContextLoaderListe ner.contextInitialized(ContextLoaderListener.java: 47)
[INFO] at org.mortbay.jetty.handler.ContextHandler.startCont ext(ContextHandler.java:543)
[INFO] at org.mortbay.jetty.servlet.Context.startContext(Con text.java:136)
[INFO] at org.mortbay.jetty.webapp.WebAppContext.startContex t(WebAppContext.java:1220)
[INFO] at org.mortbay.jetty.handler.ContextHandler.doStart(C ontextHandler.java:513)
[INFO] at org.mortbay.jetty.webapp.WebAppContext.doStart(Web AppContext.java:448)
[INFO] at com.google.gwt.dev.shell.jetty.JettyLauncher$WebAp pContextWithReload.doStart(JettyLauncher.java:447)
[INFO] at org.mortbay.component.AbstractLifeCycle.start(Abst ractLifeCycle.java:39)
[INFO] at org.mortbay.jetty.handler.HandlerWrapper.doStart(H andlerWrapper.java:130)
[INFO] at org.mortbay.jetty.handler.RequestLogHandler.doStar t(RequestLogHandler.java:115)
[INFO] at org.mortbay.component.AbstractLifeCycle.start(Abst ractLifeCycle.java:39)
[INFO] at org.mortbay.jetty.handler.HandlerWrapper.doStart(H andlerWrapper.java:130)
[INFO] at org.mortbay.jetty.Server.doStart(Server.java:222)
[INFO] at org.mortbay.component.AbstractLifeCycle.start(Abst ractLifeCycle.java:39)
[INFO] at com.google.gwt.dev.shell.jetty.JettyLauncher.start (JettyLauncher.java:542)
[INFO] at com.google.gwt.dev.DevMode.doStartUpServer(DevMode .java:431)
[INFO] at com.google.gwt.dev.DevModeBase.startUp(DevModeBase .java:1053)
[INFO] at com.google.gwt.dev.DevModeBase.run(DevModeBase.jav a:795)
[INFO] at com.google.gwt.dev.DevMode.main(DevMode.java:282)
[INFO] Caused by: org.springframework.beans.factory.BeanCreationExce ption: Error creating bean with name &amp;amp;apos;entityManagerFactory&amp;amp;apos; defined in file [C:\springsource\Spring-Roo\spring-roo-1.
1.1.RELEASE\samples\inheritance_TABLE_PER_CLASS\ta rget\example-0.1.0.BUILD-SNAPSHOT\WEB-INF\classes\META-INF\spring\applicationContext.xml]: Invocation of init method failed; nested exc
eption is javax.persistence.PersistenceException: [PersistenceUnit: persistenceUnit] Unable to build EntityManagerFactory
[INFO] at org.springframework.beans.factory.support.Abstract AutowireCapableBeanFactory.initializeBean(Abstract AutowireCapableBeanFactory.java:1420)
[INFO] at org.springframework.beans.factory.support.Abstract AutowireCapableBeanFactory.doCreateBean(AbstractAu towireCapableBeanFactory.java:519)
[INFO] at org.springframework.beans.factory.support.Abstract AutowireCapableBeanFactory.createBean(AbstractAuto wireCapableBeanFactory.java:456)
[INFO] at org.springframework.beans.factory.support.Abstract BeanFactory$1.getObject(AbstractBeanFactory.java:2 91)
[INFO] at org.springframework.beans.factory.support.DefaultS ingletonBeanRegistry.getSingleton(DefaultSingleton BeanRegistry.java:222)
[INFO] at org.springframework.beans.factory.support.Abstract BeanFactory.doGetBean(AbstractBeanFactory.java:288 )
[INFO] at org.springframework.beans.factory.support.Abstract BeanFactory.getBean(AbstractBeanFactory.java:190)
[INFO] at org.springframework.beans.factory.support.BeanDefi nitionValueResolver.resolveReference(BeanDefinitio nValueResolver.java:322)
[INFO] ... 33 more
[INFO] Caused by: javax.persistence.PersistenceException: [PersistenceUnit: persistenceUnit] Unable to build EntityManagerFactory
[INFO] at org.hibernate.ejb.Ejb3Configuration.buildEntityMan agerFactory(Ejb3Configuration.java:911)
[INFO] at org.hibernate.ejb.HibernatePersistence.createConta inerEntityManagerFactory(HibernatePersistence.java :74)
[INFO] at org.springframework.orm.jpa.LocalContainerEntityMa nagerFactoryBean.createNativeEntityManagerFactory( LocalContainerEntityManagerFactoryBean.java:225)
[INFO] at org.springframework.orm.jpa.AbstractEntityManagerF actoryBean.afterPropertiesSet(AbstractEntityManage rFactoryBean.java:308)
[INFO] at org.springframework.beans.factory.support.Abstract AutowireCapableBeanFactory.invokeInitMethods(Abstr actAutowireCapableBeanFactory.java:1477)
[INFO] at org.springframework.beans.factory.support.Abstract AutowireCapableBeanFactory.initializeBean(Abstract AutowireCapableBeanFactory.java:1417)
[INFO] ... 40 more
[INFO] Caused by: org.hibernate.MappingException: Cannot use identity column key generation with &amp;lt;union-subclass&amp;gt; mapping for: com.example.server.domain.Shape
[INFO] at org.hibernate.persister.entity.UnionSubclassEntity Persister.&amp;lt;init&amp;gt;(UnionSubclassEntityPersister.java :90)
[INFO] at org.hibernate.persister.PersisterFactory.createCla ssPersister(PersisterFactory.java:90)
[INFO] at org.hibernate.impl.SessionFactoryImpl.&amp;lt;init&amp;gt;(Sessi onFactoryImpl.java:284)
[INFO] at org.hibernate.cfg.Configuration.buildSessionFactor y(Configuration.java:1842)
[INFO] at org.hibernate.ejb.Ejb3Configuration.buildEntityMan agerFactory(Ejb3Configuration.java:902)
[INFO] ... 45 more
Edit/Delete Message</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManagerImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtUtils.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplatingService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplatingServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1381" opendate="2010-09-09 22:19:44" fixdate="2011-02-12 18:55:46" resolution="Duplicate">
		<buginformation>
			<summary>ProjectMetadata should be able handle snapshot=true for repositories</summary>
			<description></description>
			<version>1.1.0.M3</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenProjectMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2110</link>
		</links>
	</bug>
	<bug id="2110" opendate="2011-02-12 12:08:10" fixdate="2011-02-12 18:56:54" resolution="Complete">
		<buginformation>
			<summary>Maven addon should intepret enableSnapshot attribute when adding a repository to pom.xml</summary>
			<description>The Repository class provides the enableSnapshot field.
Consider an addon which wants to add a repository to pom.xml based on information within addon&amp;amp;apos;s configuration.xml. The Repository object is created with the help of XmlUtils and takes all attributes including enableSnapshot. But when it comes to adding the repository to project&amp;amp;apos;s pom.xml, the enableSnapshot attribute is omitted.
Causing implementation is in MavenProjectMetadataProvider#createRepositoryElement(Document document, Repository repository, String path)
Expectation:
someRepository : Repository

id   : string = "sample.id"
name : string = "sample.repo"
url  : string = "http://com.example.repo"
enableSnapshots : boolean = "true"

results in pom entry:
&amp;lt;repository&amp;gt;
  &amp;lt;id&amp;gt;sample.id&amp;lt;/id&amp;gt;
  &amp;lt;name&amp;gt;sample.repo&amp;lt;/name&amp;gt;
  &amp;lt;url&amp;gt;http://com.example.repo&amp;lt;/url&amp;gt;
  &amp;lt;snapshots&amp;gt;
    &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;
  &amp;lt;/snapshots&amp;gt;
&amp;lt;/repository&amp;gt;</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.maven.MavenProjectMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1381</link>
		</links>
	</bug>
	<bug id="2108" opendate="2011-02-11 02:22:37" fixdate="2011-02-13 17:46:31" resolution="Fixed">
		<buginformation>
			<summary>MVC doesn&amp;apos;t generate views for finders</summary>
			<description>Addon MVC is not generating views for finders.
To reproduce try the attached clinic.roo file</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="2085" opendate="2011-02-07 04:59:15" fixdate="2011-02-13 18:01:19" resolution="Complete">
		<buginformation>
			<summary>Broken link for famfamfam_flag_icons.zip</summary>
			<description>As explained on the forum, there is a broken link to http://www.famfamfam.com/lab/icons/flags/famfamfam_flag_icons.zip
This file is needed by the command "addon create i18n"
I found the file elsewhere, downloaded it and specified the path on my local file-system using "--flagGraphic" parameter :
addon create i18n --locale fr --messageBundle ../messages_fr.properties --topLevelPackage com.google.code.fr --flagGraphic r:\famfamfam_flag_icons.zip
I suggest to put the attached "famfamfam_flag_icons.zip" file directly on a Spring Roo server.
Regards,</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.creator.CreatorOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="1954" opendate="2011-01-09 16:27:01" fixdate="2011-02-14 15:35:51" resolution="Fixed">
		<buginformation>
			<summary>update.jspx does not get updated when a version field is removed from the scaffolded form backing object</summary>
			<description>To reproduce run clinic.roo (leave shell running) and remove the versionField from Visit.java (in a separate shell) - notice that update.jspx is not modified as it should. As a workaround this can be fixed by restarting the Roo shell on the project.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">1953</link>
		</links>
	</bug>
	<bug id="2114" opendate="2011-02-13 18:34:02" fixdate="2011-02-14 22:36:08" resolution="Duplicate">
		<buginformation>
			<summary>Incorrect generated code in one of the ITD&amp;apos;s</summary>
			<description>I have been reading through the Spring Roo in Action book and trying out the example using the latest STS release. I have run the following commands
project --topLevelPackage rooinaction --projectName roogwt --java 6
persistence setup --provider DATANUCLEUS --database GOOGLE_APP_ENGINE 
entity --class ~.server.domain.Task --testAutomatically 
entity --class ~.server.domain.Project --testAutomatically 
focus --class ~.server.domain.Task
field string --fieldName description
field number --fieldName priority --type java.lang.Integer
field boolean --fieldName completed
field date --fieldName dateCreated --type java.util.Date --dateFormat SHORT 
field date --fieldName dateDue --type java.util.Date --dateFormat SHORT 
field date --fieldName dateComplete --type java.util.Date --dateFormat SHORT 
focus --class ~.server.domain.Project
field string --fieldName projectName
field set --fieldName tasks --type ~.server.domain.Task --cardinality ONE_TO_MANY --mappedBy project
I get the following errors in Project_Roo_JavaBean.aj (I have included the generated code below)
// Error: Annotation removal does not allow values to be specified for the annotation (compiler limitation)
  declare @field: * Project.tasks: -@OneToMany(cascade = CascadeType.ALL, mappedBy = "project");
// Type mismatch, cannot convert from Task to Employee
        for (Employee entity : tasks) {
Interestingly Employee has come from somewhere. This is a brand new STS install STS 2.5.2 Release e3.6.1
The code for Project_Roo_JavaBean.aj
// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).
package rooinaction.server.domain;
import com.google.appengine.api.datastore.Key;
import com.google.appengine.api.datastore.KeyFactory;
import java.lang.String;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.OneToMany;
import javax.persistence.Transient;
import rooinaction.server.domain.Task;
privileged aspect Project_Roo_JavaBean {
    declare @field: * Project.tasks: -@OneToMany(cascade = CascadeType.ALL, mappedBy = "project");
    declare @field: * Project.tasks: @Transient;
    private Set&amp;lt;Key&amp;gt; Project.tasksKeys = new HashSet&amp;lt;Key&amp;gt;();
    public String Project.getProjectName() 
{
        return this.projectName;
    }

    public void Project.setProjectName(String projectName) 
{
        this.projectName = projectName;
    }

    public Set&amp;lt;Task&amp;gt; Project.getTasks() {
        Set&amp;lt;rooinaction.server.domain.Task&amp;gt; localTasks = new HashSet&amp;lt;rooinaction.server.domain.Task&amp;gt;();
        for (Key key : tasksKeys) {
            rooinaction.server.domain.Task entity = Task.findTask(key.getId());
            if (entity != null) 
{
                localTasks.add(entity);
            }
        }
        this.tasks = localTasks;
        return localTasks;
    }
    public void Project.setTasks(Set&amp;lt;Task&amp;gt; tasks) {
        Set&amp;lt;rooinaction.server.domain.Task&amp;gt; localTasks = new HashSet&amp;lt;rooinaction.server.domain.Task&amp;gt;();
        List&amp;lt;Long&amp;gt; longIds = new ArrayList&amp;lt;Long&amp;gt;();
        for (Key key : tasksKeys) {
            if (!longIds.contains(key.getId())) 
{
                longIds.add(key.getId());
            }
        }
        for (Employee entity : tasks) {
            if (!longIds.contains(entity.getId())) 
{
                longIds.add(entity.getId());
                tasksKeys.add(KeyFactory.createKey(Task.class.getName(), entity.getId()));
            }
            localTasks.add(entity);
        }
        this.tasks = localTasks;
    }
}
</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1983</link>
			<link type="Duplicate" description="duplicates">2029</link>
		</links>
	</bug>
	<bug id="2005" opendate="2011-01-18 16:21:17" fixdate="2011-02-14 23:14:33" resolution="Complete">
		<buginformation>
			<summary>Tab complete doesn&amp;apos;t work for JPA_TIMESTAMP</summary>
			<description>For some reason, tab completion works on JPA_TIME but not JPA_TIMESTAMP. The following will happen:
field date...  --persistenceType JPA_TI&amp;lt;TAB&amp;gt;
JPA_TIME          JPA_TIMESTAMP
field date...  --persistenceType JPA_TIMEST&amp;lt;TAB&amp;gt;
field date...  --persistenceType JPA_TIME (here it deleted the "ST" off the end instead of completing the option)
JPA_TIME          JPA_TIMESTAMP
</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1929</link>
		</links>
	</bug>
	<bug id="2102" opendate="2011-02-10 00:50:04" fixdate="2011-02-16 01:11:51" resolution="Complete">
		<buginformation>
			<summary>Help is showed two times</summary>
			<description>Usign help for a given command shows the help two times.
Run roo, and execute help finder list, you will see:






Keyword:                   finder list




Description:               List all finders for a given target (must be an entity




 Keyword:                  class




   Help:                   The controller or entity for which the finders are generated




   Mandatory:              false




   Default if specified:   &amp;amp;apos;__NULL__&amp;amp;apos;




   Default if unspecified: &amp;amp;apos;*&amp;amp;apos;









 Keyword:                  ** default **




 Keyword:                  depth




   Help:                   The depth of attribute combinations to be generated for the finders




   Mandatory:              false




   Default if specified:   &amp;amp;apos;1&amp;amp;apos;




   Default if unspecified: &amp;amp;apos;1&amp;amp;apos;









 Keyword:                  filter




   Help:                   A comma separated list of strings that must be present in a filter to be included




   Mandatory:              false




   Default if specified:   &amp;amp;apos;__NULL__&amp;amp;apos;




   Default if unspecified: &amp;amp;apos;__NULL__&amp;amp;apos;














Keyword:                   finder list




Description:               List all finders for a given target (must be an entity




 Keyword:                  class




   Help:                   The controller or entity for which the finders are generated




   Mandatory:              false




   Default if specified:   &amp;amp;apos;__NULL__&amp;amp;apos;




   Default if unspecified: &amp;amp;apos;*&amp;amp;apos;









 Keyword:                  ** default **




 Keyword:                  depth




   Help:                   The depth of attribute combinations to be generated for the finders




   Mandatory:              false




   Default if specified:   &amp;amp;apos;1&amp;amp;apos;




   Default if unspecified: &amp;amp;apos;1&amp;amp;apos;









 Keyword:                  filter




   Help:                   A comma separated list of strings that must be present in a filter to be included




   Mandatory:              false




   Default if specified:   &amp;amp;apos;__NULL__&amp;amp;apos;




   Default if unspecified: &amp;amp;apos;__NULL__&amp;amp;apos;









* finder list - List all finders for a given target (must be an entity









** Type &amp;amp;apos;hint&amp;amp;apos; (without the quotes) and hit ENTER for step-by-step guidance **





</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="2119" opendate="2011-02-15 11:24:14" fixdate="2011-02-16 03:46:47" resolution="Fixed">
		<buginformation>
			<summary>NullPointerException at org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.getFinderFormMethod</summary>
			<description>NullPointerException at org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.getFinderFormMethod(WebScaffoldMetadata.java:952)</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2124" opendate="2011-02-16 07:39:50" fixdate="2011-02-16 16:22:54" resolution="Complete">
		<buginformation>
			<summary>Solr function search(String queryString) throws NullPointerException</summary>
			<description>By running "solr setup" and "solr all" in Roo-Shell the generated solr code contains
...
public static QueryResponse Resolution.search(String queryString) {
return search(new SolrQuery("resolution_solrsummary_t:" + queryString.toLowerCase()));
}
...
If no queryString is entered in the frontend the execution of "null.toLowerCase()" will throw a NullPointerException.
My suggestion would be:
public static QueryResponse Resolution.search(final String queryString) {
final String searchString = "resolution_solrsummary_t:" + queryString;
return search(new SolrQuery(searchString.toLowerCase()));
}</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2057" opendate="2011-01-31 13:02:41" fixdate="2011-02-16 19:35:25" resolution="Duplicate">
		<buginformation>
			<summary>gwt setup giving String index out of range:-1</summary>
			<description>On doing "gwt setup" get a "String index out of range:-1"
I have seen the same bug in closed status  for 1.0.3</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManagerImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtProxyProperty.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateDataHolder.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtUtils.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplatingService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplatingServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2090</link>
		</links>
	</bug>
	<bug id="2123" opendate="2011-02-16 05:40:18" fixdate="2011-02-16 20:02:50" resolution="Complete">
		<buginformation>
			<summary>NullPointerException at org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.isMethodOfInterest</summary>
			<description>[FelixDispatchQueue] NullPointerException at org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.isMethodOfInterest(ConversionServiceMetadataProvider.java:145)
I have no log.roo to replicate the issue yet.</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2105" opendate="2011-02-10 20:39:42" fixdate="2011-02-17 05:26:22" resolution="Complete">
		<buginformation>
			<summary>Roo shell ignores entities in non-lower-case packages</summary>
			<description>If you manually create a Roo-annotated entity (e.g. via an IDE or text editor as opposed to using the Roo shell&amp;amp;apos;s "entity" command) in a package containing upper-case characters, then the Roo shell quietly ignores that class. For example, no ITDs are created.
I don&amp;amp;apos;t know if this is intended behaviour or a bug, but it would be helpful if the Roo shell could at least output a warning such as "Ignoring entity com.example.fooBar.Employee; package name is not lower case". It would be better still if Roo didn&amp;amp;apos;t care about the casing of the package name, especially when Roo-ifying a large legacy project that has a large number of mixed case package names.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserClassOrInterfaceTypeDetails.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
			<file type="M">org.springframework.roo.model.JavaTypeTests.java</file>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="is depended on by">2030</link>
		</links>
	</bug>
	<bug id="2132" opendate="2011-02-18 18:16:58" fixdate="2011-02-18 20:38:33" resolution="Complete">
		<buginformation>
			<summary>Finders use wrong table name when entity extends an abstract base class</summary>
			<description>In 1.1.2.BUILD-SNAPSHOT, if an entity extends an abstract class, the query generated for a finder uses the wrong entity name (specifically, it uses the name of the abstract class instead of the name of the entity):






Album_Roo_Finder.aj






TypedQuery&amp;lt;Album&amp;gt; q = em.createQuery(




"SELECT AbstractEntity FROM AbstractEntity AS abstractentity WHERE abstractentity.artist = :artist",




 Album.class);






Sample script:

project --topLevelPackage com.mycds
persistence setup --database HYPERSONIC_IN_MEMORY --provider HIBERNATE 
class --class ~.domain.AbstractEntity --abstract
entity --class ~.domain.Album --extends ~.domain.AbstractEntity
entity --class ~.domain.Artist --extends ~.domain.AbstractEntity
//artist
focus --class ~.domain.Artist
field string --fieldName name --notNull --sizeMin 1 --sizeMax 30
//album
focus --class ~.domain.Album
field string --fieldName name --sizeMax 30
field date --type java.util.Date --fieldName yearReleased --dateTimeFormatPattern yyyy
field reference --fieldName artist --type ~.domain.Artist --notNull
controller scaffold --entity ~.domain.Album --class ~.web.AlbumController
controller scaffold --entity ~.domain.Artist --class ~.web.ArtistController
logging setup --level INFO
finder add --finderName findAlbumsByArtist --class ~.domain.Album</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.details.MemberFindingUtils.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServicesImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2030" opendate="2011-01-24 01:14:19" fixdate="2011-02-19 21:40:47" resolution="Complete">
		<buginformation>
			<summary>exception on mixedcase imports</summary>
			<description>To use some of the fixes made for 1.1.2 I grabbed the code from git, 1.1.2 rev 91ece7d
The project that worked fine with ROO 1.1.2 now says when Roo starts up:
java.lang.IllegalArgumentException: The entire package name must be lowercase (received &amp;amp;apos;org.apache.sanselan.common.byteSources&amp;amp;apos;)
Problem is, the package name IS mixed case, so this requirement seems weird. What&amp;amp;apos;s going on?
(reference to the package name: http://commons.apache.org/sanselan/api-release/org/apache/sanselan/common/byteSources/package-summary.html )</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.model.JavaPackage.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="depends on">2105</link>
		</links>
	</bug>
	<bug id="2090" opendate="2011-02-08 12:25:38" fixdate="2011-02-20 07:58:04" resolution="Complete">
		<buginformation>
			<summary>gwt-setup fails if using a set of enums with "String index out of range: -1 "</summary>
			<description>Using an entity that has a Set&amp;lt;SomeEnum&amp;gt; causes gwt-setup to fail with an error message "String index out of range: -1" 
If gwt-setup is already run and you attempt to add a Set of enums, the command will fail with the same error message.
I attached both a log.roo and an input .roo file the should help reproduce this issue. 
If I manually add in the Set of enums, it will also fail - so I don&amp;amp;apos;t know of a workaround for this (aside from not using a set of enums)</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManagerImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtProxyProperty.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateDataHolder.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtUtils.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplatingService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplatingServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2057</link>
		</links>
	</bug>
	<bug id="2139" opendate="2011-02-20 22:01:34" fixdate="2011-02-20 22:06:17" resolution="Complete">
		<buginformation>
			<summary>Solr add-on not produce stable aspects</summary>
			<description>The Solr add-on is producing aspects that change upon each launch of Roo, despite there being no material change to the governor, this causes the *_Roo_SolrSearch aspect to be needlessly rewritten to disk.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2153" opendate="2011-02-22 03:22:01" fixdate="2011-02-22 04:52:04" resolution="Complete">
		<buginformation>
			<summary>The GWT Add-On requires a second launch of Roo to create a valid application</summary>
			<description>A timing issue with the creation of Proxies requires Roo be launched second time, after running gwt setup, in order to create a valid application.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplatingServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplatingService.java</file>
		</fixedFiles>
	</bug>
	<bug id="2147" opendate="2011-02-21 19:48:37" fixdate="2011-02-22 04:56:28" resolution="Complete">
		<buginformation>
			<summary>A scaffolded GWT application won&amp;apos;t run without at least one entity</summary>
			<description></description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldDesktopApp-template.java</file>
		</fixedFiles>
	</bug>
	<bug id="2154" opendate="2011-02-22 11:54:54" fixdate="2011-02-22 15:22:31" resolution="Complete">
		<buginformation>
			<summary>DataOnDemand overwrites default field values.</summary>
			<description>Not sure if this is doable or not, but currently given a @RooEntity as follows:
class BaseEntity
private Boolean inactive = Boolean.FALSE;
Roo generates a BaseEntityDataOnDemand that does this:
BaseEntity obj = new BaseEntity();
obj.setInactive(null);
Is a bit of a pain.  Obvious workarounds, but maybe its an easy fix.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.support.util.StringUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="2142" opendate="2011-02-21 15:17:26" fixdate="2011-02-22 16:00:33" resolution="Complete">
		<buginformation>
			<summary>DBRE fkey: Type for table * could not be found but was referenced by table *</summary>
			<description>When running the command:






Roo command






reverse engineer --schema konakart --package ~.domain






I am getting the error message:

Type for table &amp;amp;apos;roots&amp;amp;apos; could not be found but was referenced by table &amp;amp;apos;products&amp;amp;apos;
This is happening on a MySQL database ("konkart") that DBRE processed without error PRIOR to adding foreign key constraints to the DB.
Here is the DDL for the "products" table wich (now) contains the "fk_products_custom1" foreign key constraint:






MySQL DDL for products






CREATE TABLE `products` (




  `products_id` int(11) NOT NULL AUTO_INCREMENT,




  `products_quantity` int(4) NOT NULL,




  `products_model` varchar(64) DEFAULT NULL,




  `products_image` varchar(64) DEFAULT NULL,




  `products_price` decimal(15,4) NOT NULL,




  `products_date_added` datetime NOT NULL,




  `products_last_modified` datetime DEFAULT NULL,




  `products_date_available` datetime DEFAULT NULL,




  `products_weight` decimal(5,2) NOT NULL,




  `products_status` tinyint(1) NOT NULL,




  `products_tax_class_id` int(11) NOT NULL,




  `manufacturers_id` int(11) DEFAULT NULL,




  `products_ordered` int(11) NOT NULL DEFAULT &amp;amp;apos;0&amp;amp;apos;,




  `custom1` int(11) DEFAULT NULL,




  `custom2` varchar(128) DEFAULT NULL,




  `custom3` varchar(128) DEFAULT NULL,




  `custom4` varchar(128) DEFAULT NULL,




  `custom5` varchar(128) DEFAULT NULL,




  `products_invisible` int(1) NOT NULL DEFAULT &amp;amp;apos;0&amp;amp;apos;,




  `products_sku` varchar(255) DEFAULT NULL,




  `products_type` int(11) DEFAULT &amp;amp;apos;0&amp;amp;apos;,




  `products_file_path` varchar(255) DEFAULT NULL,




  `products_content_type` varchar(128) DEFAULT NULL,




  `products_image2` varchar(64) DEFAULT NULL,




  `products_image3` varchar(64) DEFAULT NULL,




  `products_image4` varchar(64) DEFAULT NULL,




  `products_price_1` decimal(15,4) DEFAULT NULL,




  `products_price_2` decimal(15,4) DEFAULT NULL,




  `products_price_3` decimal(15,4) DEFAULT NULL,




  PRIMARY KEY (`products_id`),




  UNIQUE KEY `idx_products_sku` (`products_sku`),




  KEY `idx_products_date_added` (`products_date_added`),




  KEY `idx_products_manufacturers_id` (`manufacturers_id`),




  KEY `idx_products_custom1` (`custom1`),




  CONSTRAINT `fk_products_custom1` FOREIGN KEY (`custom1`) REFERENCES `roots` (`roots_id`)




) ENGINE=InnoDB AUTO_INCREMENT=3358 DEFAULT CHARSET=utf8











Here is the DDL for the "roots" table (which is the target of the k_products_custom1 constraint):






MySQL DDL for roots






CREATE TABLE `roots` (




  `roots_id` int(11) NOT NULL AUTO_INCREMENT,




  `roots_name` varchar(255) NOT NULL,




  `roots_desc` mediumtext NOT NULL,




  `roots_class` varchar(255) NOT NULL,




  `roots_synopsis` varchar(255) DEFAULT NULL,




  PRIMARY KEY (`roots_id`)




) ENGINE=InnoDB AUTO_INCREMENT=1862 DEFAULT CHARSET=utf8











This is similar to the issue posted here. However, there is no CamelCase usage in my table names ("products" &amp;amp; "roots").
Here are the &amp;lt;table&amp;gt; elements for "products" and "roots" from the &amp;lt;database&amp;gt; XML element generated by:
database introspect --schema konakart 






introspect schema






   &amp;lt;table name="products"&amp;gt;




       &amp;lt;column name="products_id" primaryKey="true" required="true" size="10" type="4,INT"/&amp;gt;




       &amp;lt;column name="products_quantity" primaryKey="false" required="true" size="10" type="4,INT"/&amp;gt;




       &amp;lt;column name="products_model" primaryKey="false" required="false" size="64" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="products_image" primaryKey="false" required="false" size="64" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="products_price" primaryKey="false" required="true" size="15,4" type="3,DECIMAL"/&amp;gt;




       &amp;lt;column name="products_date_added" primaryKey="false" required="true" size="19" type="93,DATETIME"/&amp;gt;




       &amp;lt;column name="products_last_modified" primaryKey="false" required="false" size="19" type="93,DATETIME"/&amp;gt;




       &amp;lt;column name="products_date_available" primaryKey="false" required="false" size="19" type="93,DATETIME"/&amp;gt;




       &amp;lt;column name="products_weight" primaryKey="false" required="true" size="5,2" type="3,DECIMAL"/&amp;gt;




       &amp;lt;column name="products_status" primaryKey="false" required="true" size="0" type="-7,BIT"/&amp;gt;




       &amp;lt;column name="products_tax_class_id" primaryKey="false" required="true" size="10" type="4,INT"/&amp;gt;




       &amp;lt;column name="manufacturers_id" primaryKey="false" required="false" size="10" type="4,INT"/&amp;gt;




       &amp;lt;column name="products_ordered" primaryKey="false" required="true" size="10" type="4,INT"/&amp;gt;




       &amp;lt;column name="custom1" primaryKey="false" required="false" size="10" type="4,INT"/&amp;gt;




       &amp;lt;column name="custom2" primaryKey="false" required="false" size="128" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="custom3" primaryKey="false" required="false" size="128" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="custom4" primaryKey="false" required="false" size="128" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="custom5" primaryKey="false" required="false" size="128" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="products_invisible" primaryKey="false" required="true" size="10" type="4,INT"/&amp;gt;




       &amp;lt;column name="products_sku" primaryKey="false" required="false" size="255" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="products_type" primaryKey="false" required="false" size="10" type="4,INT"/&amp;gt;




       &amp;lt;column name="products_file_path" primaryKey="false" required="false" size="255" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="products_content_type" primaryKey="false" required="false" size="128" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="products_image2" primaryKey="false" required="false" size="64" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="products_image3" primaryKey="false" required="false" size="64" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="products_image4" primaryKey="false" required="false" size="64" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="products_price_1" primaryKey="false" required="false" size="15,4" type="3,DECIMAL"/&amp;gt;




       &amp;lt;column name="products_price_2" primaryKey="false" required="false" size="15,4" type="3,DECIMAL"/&amp;gt;




       &amp;lt;column name="products_price_3" primaryKey="false" required="false" size="15,4" type="3,DECIMAL"/&amp;gt;




       &amp;lt;foreign-key foreignTable="roots" name="fk_products_custom1" onDelete="none" onUpdate="none"&amp;gt;




           &amp;lt;option key="exported" value="false"/&amp;gt;




           &amp;lt;reference foreign="roots_id" local="custom1"/&amp;gt;




       &amp;lt;/foreign-key&amp;gt;




       &amp;lt;foreign-key foreignTable="orders_products" name="fk_ordersProducts_productsId" onDelete="none" onUpdate="none"&amp;gt;




           &amp;lt;option key="exported" value="true"/&amp;gt;




           &amp;lt;reference foreign="products_id" local="products_id"/&amp;gt;




       &amp;lt;/foreign-key&amp;gt;




       &amp;lt;unique name="PRIMARY"&amp;gt;




           &amp;lt;unique-column name="products_id"/&amp;gt;




       &amp;lt;/unique&amp;gt;




       &amp;lt;unique name="idx_products_sku"&amp;gt;




           &amp;lt;unique-column name="products_sku"/&amp;gt;




       &amp;lt;/unique&amp;gt;




       &amp;lt;index name="idx_products_date_added"&amp;gt;




           &amp;lt;index-column name="products_date_added"/&amp;gt;




       &amp;lt;/index&amp;gt;




       &amp;lt;index name="idx_products_manufacturers_id"&amp;gt;




           &amp;lt;index-column name="manufacturers_id"/&amp;gt;




       &amp;lt;/index&amp;gt;




       &amp;lt;index name="idx_products_custom1"&amp;gt;




           &amp;lt;index-column name="custom1"/&amp;gt;




       &amp;lt;/index&amp;gt;




   &amp;lt;/table&amp;gt;



















   &amp;lt;table name="roots"&amp;gt;




       &amp;lt;column name="roots_id" primaryKey="true" required="true" size="10" type="4,INT"/&amp;gt;




       &amp;lt;column name="roots_name" primaryKey="false" required="true" size="255" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="roots_desc" primaryKey="false" required="true" size="16777215" type="-1,MEDIUMTEXT"/&amp;gt;




       &amp;lt;column name="roots_class" primaryKey="false" required="true" size="255" type="12,VARCHAR"/&amp;gt;




       &amp;lt;column name="roots_synopsis" primaryKey="false" required="false" size="255" type="12,VARCHAR"/&amp;gt;




       &amp;lt;foreign-key foreignTable="products" name="fk_products_custom1" onDelete="none" onUpdate="none"&amp;gt;




           &amp;lt;option key="exported" value="true"/&amp;gt;




           &amp;lt;reference foreign="custom1" local="roots_id"/&amp;gt;




       &amp;lt;/foreign-key&amp;gt;




       &amp;lt;unique name="PRIMARY"&amp;gt;




           &amp;lt;unique-column name="roots_id"/&amp;gt;




       &amp;lt;/unique&amp;gt;




   &amp;lt;/table&amp;gt;






Looks good to me.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2150" opendate="2011-02-21 21:14:46" fixdate="2011-02-22 16:51:03" resolution="Complete">
		<buginformation>
			<summary>1.1.2.BUILD-SNAPSHOT - java.lang.NoClassDefFoundError: org/springframework/roo/project</summary>
			<description>When I hit this line of code:
if (!(project.getDependenciesExcludingVersion(new Dependency("org.codeconsole", "webapp-analytics", "0.5.9")).size() == 0)) {
I get the following exception:
Exception in thread "Spring Roo JLine Shell" java.lang.NoClassDefFoundError: org/springframework/roo/project/Dependency
	at org.codeconsole.roo.addon.webappanalytics.AnalyticsOperationsImpl.isInstallAnalyticsAvailable(AnalyticsOperationsImpl.java:68)
	at org.codeconsole.roo.addon.webappanalytics.AnalyticsCommands.analyticsInfo(AnalyticsCommands.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)
	at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy$1.callback(ProcessManagerHostedExecutionStrategy.java:49)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:180)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:143)
	at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)
	at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:165)
	at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:358)
	at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:132)
	at java.lang.Thread.run(Thread.java:680)
This only happens in 1.1.2. I do not get the exception &amp;lt;= 1.1.1
I have
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;org.springframework.roo&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;org.springframework.roo.project&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;$
{roo.version}
&amp;lt;/version&amp;gt;
      &amp;lt;type&amp;gt;bundle&amp;lt;/type&amp;gt;
    &amp;lt;/dependency&amp;gt;
specified in my pom file.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.security.SecurityOperationsImpl.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.Repository.java</file>
			<file type="M">org.springframework.roo.addon.op4j.Op4jOperationsImpl.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.ResourceListener.java</file>
			<file type="M">org.springframework.roo.project.ProjectOperations.java</file>
			<file type="D">org.springframework.roo.project.maven.ApplicationContextOperations.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.TypeManagementServiceImpl.java</file>
			<file type="D">org.springframework.roo.project.maven.ApplicationContextOperationsImpl.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.Execution.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadataProvider.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.Resource.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.Plugin.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrOperationsImpl.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.DependencyListener.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.PluginListener.java</file>
			<file type="D">org.springframework.roo.project.maven.MavenOperationsImpl.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.PropertyListener.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.Filter.java</file>
			<file type="D">org.springframework.roo.project.maven.MavenPathResolver.java</file>
			<file type="M">org.springframework.roo.addon.jms.JmsOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
			<file type="D">org.springframework.roo.project.maven.MavenOperations.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.Dependency.java</file>
			<file type="M">org.springframework.roo.project.AutomaticProjectUpgradeService.java</file>
			<file type="D">org.springframework.roo.project.maven.MavenProjectMetadataProvider.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.Configuration.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.RepositoryListener.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperationsImpl.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.Property.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.FilterListener.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.DependencyScope.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="D">org.springframework.roo.project.maven.MavenCommands.java</file>
			<file type="M">org.springframework.roo.addon.email.MailOperationsImpl.java</file>
			<file type="D">org.springframework.roo.project.maven.pom.DependencyType.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="depends on">2126</link>
		</links>
	</bug>
	<bug id="2157" opendate="2011-02-22 22:59:45" fixdate="2011-02-22 23:03:05" resolution="Complete">
		<buginformation>
			<summary>Fix code to prevent NPEs</summary>
			<description></description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2158" opendate="2011-02-23 02:20:31" fixdate="2011-02-23 14:59:01" resolution="Complete">
		<buginformation>
			<summary>Deleting/creating/updating roo generated entities containing an enum property with lots of constants causes index out of bound exception while the scaffolded controller tries to redirect </summary>
			<description>I created an enum "Timezone" using roo shell and added lots of constants (more than 600) to it. This enum is used as a property in one of my roo generated entities.
Whenever I try to update/create/delete entities of this type with the scaffolded controller, the data base is updated correctly, but once the controller tries to redirect to a view, I get the following exception:
java.lang.ArrayIndexOutOfBoundsException: 8192
	at org.apache.coyote.http11.InternalOutputBuffer.write(InternalOutputBuffer.java:715)
	at org.apache.coyote.http11.InternalOutputBuffer.write(InternalOutputBuffer.java:622)
	at org.apache.coyote.http11.InternalOutputBuffer.sendHeader(InternalOutputBuffer.java:495)
	at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1617)
	at org.apache.coyote.http11.Http11Processor.action(Http11Processor.java:952)
	at org.apache.coyote.Response.action(Response.java:183)
	at org.apache.coyote.Response.sendHeaders(Response.java:379)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:305)
	at org.apache.catalina.connector.OutputBuffer.close(OutputBuffer.java:273)
	at org.apache.catalina.connector.Response.finishResponse(Response.java:493)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:322)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:409)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
23.02.2011 10:53:12 org.apache.coyote.http11.Http11Processor process
SCHWERWIEGEND: Error finishing response
java.lang.ArrayIndexOutOfBoundsException
	at java.lang.System.arraycopy(Native Method)
	at org.apache.coyote.http11.InternalOutputBuffer.write(InternalOutputBuffer.java:684)
	at org.apache.coyote.http11.InternalOutputBuffer.sendStatus(InternalOutputBuffer.java:419)
	at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1604)
	at org.apache.coyote.http11.Http11Processor.action(Http11Processor.java:952)
	at org.apache.coyote.Response.action(Response.java:181)
	at org.apache.coyote.http11.InternalOutputBuffer.endRequest(InternalOutputBuffer.java:379)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:897)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:409)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
After this exception occurs, TomCat retries the operation which leads to a Hibernate exception in case of update (stale record), unique constraint exception in case of create and entity not found exception in case of delete.
Debugging the application, the last break point that is hit before the index out of bound exception is the sendRedirect method in Spring&amp;amp;apos;s RedirectView class. Examining the targetUrl attribute in this method, I figured that all possible values of my enum type had been encoded as request parameters which forms a very long string which probably caused the index out of bound exception.
Looking at the generated scaffolding code, all possible values of the enum property are added to the Model in a generated method called "populateTimezones" to present all possible selections in drop down boxes in the view.
When doing the redirect after a create/update/delete operation, all model attributes are added to the targetUrl which leads to the array index out of bound exception.
I worked around the problem by pushing some generated advices into my controller classes and add a
model.addAttribute("timezones", null);
before doing the redirect. I do not think that these attributes are ever needed after a redirect, so I suggest modifying the scaffolded code generator accordingly.
Since this problem could not only happpen in case of huge enums but also in case of many candidates for relationships with other entities (so whenever a generated populate... method adds lots of entries to the model), I think this is not just an exotic problem.
Another aspect of this problem seems to be the array index out of bound exception in TomCat. Even in case of ridiculously long target URLs, this should not cause exceptions like this which cause retries of operations with a side effect.
I attached my enum class so that you can better reproduce the problem.
Best, Johannes</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">1294</link>
		</links>
	</bug>
	<bug id="2170" opendate="2011-02-24 19:27:41" fixdate="2011-02-24 19:41:38" resolution="Complete">
		<buginformation>
			<summary>GWT Add-On creates applications using invalid types</summary>
			<description>There are number of types that RequestFactory can&amp;amp;apos;t handle, such as java.util.Calendar, but the GWT Add-On still attempts to scaffolds them which ultimately leads to an invalid application. This shouldn&amp;amp;apos;t be happening and default behaviour should be to ignore invalid types.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeNamingStrategy.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManagerImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileListener.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtUtils.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplatingServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2174" opendate="2011-02-26 19:22:42" fixdate="2011-02-26 23:51:15" resolution="Complete">
		<buginformation>
			<summary>null initialized String field in entity throws indexoutofboundsexception : -1</summary>
			<description>One of many Roo generated entities contained a String field which I added myself and for some reason initialized to null.
The result is that the data on demand component blows up @
DataOnDemandMetadata.storeFieldInitializers(DataOnDemandMetadata.java:640)
From the look of the code, I think this be pretty easy to reproduce, initialize a String field in an entity to null, stop roo, start roo. 
This really bricked everything for me, no code updates were being done anymore by roo and I had no clue what was going on basically. 
On great addition would be to more logging, allow through some means a user to enable logging of which files, fields, ... are being processed, relevant status and results etc. This would have saved quite some hours.  
</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2184" opendate="2011-02-28 12:23:20" fixdate="2011-03-01 21:49:33" resolution="Fixed">
		<buginformation>
			<summary>Use of generalization causes chaos in JSP fields </summary>
			<description>Create/update/view JSPs generated using Roo 1.1.1.RELEASE show attributes in same order as defined in class *.java file (in Roo shell input order). In Roo 1.1.2.RELEASE when generalization is used it makes chaos in fields order. 
Normal 1.1.1. order is parrent class fields (in correct order) and then child class fields (in correct order). In 1.1.2. fields are mixed and it makes no sense.
Simple example script and screens of JSP generated by both Roo versions are attached.   </description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="2200" opendate="2011-03-03 12:27:49" fixdate="2011-03-03 15:18:51" resolution="Fixed">
		<buginformation>
			<summary>ApplicationConversionServiceFactoryBean push-in error</summary>
			<description>In our app we had already defined an annotation based ConversionService that was used for calculating the display value of different objects.
The ApplicationConversionServiceFactory centralised all of this, but due to not wanting to refactor code close to a major project milestone I decided to just disable the new Roo conversions that we don&amp;amp;apos;t need, by pushing in "installLabelConverters" from the ApplicationConversionServiceFactoryBean_Roo_ConversionService.aj
This results in the following error by Roo:
79eaa4c Updated SRC_MAIN_JAVA***\web\ApplicationConversionServiceFactoryBean_Roo_ConversionService.aj
Did not expect to find installLabelConverters method in ..*.web.ApplicationConversionServiceFactoryBean
java.lang.IllegalStateException: Did not expect to find installLabelConverters method in ..*.web.ApplicationConversionServiceFactoryBean
at org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadata.getInstallMethodBuilder(ConversionServiceMetadata.java:107)
It seems to run counter to Roo, and .ajs in general that we don&amp;amp;apos;t have freedom to push-in and override where we like.  The presence of a specific error message for this scenario however makes me think its deliberate.
What would be the recommended approach then to disable all of the auto-generated conversions, because quite frankly they are useless in current state.  They just take the first 4 fields of the domain object.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2199" opendate="2011-03-03 08:47:16" fixdate="2011-03-03 22:31:28" resolution="Duplicate">
		<buginformation>
			<summary>Addon upgrade all fails for Roo 1.1.2 </summary>
			<description>addon upgrade all fails, and after failure I have to Ctrl_C the system since it does not recognize the commands
As of this report a fresh install of ROO says that there are 15 upgrades available. And iterative tries to upgrade fails at 3 upgrades left 
which are as follows
The following add-ons / components are available for upgrade for level: ANY
--------------------------------------------------------------------------------
[level: ANY] org.springframework.roo.felix;1.1.2.RELEASE &amp;gt; 1.1.3.BUILD-SNAPSHOT
[level: ANY] org.springframework.roo.addon.entity;1.1.2.RELEASE &amp;gt; 1.1.3.BUILD-SNAPSHOT
[level: ANY] org.springframework.roo.addon.serializable;1.1.2.RELEASE &amp;gt; 1.1.3.BUILD-SNAPSHOT
--------------------------------------------------------------------------------</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2190</link>
		</links>
	</bug>
	<bug id="2208" opendate="2011-03-06 04:16:23" fixdate="2011-03-06 18:15:06" resolution="Complete">
		<buginformation>
			<summary>GAE One-to-many code does not import HashSet</summary>
			<description>In the Roo-generated *_Roo_JavaBean.aj files, there are 2 problems with the code generated for @OneToMany fields:

HashSet is used in the Set&amp;lt;Key&amp;gt; declarations but not imported.
The getters and setters try to create (instanciate) new Set&amp;lt;...&amp;gt;() rather than new HashSet&amp;lt;...&amp;gt;().

</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadata.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
			<file type="D">org.springframework.roo.addon.dbre.converters.SchemaConverter.java</file>
			<file type="D">org.springframework.roo.addon.dbre.converters.IncludeExcludeTablesConverter.java</file>
		</fixedFiles>
	</bug>
	<bug id="2209" opendate="2011-03-06 19:39:30" fixdate="2011-03-06 19:49:34" resolution="Complete">
		<buginformation>
			<summary>JavaBean doesn&amp;apos;t use an entity&amp;apos;s custom identifier field when using GAE</summary>
			<description>getId() has been hardcoded in the JavaBean add-on which causes custom identifier fields to be ignored when GAE is being used in a project.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadata.java</file>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2210" opendate="2011-03-07 03:51:53" fixdate="2011-03-07 03:53:34" resolution="Complete">
		<buginformation>
			<summary>Missing throw keyword in try/catch blocks</summary>
			<description></description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrJspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.menu.MenuOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">2218</link>
		</links>
	</bug>
	<bug id="2188" opendate="2011-03-01 16:07:32" fixdate="2011-03-07 04:40:10" resolution="Complete">
		<buginformation>
			<summary>Cannot create GWT front-end interface on Roo project</summary>
			<description>This script fails with exceptions (see below script)






project --topLevelPackage org.rooina.ria.ajax.coursemanager --projectName coursemanagergwt




persistence setup --database HYPERSONIC_PERSISTENT --provider HIBERNATE 




entity --class ~.model.Course




field string --fieldName name




field number --fieldName cost --type java.math.BigDecimal




field number --fieldName numDays --type java.lang.Integer









entity --class ~.model.Room




field string --fieldName roomName




field number --fieldName capacity --type java.lang.Integer









entity --class ~.model.ScheduledCourse




field date --fieldName offerDate --type java.util.Date




field reference --fieldName room --type ~.model.Room --cardinality MANY_TO_ONE 




field reference --fieldName course --type ~.model.Course --cardinality MANY_TO_ONE




field set --type ~.model.ScheduledCourse --fieldName schedule --cardinality ONE_TO_MANY --class ~.model.Course




field set --type ~.model.ScheduledCourse --fieldName schedule --cardinality ONE_TO_MANY --class ~.model.Room









entity --class ~.model.Registration




field string --fieldName firstName




field string --fieldName lastName




field reference --fieldName offering --type ~.model.ScheduledCourse --cardinality MANY_TO_ONE




field boolean --fieldName paymentReceived




field set --type ~.model.Registration --fieldName students --cardinality ONE_TO_MANY --class ~.model.ScheduledCourse









gwt setup






Error is:






Undo manage SRC_MAIN_WEBAPP/WEB-INF/web.xml




Undo manage ROOT/pom.xml




Undo manage SRC_MAIN_WEBAPP/WEB-INF/web.xml




Undo create SRC_MAIN_WEBAPP/WEB-INF/web.xml




Undo create SRC_MAIN_WEBAPP/WEB-INF/spring/webmvc-config.xml




Undo create SRC_MAIN_WEBAPP/WEB-INF/spring




japa.parser.ParseException: Encountered " "." ". "" at line 99, column 13.




Was expecting one of:




    "(" ...




    ";" ...




    "=" ...




    "++" ...




    "--" ...




    "+=" ...




    "-=" ...




    "*=" ...




    "/=" ...




    "&amp;amp;=" ...




    "|=" ...




    "^=" ...




    "%=" ...




    "&amp;lt;&amp;lt;=" ...




    "&amp;gt;&amp;gt;=" ...




    "&amp;gt;&amp;gt;&amp;gt;=" ...





</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplatingServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtTypeNamingStrategy.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManagerImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtProxyProperty.java</file>
			<file type="D">org.springframework.roo.addon.gwt.DefaultGwtTypeNamingStrategy.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtFileListener.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2196</link>
		</links>
	</bug>
	<bug id="2196" opendate="2011-03-02 16:59:47" fixdate="2011-03-07 04:42:09" resolution="Complete">
		<buginformation>
			<summary>in roo shell "gwt setup" command raise an exception  </summary>
			<description>error that was returned by shell after creation of 
SRC_MAIN_JAVA\com\scdevsite\client\managed\ui\XxEditor.ui.xml and undo of "gwt setup" operations:
"japa.parser.ParseException: Encountered " "." ". "" at line 113, column 13. 
Was expecting one of: 
"(" ... 
";" ... 
"=" ... 
"++" ... 
"--" ... 
"+=" ... 
"-=" ... 
"*=" ... 
"/=" ... 
"&amp;amp;=" ... 
"|=" ... 
"^=" ... 
"%=" ... 
"&amp;lt;&amp;lt;=" ... 
"&amp;gt;&amp;gt;=" ... 
"&amp;gt;&amp;gt;&amp;gt;=" ..."</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplatingServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtTypeNamingStrategy.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManagerImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtProxyProperty.java</file>
			<file type="D">org.springframework.roo.addon.gwt.DefaultGwtTypeNamingStrategy.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtFileListener.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2188</link>
		</links>
	</bug>
	<bug id="2218" opendate="2011-03-08 21:11:26" fixdate="2011-03-08 21:13:27" resolution="Complete">
		<buginformation>
			<summary>Exception thrown when searching for non-existent /div/page element in index-template.jspx</summary>
			<description>The element from XPath expression "/div/page" does not exist in index-template.jspx and as a result an exception is caught and re-thrown. This was masked prior to ROO-2210 as the IllegalStateException was instantiated instead of being correctly thrown. Processing just continued on as normal.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">2210</link>
		</links>
	</bug>
	<bug id="2195" opendate="2011-03-02 12:26:41" fixdate="2011-03-13 14:57:14" resolution="Complete">
		<buginformation>
			<summary>Cryptic Shell error related to Conversion service</summary>
			<description>This started cropping up on our project following 1.1.2-RELEASE upgrade this week.  Its not providing a lot of context to go by though.  The previous lines don&amp;amp;apos;t give much clue as to what class its even working on, so I can&amp;amp;apos;t isolate it easily.
I also can&amp;amp;apos;t judge what affect its having, whether its blocking our work with Roo or not.
[FelixDispatchQueue] It is recommended to use @DateTimeFormat(style="S-") on cancellationDate to use automatic date conversion in Spring MVC
[FelixDispatchQueue] Unable to obtain physical type metdata for type java.lang.Object
                     java.lang.IllegalArgumentException: Unable to obtain physical type metdata for type java.lang.Object
                         at org.springframework.roo.support.util.Assert.notNull(Assert.java:112)
                         at org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.findRelevantTypes(ConversionServiceMetadataProvider.java:106)
                         at org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.findDomainTypesRequiringAConverter(ConversionServiceMetadataProvider.java:99)
                         at org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.getMetadata(ConversionServiceMetadataProvider.java:83)
                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:269)
                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:148)
                         at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:82)
                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:146)
                         at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:235)
                         at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:214)
                         at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:131)
                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:330)
                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:304)
                         at org.springframework.roo.project.ProjectPathMonitoringInitializer.notify(ProjectPathMonitoringInitializer.java:86)
                         at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:233)
                         at org.springframework.roo.project.MavenProjectMetadataProvider.onFileEvent(MavenProjectMetadataProvider.java:207)
                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:330)
                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:304)
                         at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:36)
                         at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:15)
                         at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:180)
                         at org.springframework.roo.process.manager.internal.DefaultProcessManager.completeStartup(DefaultProcessManager.java:102)
                         at org.springframework.roo.process.manager.internal.DefaultProcessManager.access$100(DefaultProcessManager.java:34)
                         at org.springframework.roo.process.manager.internal.DefaultProcessManager$1.frameworkEvent(DefaultProcessManager.java:55)
                         at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListenerCallback(EventDispatcher.java:774)
                         at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:725)
                         at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:949)
                         at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)
                         at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)
                         at java.lang.Thread.run(Unknown Source)</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadataProviderImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="911" opendate="2010-05-29 07:12:47" fixdate="2011-03-13 15:28:38" resolution="Complete">
		<buginformation>
			<summary>setup git/svn when building new project</summary>
			<description>When a user creates a new project then with an optional switch a local git repo could be created.
This git repo can be used to store the state of all the actions performed on a roo script. A user could do it by hand as well, but this option would make this best practice of storing things in repo easier. Then with each command if it changes files an git commit could be done with relevant comment
if when command is : field string blah (git can store adding field blah to entity Blah)
http://forum.springsource.org/showthread.php?t=90056
All of this can be done manually with some effort. Doing this can make easy to implement an undo functionality, ie going a few steps back and branching from that step and getting rid of the changes done from there on.</description>
			<version>1.1.0.M1</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.git.GitShellEventListener.java</file>
			<file type="M">org.springframework.roo.addon.git.GitOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.git.GitCommands.java</file>
			<file type="D">org.springframework.roo.addon.git.GitCommandResult.java</file>
			<file type="M">org.springframework.roo.addon.git.GitOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1124</link>
			<link type="Duplicate" description="is duplicated by">1015</link>
			<link type="Related" description="is related to">482</link>
			<link type="Related" description="is related to">482</link>
			<link type="Related" description="is related to">901</link>
		</links>
	</bug>
	<bug id="2232" opendate="2011-03-14 03:54:54" fixdate="2011-03-14 20:25:07" resolution="Complete">
		<buginformation>
			<summary>Calendar properties in mvc list views not displayed as dateformats</summary>
			<description>List views generated by the mvc addon do not use formatters for java.util.Calendar Items.
Instead the class name is displayed.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="2226" opendate="2011-03-11 04:49:57" fixdate="2011-03-14 20:41:29" resolution="Fixed">
		<buginformation>
			<summary>Adding tag attributes starting  with &amp;apos;_&amp;apos;  does not work as expected - They are deleted on re-generation </summary>
			<description>I tried to add a custom attribute "_multipart" to the form:create tag.
According too Roo documentation , attributes with leading "_" are not included in the hashcode (z attribute) ... So I expected I could use them without intefering with Roo code generation.
So, I tried to use this new attribute in a Roo-mangaed view: 
&amp;lt;form:create id="fc_..." _multipart="true" ...&amp;gt;
But next time the view was regenerated, this attribute was removed again. Even worse: All changes I had made in the content of the form tag (f.e. some field customization "rendered="false") were also lost.
I seems, the whole form element and all of its content has been re-generated...
</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.support.util.XmlRoundTripUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="1189" opendate="2010-08-08 14:01:11" fixdate="2011-03-14 20:45:52" resolution="Duplicate">
		<buginformation>
			<summary>formatting of JSPX files</summary>
			<description>When JSPX files are managed by ROO, they get to have arbitrary blank spaces , new lines etc. 
It would be good to have formatting of JSPX without any such artifacts</description>
			<version>1.1.0.M1</version>
			<fixedVersion></fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">882</link>
		</links>
	</bug>
	<bug id="2236" opendate="2011-03-14 22:00:02" fixdate="2011-03-14 22:01:32" resolution="Complete">
		<buginformation>
			<summary>DBRE not updating Db_Managed ITD when fields are removed from the entity&amp;apos;s composite PK class</summary>
			<description></description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2223" opendate="2011-03-11 01:16:13" fixdate="2011-03-16 15:27:08" resolution="Fixed">
		<buginformation>
			<summary>missing @ResponseBody at generated json finders</summary>
			<description>json support does not add the @ResponseBody annotation to finders.
the attached log file leads to the generated method without the @ResponseBody Annotation.
@RequestMapping(params = "find=ByClient", method = RequestMethod.GET, headers = "Accept=application/json")
public String ProductController.jsonFindProductsByClient(@RequestParam("client") Client client) {
  return Product.toJsonArray(Product.findProductsByClient(client).getResultList());
}
</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2204" opendate="2011-03-03 18:06:43" fixdate="2011-03-17 05:27:04" resolution="Complete">
		<buginformation>
			<summary>after gwt setup and when doing build get import issues with import com.google.appengine</summary>
			<description>after gwt setup and when doing build get import issues with import com.google.appengine (as in class not found)
The workaround is to use this within roo:
dependency add --groupId com.google.appengine --artifactId appengine-api-1.0-sdk --version 1.4.0
(I got the soln off this forum page http://forum.springsource.org/showthread.php?t=100960&amp;amp;page=2)
Needs perm fix</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtConfigServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtConfigService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateDataHolder.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManager.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtTemplatingService.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtTemplatingServiceImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">2374</link>
		</links>
	</bug>
	<bug id="2245" opendate="2011-03-17 20:19:34" fixdate="2011-03-17 23:20:54" resolution="Complete">
		<buginformation>
			<summary>DBRE model not updated when XML file is edited manually while shell is running</summary>
			<description>Though it is not recommended that the DBRE xml file be edited by the user (analogous to editing ITDs), there exists inconsistent behaviour now where if the file is edited, no updates occur until the Roo shell is restarted. This change will trigger changes to the ITDs when the XML file is edited while the Roo shell is running also.
As part of the change the DbreDatabaseListener will be refactored to be a FileEventListener instead of a DatbaseListener. This simpflifies the code significantly.  
The .roo-dbre will also be renamed dbre.xml and be moved to src/main/resources. Roo does not listen for files starting with a period and this would be problematic for the FileEventListener</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseContentHandler.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelService.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="D">org.springframework.roo.addon.dbre.DatabaseListener.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListener.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.AbstractIntrospector.java</file>
			<file type="D">org.springframework.roo.addon.dbre.DbreModelService.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreCommands.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Table.java</file>
			<file type="M">org.springframework.roo.addon.dbre.converter.SchemaConverter.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperations.java</file>
			<file type="D">org.springframework.roo.addon.dbre.DbreModelServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseIntrospector.java</file>
		</fixedFiles>
	</bug>
	<bug id="2238" opendate="2011-03-16 13:10:27" fixdate="2011-03-18 23:20:01" resolution="Complete">
		<buginformation>
			<summary>Code completion for packages broken</summary>
			<description>In the Roo shell, code completions for packages / classes seems to be broken.
Lets assume, we have entitie in a subpackage domain.
When entering something like  controller scaffold --class ~.  , the code completion offers nothing. One has to enter "domain" by hand, and only gets code completion for the class name then.
</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.file.monitor.polling.PollingFileMonitorService.java</file>
		</fixedFiles>
	</bug>
	<bug id="2251" opendate="2011-03-19 11:13:04" fixdate="2011-03-19 14:40:29" resolution="Fixed">
		<buginformation>
			<summary>Wenn adding SOLR support for an entity, a "find...BySolrServer - failure" appears in the list of finders</summary>
			<description>I have an Entity Artikel and called 
solr add --class ~.domain.artikel.Artikel
and then  
finder list
The last line of the Roo shell output is then: 
"findArtikelsBySolrServer - failure"
It seems, the introduced field 
transient SolrServer Artikel.solrServer
is misinterpreted as some persistent property by the finder addon.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServicesImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2256" opendate="2011-03-22 01:34:26" fixdate="2011-03-22 01:56:52" resolution="Complete">
		<buginformation>
			<summary>Lack of internet connection causes the GWT add-on to hang Roo</summary>
			<description>In order to determine what is a valid type to use on the client side the GWT add-on checks to see if the referenced type is located in a package that has been declared in the application gwt.xml file. During this check a dtd file is downloaded. If no internet connection is present Roo hangs and the throws a "java.net.UnknownHostException".</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2252" opendate="2011-03-20 15:41:45" fixdate="2011-03-22 20:50:09" resolution="Complete">
		<buginformation>
			<summary>ROO generate GWT code that is GAE dependent even if not building for GAE</summary>
			<description>After having setup the presistency and database, i created some basic entity
Then I executed "gwt setup".
After quite some time the scaffold project was created.
It created a ~.server.gae package that failed to compile.
This package contains the classes:
GaeAuthFilter.java, UserSServiceLocator.java and UserServiceWrapper.java
This package does not compile because the gae references could not be resolved:
import com.google.appengine.api.users.UserService;
import com.google.appengine.api.users.UserServiceFactory;
So it seems that:
1) gae classes are being created.
2) gae classes cannot be compiled dependencies are not set.
I can although execute the application (from console: mvn gwt:run)
which runs as expected. </description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtConfigServiceImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">2374</link>
		</links>
	</bug>
	<bug id="2070" opendate="2011-02-04 00:39:58" fixdate="2011-03-23 03:44:32" resolution="Complete">
		<buginformation>
			<summary>Data-on-demand and integration tests to support composite primary keys</summary>
			<description>This ticket is to combine existing related tickets into one.</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
			<file type="D">org.springframework.roo.addon.dod.EmbeddedIdentifierMetadataHolder.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.entity.RooIdentifier.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseContentHandler.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperationsImpl.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.CustomDataPersistenceTags.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="is depended on by">2214</link>
			<link type="Duplicate" description="is duplicated by">2082</link>
			<link type="Supersede" description="supersedes">2047</link>
			<link type="Supersede" description="supersedes">1994</link>
			<link type="Supersede" description="supersedes">1857</link>
		</links>
	</bug>
	<bug id="2271" opendate="2011-03-28 17:21:29" fixdate="2011-03-28 17:38:50" resolution="Complete">
		<buginformation>
			<summary>Incorrect variable generated in findEntity method when GAE is used and the identifierField attribute on @RooEntity is specified</summary>
			<description>When the GOOGLE_APP_ENGINE database is configured for use in a Roo project and the user has specified a value in the &amp;amp;apos;identifierField&amp;amp;apos; attribute of @RooEntity, the find method has incorrect code generated. For example, if identifierField is set to &amp;amp;apos;tid&amp;amp;apos;, ie @RooEntity(identifierField = &amp;amp;apos;tid&amp;amp;apos;) the generated find method looks like:






    @Transactional




    public static Document Document.findDocument(Long id) {




        if (id == null) return null;




        Query query = entityManager().createQuery("select o from Document o where o.tid = :id").setParameter("id",tid);




    ...






resulting in a compile error.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2270" opendate="2011-03-28 05:52:13" fixdate="2011-03-29 15:45:44" resolution="Complete">
		<buginformation>
			<summary>A quit command within scripts hangs Roo</summary>
			<description>I was rerunning a script that Roo had generated and because it had quit in the middle of it, Roo hung.  I accept there shouldn&amp;amp;apos;t be a quit in there, but that&amp;amp;apos;s what happens if you run roo multiple times in the same project.  I know it is supposed to be a log, but maybe Roo could remove (or comment out) any trailing quit before adding new lines?
The script was:
// Spring Roo 1.1.2.RELEASE [rev fbc33bb] log opened at 2011-03-27 23:00:34
project --topLevelPackage com.springsource.roo.songs --projectName rooSongs --java 6
persistence setup --database HYPERSONIC_PERSISTENT --provider HIBERNATE 
quit
entity --class ~.domain.Song --testAutomatically 
entity --class ~.domain.Artist --testAutomatically 
entity --class ~.domain.Album --testAutomatically 
entity --class ~.domain.Label --testAutomatically 
quit
Output was:
roo&amp;gt; script ..\log.roo
// Spring Roo 1.1.2.RELEASE [rev fbc33bb] log opened at 2011-03-27 23:00:34
project --topLevelPackage com.springsource.roo.songs --projectName rooSongs
Created ROOT\pom.xml
Created SRC_MAIN_JAVA
Created SRC_MAIN_RESOURCES
Created SRC_TEST_JAVA
Created SRC_TEST_RESOURCES
Created SRC_MAIN_WEBAPP
Created SRC_MAIN_RESOURCES\META-INF\spring
Created SRC_MAIN_RESOURCES\META-INF\spring\applicationContext.xml
Created SRC_MAIN_RESOURCES\log4j.properties
persistence setup --database HYPERSONIC_PERSISTENT --provider HIBERNATE
Updated ROOT\pom.xml [Removed redundant artifacts]
Updated SRC_MAIN_RESOURCES\META-INF\spring\applicationContext.xml
Created SRC_MAIN_RESOURCES\META-INF\persistence.xml
Created SRC_MAIN_RESOURCES\META-INF\spring\database.properties
Updated ROOT\pom.xml [Added dependencies org.hsqldb:hsqldb:1.8.0.10, org.hib
, org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.0.Final, org.hib
lib:cglib-nodep:2.2, javax.transaction:jta:1.1, org.springframework:spring-j
l:commons-pool:1.5.4, commons-dbcp:commons-dbcp:1.3]
Updated ROOT\pom.xml [Added repository https://repository.jboss.org/nexus/co
quit
entity --class ~.domain.Song --testAutomatically
C:\Users\chapmanp\Documents\workspace-sts-2.6.0.RELEASE\rooSongs&amp;gt;^C^C^C^C^C
Note the attempt to use ctrl-C.  I had to kill the Java process from the task manager.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.AbstractShell.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">1938</link>
		</links>
	</bug>
	<bug id="2272" opendate="2011-03-29 06:33:16" fixdate="2011-03-29 16:27:13" resolution="Duplicate">
		<buginformation>
			<summary>DBRE across multiple schemas</summary>
			<description>Is common in large organizations to have DB schemas where tables have relations with tables in other schemas or catalogs.
Would be great that Roo DBRE supports this kind of scenarios. We&amp;amp;apos;re trying to evangelize Roo and a workaround making reverse engineering in several steps (pushing all the fields in the _DBManaged ITD to the java file in each step) is not the best solution.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreCommands.java</file>
			<file type="M">org.springframework.roo.addon.dbre.converter.SchemaConverter.java</file>
			<file type="D">org.springframework.roo.addon.dbre.model.TableBean.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Table.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Schema.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreTypeUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.ForeignKey.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseContentHandler.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperations.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelService.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseIntrospector.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1408</link>
		</links>
	</bug>
	<bug id="2276" opendate="2011-03-30 11:04:06" fixdate="2011-03-30 16:22:18" resolution="Duplicate">
		<buginformation>
			<summary>pushing in @Id triggers exception "Identifier accessor method required"</summary>
			<description>I am moving the @Id setup to the .java to handle integration of pre set up Sequences.  Such as:






Products.java






    @Id @GeneratedValue(strategy=GenerationType.SEQUENCE, generator="prod_seq")




    @SequenceGenerator(name="prod_seq", sequenceName="PRODUCTS_SEQ")




    @Column(name = "id")




    private Integer id;









    public Integer getId() {




        return this.id;




    }









    public void setId(Integer id) {




        this.id = id;




    }






This works as expected with roo modifying the entity as such:






@@ -25,19 +21,6 @@




     @PersistenceContext




     transient EntityManager Products.entityManager;




     




-    @Id




-    @GeneratedValue(strategy = GenerationType.AUTO)




-    @Column(name = "ID")




-    private BigDecimal Products.id;




-    




-    public BigDecimal Products.getId() {




-        return this.id;




-    }




-    




-    public void Products.setId(BigDecimal id) {




-        this.id = id;




-    }




-    




     @Transactional




     public void Products.persist() {




         if (this.entityManager == null) this.entityManager = entityManager();




@@ -89,7 +72,7 @@




         return entityManager().createQuery("SELECT o FROM Products o", Products.class).getResultList();




     }




     




-    public static Products Products.findProducts(BigDecimal id) {




+    public static Products Products.findProducts(Integer id) {




         if (id == null) return null;




         return entityManager().find(Products.class, id);




     }






Now if I try to create an integration test (roo&amp;gt; test integration --entity ..) I get the following error:






Identifier accessor method required




java.lang.IllegalArgumentException: Identifier accessor method required




    at org.springframework.roo.support.util.Assert.notNull(Assert.java:112)




    at org.springframework.roo.addon.dod.DataOnDemandMetadata.&amp;lt;init&amp;gt;(DataOnDemandMetadata.java:75)




    at org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.getMetadata(DataOnDemandMetadataProvider.java:129)




    at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:269)




    at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:148)




    at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:82)




    at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:146)




    at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:235)




    at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:214)




    at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:131)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:330)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanNotified(PollingFileMonitorService.java:213)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:189)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:143)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)




    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:181)




    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:358)




    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:132)




    at java.lang.Thread.run(Thread.java:680)






I actually noticed this previously in a slightly different situation.  I had created my entity with --testautomatically and had already created a controller scaffold for it.  After making the @id modification the error pops up every time I launch roo-dev</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.IdentifiableJavaStructureCustomDataKey.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.CustomDataKeyDecoratorImpl.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.ConstructorMetadataCustomDataKey.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.PersistenceCustomDataKeys.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.TypeMatcher.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.FieldMatcher.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.InvocableMemberMetadataCustomDataKey.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.IdentifiableAnnotatedJavaStructureCustomDataKey.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.FieldMetadataCustomDataKey.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.MethodMatcher.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.Matcher.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.CustomDataKeyDecorator.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.MethodMetadataCustomDataKey.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.MemberHoldingTypeDetailsCustomDataKey.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.ConstructorMatcher.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.json.CustomDataJsonTags.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.model.CustomDataImpl.java</file>
			<file type="M">org.springframework.roo.model.CustomDataBuilder.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.FieldTagger.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.MethodTagger.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.model.TagKey.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfManagedBeanMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.IdentifiableJavaStructureTagKey.java</file>
			<file type="M">org.springframework.roo.model.AbstractCustomDataAccessorBuilder.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.FieldMetadataTagKey.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.ConstructorTagger.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.InvocableMemberMetadataTagKey.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.TypeTagger.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.MemberHoldingTypeDetailsTagKey.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.CustomDataPersistenceTags.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.MethodMetadataTagKey.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="D">org.springframework.roo.classpath.scanner.GlobalMemberDetailsDecorator.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.TaggerRegistry.java</file>
			<file type="M">org.springframework.roo.addon.serializable.CustomDataSerializableTags.java</file>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProvider.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.ConstructorMetadataTagKey.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.ItdTypeDetailsTagKey.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.Tagger.java</file>
			<file type="M">org.springframework.roo.model.CustomDataAccessor.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.IdentifiableAnnotatedJavaStructureTagKey.java</file>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServicesImpl.java</file>
			<file type="M">org.springframework.roo.model.CustomData.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.TaggerRegistryImpl.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.TagKey.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsImpl.java</file>
			<file type="M">org.springframework.roo.classpath.details.MemberFindingUtils.java</file>
			<file type="D">org.springframework.roo.addon.jpa.JpaMemberDetailsDecorator.java</file>
			<file type="D">org.springframework.roo.classpath.scanner.GlobalCustomDataRequest.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.AnnotatedJavaType.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2266</link>
		</links>
	</bug>
	<bug id="2274" opendate="2011-03-29 16:21:08" fixdate="2011-03-31 18:53:01" resolution="Fixed">
		<buginformation>
			<summary>Sending back ResponseEntity&lt;T&gt; without Content-Type header causes RestClientExceptions when using RestTemplate</summary>
			<description>When using a RestTemplate to call Json Controllers built as per Roo&amp;amp;apos;s documentation, the code
return new ResponseEntity&amp;lt;String&amp;gt;(HttpStatus.CREATED)
is insufficient, because without a content-type HttpResponseExtractorConverter will throw RestClientException.  This behaviour is mentioned in the open issue SPR-7908 also.
Current workaround is to return the following:
HttpHeaders headers= new HttpHeaders();
headers.add("Content-Type", "application/text");
return new ResponseEntity&amp;lt;String&amp;gt;(headers, HttpStatus.CREATED);</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">7908</link>
		</links>
	</bug>
	<bug id="2265" opendate="2011-03-24 10:18:44" fixdate="2011-04-03 15:28:53" resolution="Fixed">
		<buginformation>
			<summary>Invalid commands makes following valid commands hang or to not be carried out</summary>
			<description>this script causes the controller scaffold to not respond until a restart. Other commands may work:
project --topLevelPackage com.testing.teststuff --projectName Stuff --java 5
persistence setup --database MYSQL --provider HIBERNATE --databaseName stuff --userName sa
entity --class ~.Stuff --testAutomatically
controller scaffold --class ~.web.StuffController --path / --entity ~.Stuff
//response: Controller base path required
//controller sacaffold commands stops responding even for valid commands(not the following)
controller scaffold --class ~.web.StuffController --path /* --entity ~.Stuff
controller scaffold --class ~.web.StuffController --path / --entity ~.Stuff 
//this one should work, no?:
~.Stuff roo&amp;gt; controller --class ~.web.TestController
//response: Please wait - still loading
//no controller commands seem to work at this point</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
			<file type="M">org.springframework.roo.shell.AbstractShell.java</file>
		</fixedFiles>
	</bug>
	<bug id="2294" opendate="2011-04-05 18:27:44" fixdate="2011-04-06 16:57:04" resolution="Complete">
		<buginformation>
			<summary>DataOnDemandMetadata assumes @Column annotation length attribute to be greater the one for an Entity attribute</summary>
			<description>The following code below (lines 656-665) in DataOnDemandMetadata.java assumes an entity&amp;amp;apos;s @Column annotation&amp;amp;apos;s "length" attribute WILL NOT be of size one for a particular column.   This would cause a StringIndexOutOfBoundsException when the code below runs if the entity&amp;amp;apos;s @Column annotation&amp;amp;apos;s  "length" attribute is of size one.   When the Roo shell is spawned it will print the console the following info "String index out of range: -1".
                                else {
					// Check for @Column
					AnnotationMetadata columnAnnotation = MemberFindingUtils.getAnnotationOfType(field.getAnnotations(), COLUMN);
					if (columnAnnotation != null) {
						AnnotationAttributeValue&amp;lt;?&amp;gt; lengthValue = columnAnnotation.getAttribute(new JavaSymbolName("length"));
						if (lengthValue != null &amp;amp;&amp;amp; (initializer.length() + 2) &amp;gt; (Integer) lengthValue.getValue()) 
{
							initializer = initializer.substring(0, (Integer) lengthValue.getValue() - 2);
						}
					}
				}</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2259" opendate="2011-03-23 04:17:11" fixdate="2011-04-06 17:19:18" resolution="Works as Designed">
		<buginformation>
			<summary>web.xml filter ordering can create locale/language character encoding issues</summary>
			<description>when I type a text like :
etta er i texti
Spring (on submit) changes the text to : 
etta er i texti
everything seems to be in UTF-8 but somewhere after submit the text entered gets garbled (or changed between character sets)
This also translates to database, that is the garbled text gets written to the database.
My workaround for this so far is copying a roo project that I had in version 2.5.1.release
which doesnt seem affected by this problem, deleting all objects there and using that as a base (instead of creating a new roo project in sts 2.5.2 or 2.6.0 release)</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1684</link>
		</links>
	</bug>
	<bug id="2190" opendate="2011-03-01 20:51:21" fixdate="2011-04-07 18:15:57" resolution="Complete">
		<buginformation>
			<summary>Upgrade of Roo core bundles results in NPE</summary>
			<description>Attempting to upgrade a bundle which is part of the Roo core infrastructure (or at least referenced by it) will result in an NPE:






 




NullPointerException at




org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.installOrUpgradeAddOn(AddOnRooBotOperationsImpl.java:210)




[org.apache.felix.bundlerepository [2]] Resolver: Update error - Spring




Roo - User Agent Analysis (UAA) Integration




  java.lang.NullPointerException




   at org.springframework.roo.felix.HttpPgpUrlStreamHandlerServiceImpl.openConnection(HttpPgpUrlStreamHandlerServiceImpl.java:75)




   at org.apache.felix.framework.URLHandlersStreamHandlerProxy.openConnection(URLHandlersStreamHandlerProxy.java:271)




   at java.net.URL.openConnection(URL.java:945)




   at org.apache.felix.bundlerepository.impl.FileUtil.openURL(FileUtil.java:196)




   at org.apache.felix.bundlerepository.impl.ResolverImpl.deploy(ResolverImpl.java:563)




   at org.apache.felix.bundlerepository.impl.ObrCommandImpl._deploy(ObrCommandImpl.java:395)




   at org.apache.felix.bundlerepository.impl.ObrCommandImpl.deploy(ObrCommandImpl.java:333)






Steps to reproduce:
roo&amp;gt; addon search uaa
roo&amp;gt; addon upgrade id 1</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2199</link>
		</links>
	</bug>
	<bug id="2302" opendate="2011-04-07 20:20:34" fixdate="2011-04-07 20:41:03" resolution="Complete">
		<buginformation>
			<summary>The GWT Add-On fails on updating the ui.xml file when a field is declared in the governor</summary>
			<description>The message that is returned is "NOT_FOUND_ERR: An attempt is made to reference a node in a context where it does not exist."</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2269" opendate="2011-03-28 01:57:28" fixdate="2011-04-09 04:09:18" resolution="Complete">
		<buginformation>
			<summary>GAE Login Widget Not Initialized</summary>
			<description>The call to initialize the GAE login-widget driver has been removed from generated GWT source code with Roo version 1.1.2.  This is causing security logic to malfunction for the scaffold app.
The affected method is init() in ~.client.scaffold.ScaffoldDesktopApp.java
Roo 1.1.1 generates:
    // AppEngine user authentication
    new GaeLoginWidgetDriver(requestFactory).setWidget(shell.loginWidget);
    new ReloadOnAuthenticationFailure().register(eventBus);
Roo 1.1.2 generates:
    // AppEngine user authentication
    // AppEngine user authentication
    new ReloadOnAuthenticationFailure().register(eventBus);
Adding the missing line back in fixes the problem.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtConfigServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2312" opendate="2011-04-09 20:38:11" fixdate="2011-04-10 06:40:15" resolution="Complete">
		<buginformation>
			<summary>DataOnDemandMetadataProvider and IntegrationTestMetadataProvider not responding to relevant external changes due to late dependency registration</summary>
			<description>Dependency registrations in DataOnDemandMetadataProvider and IntegrationTestMetadataProvider are occurring too late which means that changes to the external model are not being passed onto the these providers.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2311" opendate="2011-04-09 20:31:21" fixdate="2011-04-10 06:40:42" resolution="Complete">
		<buginformation>
			<summary>Infinite loop if JavaTypePersistenceMetadataDetails for co-dependent entities cannot be created</summary>
			<description>If a JavaTypePersistenceMetadataDetails cannot be created, in my case the identifier accessor field could not be found, for an entity which is depended on by an entity which in turn is also depended on by the JavaTypePersistenceMetadataDetails-less entity an infinite loop is occurs. The standard behaviour should be that a partial Metatdata is created and then is revisited, this would occur if the lack of JavaTypePersistenceMetadataDetails was ignored and Metadata creation proceeds.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="2225" opendate="2011-03-11 03:38:08" fixdate="2011-04-10 20:50:13" resolution="Complete">
		<buginformation>
			<summary>ApplicationConversionServiceFactoryBean does not set all Converters</summary>
			<description>When overwriting some Converters for some classes in ApplicationConversionServiceFactoryBean the default roo-generated converters for the other classes are ignored.
A Workaround is to copy all Converters to the ApplicationConversionServiceFactoryBean.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.details.MemberFindingUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
		</fixedFiles>
	</bug>
	<bug id="2315" opendate="2011-04-11 01:55:17" fixdate="2011-04-11 01:56:48" resolution="Fixed">
		<buginformation>
			<summary>WebScaffoldMetadataProviderImpl should use AbstractMemberDiscoveringItdMetadataProvider</summary>
			<description>WebScaffoldMetadataProviderImpl should use AbstractMemberDiscoveringItdMetadataProvider</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadataProviderImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2316" opendate="2011-04-11 02:13:44" fixdate="2011-04-11 02:17:33" resolution="Complete">
		<buginformation>
			<summary>GWT Add-On adds a method to a proxy type twice in some cases</summary>
			<description></description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2320" opendate="2011-04-11 04:48:12" fixdate="2011-04-11 04:48:52" resolution="Complete">
		<buginformation>
			<summary>Background thread names incorrectly displayed when shell starts up with developmentMode=false system property</summary>
			<description>"[Spring Roo Process Manager Background Polling Thread]" incorrectly displays when development mode is false at startup time (eg as per roo.sh startup script).</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.jline.JLineLogHandler.java</file>
		</fixedFiles>
	</bug>
	<bug id="2266" opendate="2011-03-24 16:49:30" fixdate="2011-04-11 07:18:11" resolution="Complete">
		<buginformation>
			<summary>CustomData tags get lost when ITD supplied fields or methods get pushed in to the corresponding java sources</summary>
			<description>If a Metadata producing type tags a field or method and the member is already available in the corresponding governor, the tagged MD is lost in favour of the original MD (most likely JavaParser...MD). The tagged MD is lost in AbstractMemberHoldingTypeDetailsBuilder:






public final boolean addMethod(MethodMetadataBuilder method) {




   if (method == null || !getDeclaredByMetadataId().equals(method.getDeclaredByMetadataId())) {




      // the method may have custom data tags which are lost here 




      return false;




   }




   onAddMethod(method);




   return declaredMethods.add(method);




}





</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.IdentifiableJavaStructureCustomDataKey.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.CustomDataKeyDecoratorImpl.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.ConstructorMetadataCustomDataKey.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.PersistenceCustomDataKeys.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.TypeMatcher.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.FieldMatcher.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.InvocableMemberMetadataCustomDataKey.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.IdentifiableAnnotatedJavaStructureCustomDataKey.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.FieldMetadataCustomDataKey.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.MethodMatcher.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.Matcher.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.CustomDataKeyDecorator.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.MethodMetadataCustomDataKey.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.tagkeys.MemberHoldingTypeDetailsCustomDataKey.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.ConstructorMatcher.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.json.CustomDataJsonTags.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.model.CustomDataImpl.java</file>
			<file type="M">org.springframework.roo.model.CustomDataBuilder.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.FieldTagger.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.MethodTagger.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.model.TagKey.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfManagedBeanMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.IdentifiableJavaStructureTagKey.java</file>
			<file type="M">org.springframework.roo.model.AbstractCustomDataAccessorBuilder.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.FieldMetadataTagKey.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.ConstructorTagger.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.InvocableMemberMetadataTagKey.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.TypeTagger.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.MemberHoldingTypeDetailsTagKey.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.CustomDataPersistenceTags.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.MethodMetadataTagKey.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="D">org.springframework.roo.classpath.scanner.GlobalMemberDetailsDecorator.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.TaggerRegistry.java</file>
			<file type="M">org.springframework.roo.addon.serializable.CustomDataSerializableTags.java</file>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProvider.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.ConstructorMetadataTagKey.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.ItdTypeDetailsTagKey.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.Tagger.java</file>
			<file type="M">org.springframework.roo.model.CustomDataAccessor.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.IdentifiableAnnotatedJavaStructureTagKey.java</file>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServicesImpl.java</file>
			<file type="M">org.springframework.roo.model.CustomData.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.taggers.TaggerRegistryImpl.java</file>
			<file type="D">org.springframework.roo.classpath.customdata.tagkeys.TagKey.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsImpl.java</file>
			<file type="M">org.springframework.roo.classpath.details.MemberFindingUtils.java</file>
			<file type="D">org.springframework.roo.addon.jpa.JpaMemberDetailsDecorator.java</file>
			<file type="D">org.springframework.roo.classpath.scanner.GlobalCustomDataRequest.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.AnnotatedJavaType.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2276</link>
		</links>
	</bug>
	<bug id="2327" opendate="2011-04-12 13:27:12" fixdate="2011-04-12 22:04:21" resolution="Complete">
		<buginformation>
			<summary>When upgrading from 1.1.2.RELEASE to 1.1.3.RELEASE, the tag files are not updated automatically which results in the application no longer working</summary>
			<description>addon-web-mvc-jsp
When running 1.1.3.RELEASE for the first time, ROO
Updated SRC_MAIN_WEBAPP/WEB-INF/views/users/list.jspx
and 
Updated ROOT/pom.xml [Updated property 'roo.version' to '1.1.3.RELEASE']
as well as some .aj files.
But I now get the following exception:
Caused by: org.apache.jasper.JasperException: /WEB-INF/views/images/list.jspx(8,177) Attribute dateTimePattern invalid for tag column according to TLD
I realize I can update the tag file myself to remove this error, but ROO should automatically update all tag files if they have not been customized by the user during an upgrade.
</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="2328" opendate="2011-04-12 13:33:45" fixdate="2011-04-12 22:25:42" resolution="Fixed">
		<buginformation>
			<summary>ROO should not add a dependency to the pom if it is already in the pom as "provided"</summary>
			<description>Example:
If I change the jstl dependency to provided scope in the pom, ROO will re-add the dependency the next time I run the controller scaffold command.  The end result is I now have jstl defined twice in the pom.  Once without scope and once with provided.
This should not happen with any dependency, so I am not sure if this is specific to the addon-web-mvc-controller or it would happen with other add ons as well.  
This is related to ROO-1006</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.Dependency.java</file>
		</fixedFiles>
	</bug>
	<bug id="2282" opendate="2011-04-03 15:48:04" fixdate="2011-04-12 23:27:11" resolution="Complete">
		<buginformation>
			<summary>GwtMetadataProviderImpl.onFileEvent triggers GwtConfigService incorrectly on project command</summary>
			<description>For some reason GwtMetadataProviderImpl also acts as FileEventListener (James would know why) which triggers an exception (see below) when running the &amp;amp;apos;project&amp;amp;apos; command. 
To reproduce paste the following lines into a fresh project while the Roo shell still loads (the command execution will be deferred until the shell has completely loaded but it will still fail):






project --topLevelPackage com.testing.teststuff --projectName Stuff --java 5




persistence setup --database MYSQL --provider HIBERNATE --databaseName stuff --userName sa




entity --class ~.Stuff --testAutomatically






Exception:






Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.




roo&amp;gt; project --topLevelPackage com.testing.teststuff --projectName Stuff --java 5




5838c4e Created ROOT/pom.xml




01b61c5 Updated ROOT/pom.xml [Added dependencies javax.annotation:jsr250-api:1.0, javax.xml.bind:jaxb-api:2.1]




2ad3c24 Updated ROOT/pom.xml




5742550 Updated ROOT/pom.xml [Added dependencies com.google.gwt:gwt-servlet:2.2.0, com.google.gwt:gwt-user:2.2.0, org.json:json:20090211, com.googlecode.gwt.inject:gin:1.5, javax.validation:validation-api:1.0.0.GA, xalan:xalan:2.7.1]




a4a412a Updated ROOT/pom.xml [Added plugin gwt-maven-plugin]




web.xml not found; cannot continue




java.lang.IllegalArgumentException: web.xml not found; cannot continue




    at org.springframework.roo.support.util.Assert.isTrue(Assert.java:65)




    at org.springframework.roo.addon.gwt.GwtConfigServiceImpl.updateWebXml(GwtConfigServiceImpl.java:257)




    at org.springframework.roo.addon.gwt.GwtConfigServiceImpl.updateConfiguration(GwtConfigServiceImpl.java:78)




    at org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.onFileEvent(GwtMetadataProviderImpl.java:94)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:330)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanNotified(PollingFileMonitorService.java:213)




    at org.springframework.roo.process.manager.internal.DefaultFileManager.scan(DefaultFileManager.java:141)




    at org.springframework.roo.project.MavenOperationsImpl.createProject(MavenOperationsImpl.java:108)




    at org.springframework.roo.project.MavenCommands.createProject(MavenCommands.java:36)




    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)




    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)




    at java.lang.reflect.Method.invoke(Method.java:597)




    at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy$1.callback(ProcessManagerHostedExecutionStrategy.java:49)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:180)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:143)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)




    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:181)




    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:358)




    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:132)




    at java.lang.Thread.run(Thread.java:680)






Does this MD provider really need to listen to File events?</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.3.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ui.MobileProxyListView-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.shared.scaffold.ScaffoldRequestFactory-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.shared.gae.GaeUserServiceRequest-template.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadata.java</file>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProvider.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtConfigService.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtConfigServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtFileListenerImpl.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtFileListener.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtFIleListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManagerImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManager.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="is depended on by">2331</link>
		</links>
	</bug>
	<bug id="2344" opendate="2011-04-14 19:12:42" fixdate="2011-04-14 19:17:25" resolution="Complete">
		<buginformation>
			<summary>JpaOperationsImpl is not removing Plugins from ProjectOperations when carrying out a Plugin removal</summary>
			<description>JpaOperationsImpl removes a Plugin from the pom.xml file but doesn&amp;amp;apos;t convey this change to ProjectOperation causing the Plugin state in ProjectOperation to be become out of sync and PluginListeners not be to notified.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2351" opendate="2011-04-15 23:08:53" fixdate="2011-04-15 23:40:44" resolution="Complete">
		<buginformation>
			<summary>NPE thrown on bundle.getHeaders().get("Bundle-SymbolicName").toString() </summary>
			<description>The call to the toString() method on bundle.getHeaders().get("Bundle-SymbolicName") throws a NullPointerException if bundle.getHeaders().get("Bundle-SymbolicName") returns null. Not sure why this started happening. </description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2353</link>
		</links>
	</bug>
	<bug id="2346" opendate="2011-04-15 06:41:15" fixdate="2011-04-16 00:20:04" resolution="Complete">
		<buginformation>
			<summary>Exception being thrown when the method to set an embeded ID is implemented in the governor</summary>
			<description>The following Stack trace is output in the Shell when the setEmbeddedId method is implemented in the DataOnDemand java class.
Method &amp;amp;apos;setEmbeddedId&amp;amp;apos; already defined in target type &amp;amp;apos;com.iquo.igneous.brokersystem.server.domain.working.client.ClientDataOnDemand&amp;amp;apos; (ITD target &amp;amp;apos;com.iquo.igneous.brokersystem.server.domain.working.client.ClientDataOnDemand_Roo_DataOnDemand&amp;amp;apos;)
    java.lang.IllegalArgumentException: Method &amp;amp;apos;setEmbeddedId&amp;amp;apos; already defined in target type &amp;amp;apos;com.iquo.igneous.brokersystem.server.domain.working.client.ClientDataOnDemand&amp;amp;apos; (ITD target &amp;amp;apos;com.iquo.igneous.brokersystem.server.domain.working.client.ClientDataOnDemand_Roo_DataOnDemand&amp;amp;apos;)
        at org.springframework.roo.support.util.Assert.isNull(Assert.java:89)
        at org.springframework.roo.classpath.details.ItdTypeDetailsBuilder.onAddMethod(ItdTypeDetailsBuilder.java:84)
        at org.springframework.roo.classpath.details.AbstractMemberHoldingTypeDetailsBuilder.addMethod(AbstractMemberHoldingTypeDetailsBuilder.java:138)
        at org.springframework.roo.classpath.details.AbstractMemberHoldingTypeDetailsBuilder.addMethod(AbstractMemberHoldingTypeDetailsBuilder.java:156)
        at org.springframework.roo.addon.dod.DataOnDemandMetadata.&amp;lt;init&amp;gt;(DataOnDemandMetadata.java:136)</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2353" opendate="2011-04-16 04:11:00" fixdate="2011-04-16 16:48:26" resolution="Duplicate">
		<buginformation>
			<summary>NullPointerException on performing "addon list" in the Roo shell</summary>
			<description></description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2351</link>
		</links>
	</bug>
	<bug id="2354" opendate="2011-04-17 15:18:58" fixdate="2011-04-17 15:22:36" resolution="Complete">
		<buginformation>
			<summary>UnknownHostException thrown on Roo startup in DBRE project with no Internet connection</summary>
			<description>If a user starts the Roo shell in a DBRE project with no Internet connection, an UnknownHostException stack trace is displayed when Roo  deserializes the database from dbre.xml file due to an attempt to read the Torque database DTD located at db.apache.org</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Supersede" description="is superseded by">2355</link>
		</links>
	</bug>
	<bug id="2343" opendate="2011-04-14 17:18:20" fixdate="2011-04-18 00:38:30" resolution="Complete">
		<buginformation>
			<summary>JavaBean ITD doesn&amp;apos;t refresh when changing to and from GAE</summary>
			<description>The JavaBean ITD isn&amp;amp;apos;t being refreshed when changing persistence providers to and from GAE.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2333" opendate="2011-04-13 00:02:50" fixdate="2011-04-18 00:38:45" resolution="Complete">
		<buginformation>
			<summary>GWT ApplicationRequestFactory class does not update when GAE is enabled or disabled unless the Roo shell is restarted</summary>
			<description>A shell restart is required when GAE is enabled or disabled after running the persistence setup command</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.gae.GaeHelper-template.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManagerImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldApp-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldMobileApp-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldDesktopApp-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.gae.GaeLoginWidgetDriver-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2369" opendate="2011-04-19 09:03:35" fixdate="2011-04-19 16:22:59" resolution="Complete">
		<buginformation>
			<summary>A certain field variable breaks ROO. It only writes "Index: 0, Size: 0" into the console and does not do anything anymore.</summary>
			<description>Please see the attached extremely simple ROO project, which reproduces the problem. I created it with ROO and also created a tst directory and a test java file in its src/main/java directory.
What happens is that ROO stops working. It says "Index: 0, Size: 0" in the ROO console (started from the command line to be sure...) and does not create any .aj files any more.
(I did not see that problem with 1.1.2.RELEASE.)
Thanks for having a look at it!</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2371" opendate="2011-04-19 23:36:39" fixdate="2011-04-20 20:18:52" resolution="Complete">
		<buginformation>
			<summary>Removing a RooDbManaged annotation from a type whilst Roo isn&amp;apos;t running and then loading the Roo causes an exception</summary>
			<description>The message raised is "Type for table &amp;amp;apos;employed&amp;amp;apos; could not be found" for the attached project.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.classpath.TypeLocationService.java</file>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2368" opendate="2011-04-19 04:07:39" fixdate="2011-04-20 22:14:26" resolution="Complete">
		<buginformation>
			<summary>Overriding method results in Method &amp;apos;*&amp;apos; already defined in target type</summary>
			<description>I had a working project running 1.1.2. I upgraded to 1.1.3 and the following issues began. I have not found a work-around but wonder if there is a technique for overriding methods that I should be using and am not.
In my AthleteController I have the following:
Code:
@RequestMapping(value = "/
{id}
", method = RequestMethod.GET)
    public String show(@PathVariable("id") Long id, Model uiModel) 
{
	AthleteController.addBirthdayDateTimeFormatPatterns(uiModel);
	uiModel.addAttribute("athlete", Athlete.findAthlete(id));
	uiModel.addAttribute("itemId", id);
	return "athletes/show";
    }

and in my roo shell it instantly complains:
Code:
Method &amp;amp;apos;show&amp;amp;apos; already defined in target type &amp;amp;apos;com.blah.controllers.AthleteController&amp;amp;apos; (ITD target &amp;amp;apos;com.blah.controllers.AthleteController_Roo_Controller&amp;amp;apos;)
For basically every method that I have overridden in my controllers it complains. (As I fix one, the next one comes up complaining in the shell.) Renaming the method name does stop the complaining,but Roo then also re-gen&amp;amp;apos;s the method in the Roo class.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.details.MemberFindingUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2396</link>
			<link type="Duplicate" description="is duplicated by">2439</link>
			<link type="Relate" description="relates to">1788</link>
			<link type="Relate" description="is related to">2362</link>
			<link type="Relate" description="is related to">2373</link>
		</links>
	</bug>
	<bug id="2362" opendate="2011-04-18 08:34:52" fixdate="2011-04-20 22:15:50" resolution="Complete">
		<buginformation>
			<summary>Finders not working in WebScaffold</summary>
			<description>Just ran the petclinic script with 1.1.3 and saw no sign of the method that actually does call the finder method on the domain object
This is ok
    @RequestMapping(params = 
{ "find=ByNameAndWeight", "form" }
, method = RequestMethod.GET)
    public String PetController.findPetsByNameAndWeightForm(Model uiModel) 
{
        return "pets/findPetsByNameAndWeight";
    }

This is missing?
    @RequestMapping(params = "find=ByNameAndWeight", method = RequestMethod.GET)
    public String PetController.findPetsByNameAndWeight(@RequestParam("name") String name, @RequestParam("weight") Float weight, Model uiModel) 
{
        uiModel.addAttribute("pets", Pet.findPetsByNameAndWeight(name, weight).getResultList());
        return "pets/list";
    }

Since this method is missing, spring ends up calling
    @RequestMapping(method = RequestMethod.GET)
    public String PetController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
which calls Pet.findAllPets()
</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">2368</link>
			<link type="Relate" description="relates to">2373</link>
		</links>
	</bug>
	<bug id="2359" opendate="2011-04-18 05:16:43" fixdate="2011-04-20 23:25:01" resolution="Complete">
		<buginformation>
			<summary>Finder AspectJ MEMBER OF select statement format incorrect</summary>
			<description>Upgraded from 1.1.2 to 1.1.3 finders have been changed so that now using o rather than the entity name e.g.
SELECT o FROM EntityName AS o WHERE ...
rather than:
SELECT EntityName FROM EntityName AS EntityName WHERE ...
as for 1.1.2
This is fine but the MEMBER of statement has not been updated when referencing a collection within the entity e.g.
1.1.2 code:
SELECT entityName FROM EntityName AS entityName WHERE :member_item0 MEMBER OF entityName.members
1.1.3 code:
SELECT o FROM EntityName AS o WHERE :member_item0 MEMBER OF entityName.members
this should be:
SELECT o FROM EntityName AS o WHERE :member_item0 MEMBER OF o.members
The fix for this is to move affected finders into entity class and make appropriate changes.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2388</link>
		</links>
	</bug>
	<bug id="2350" opendate="2011-04-15 18:31:40" fixdate="2011-04-20 23:34:05" resolution="Complete">
		<buginformation>
			<summary>GAE - @ManyToOne property never set / inneficient use</summary>
			<description>When having a @ManyToOne field with GOOGLE_APP_ENGINE, Spring ROO generates code that never sets the field and re-fetches it every time it is accessed:






// Spring Roo 1.1.4.BUILD-SNAPSHOT [rev c6e48eb] log opened at 2011-04-15 18:13:20




project --topLevelPackage com.test




persistence setup --provider DATANUCLEUS --database GOOGLE_APP_ENGINE 




entity --class ~.User --serializable --permitReservedWords 




field string --fieldName name --notNull 




json all




controller scaffold --class ~.web.UserController --entity ~.User




entity --class ~.UserRole --serializable 




field string --fieldName name --notNull 




field reference --fieldName user --type ~.User --cardinality MANY_TO_ONE --permitReservedWords 




controller scaffold --class ~.web.UserRoleController




focus --class ~.User




field set --fieldName roles --type ~.UserRole --cardinality ONE_TO_MANY --mappedBy user 




quit




// Spring Roo 1.1.4.BUILD-SNAPSHOT [rev c6e48eb] log closed at 2011-04-15 18:14:49






Generates a UserRole class:






@RooJavaBean




@RooToString




@RooEntity




@RooSerializable




public class UserRole {









    @NotNull




    private String name;









    @ManyToOne




    private User user;




}






which generates UserRole_Roo_JavaBean.aj that contains the getter and setter for the User class






    public User UserRole.getUser() {




        if (this.userId != null) {




            this.user = User.findUser(this.userId);




        } else {




            this.user = null;




        }




        return this.user;




    }




    




    public void UserRole.setUser(User user) {




        if (user != null) {




            if (user.getId () == null) {




                user.persist();




            }




            this.userId = user.getId();




        } else {




            this.userId = null;




        }




    } 






HOWEVER, every time role.user is accessed, a query is made.  This is very inefficient, especially if you access this property multiple times in a code block.
Suggestion, take advantage of the field you are marking transient and generate the following instead:






public User UserRole.getUser() {




    if (this.userId != null) {




        if (this.user == null || this.user.getId() != this.userId) {




            this.user = User.findUser(this.userId);




        }




    } else {




        this.user = null;




    }




    return this.user;




}









public void UserRole.setUser(User user) {




    if (user != null) {




        if (user.getId () == null) {




            user.persist();




        }




        this.userId = user.getId();




    } else {




        this.userId = null;




    }




    this.user = user;




}






This way the now marked transient field is utilized and subsequent requests don&amp;amp;apos;t result in calls to the database.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2357" opendate="2011-04-18 02:52:53" fixdate="2011-04-21 14:48:06" resolution="Complete">
		<buginformation>
			<summary>Error with the generated code in *Roo_Controller.aj, *Roo_DataOnDemand.aj and *Roo_IntegrationTest.aj when an entity class extends an other entiy class</summary>
			<description>The code generated with in the aspectJ files has a mix of problems that mean that the project will not compile, for example with in the controller it is calling the mothod findAllPolicys from the parent class rather than calling findAllMotorPolicys, and this is then generating a type conversion error as the List&amp;lt;MotorPolicy&amp;gt; is what is expected but List&amp;lt;Policy&amp;gt; is what is being returned. This is also happening in the IntegrationTest aspects and DataOnDemand. The other issue is that in the DataOnDemand aspects the set methods used to propulate the data is being set with the parameters of ( Policy , int ) rather than ( MotorPolicy, int ). I will attach some of the class and aspect files from the project to show examples as to what is happening.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.MethodMatcher.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsBuilder.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2381</link>
		</links>
	</bug>
	<bug id="2347" opendate="2011-04-15 06:42:54" fixdate="2011-04-22 19:47:26" resolution="Complete">
		<buginformation>
			<summary>@DateTimeFormat and @NumberFormat styles are not reflected correctly when using GWT</summary>
			<description>The only style supported is the following:
@DateTimeFormat(style="S-")
If I use the style="SS" or style="MM" or anything at all, roo will always set the format to PredefinedFormat.DATE_SHORT in &amp;lt;entity&amp;gt;DetailsView_Roo_Gwt.java managed file. This is seems to be related to the getFormatter() method in GwtProxyProperty in the org.springframework.roo.addon.gwt.
The same problem occurs if I use style=Style.CURRENCY. There are probably many other style values that should be appropriately reflected in roo.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtProxyProperty.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2295" opendate="2011-04-06 00:42:55" fixdate="2011-04-26 19:25:55" resolution="Complete">
		<buginformation>
			<summary>GWT raise error using domain hierarhy</summary>
			<description>I used nightly build version spring-roo-1.1.3.BUILD-SNAPSHOT_20110404.105742-cff4477.
The domain hierarchy doesn&amp;amp;apos;t work properly at runtime stage.
It is compiled fine. But error is raised when page is opened in browser. gwt:run is used.
Add the following linese to expenses.roo to reproduce error:
entity --class ~.server.domain.Generic --abstract
entity --class ~.server.domain.Employee --extends Generic --testAutomatically
field string --fieldName test  --class Generic</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="depends on">2379</link>
		</links>
	</bug>
	<bug id="2381" opendate="2011-04-25 19:54:14" fixdate="2011-04-27 15:42:05" resolution="Duplicate">
		<buginformation>
			<summary>Generated source code for classes extending abstract classes instantiates superclass instead of subclass for test data on demand depending on class name and top-level package name</summary>
			<description>The generated test file &amp;lt;classname&amp;gt;DataOnDemand_Roo_DataOnDemand.aj incorrectly uses the abstract superclass instead of the subclass.  For instance, the method getNewTransient&amp;lt;classname&amp;gt; tries to instantiate the abstract class.  The behavior varies depending on the name of the class, and also depending on the top level package name.  For instance, class name OperationalEnvironment triggers this behavior, while class name AperationalEnvironment does not.  (this name was used while debugging a complex data model).  A similar behavior was observed with name pairs Cloud and CloudProvider.  Changing the top level package name can actually reverse the behavior for these pairs of names.  Sample roo script files attached for both classes.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.MethodMatcher.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsBuilder.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2357</link>
		</links>
	</bug>
	<bug id="2374" opendate="2011-04-20 22:10:41" fixdate="2011-04-27 17:52:27" resolution="Complete">
		<buginformation>
			<summary>web gwt setup results in compilation errors</summary>
			<description>I tried to create a simple Spring Roo project with GWT frontend. There are compilation errors after I run the command web gwt setup.
Relevant portion of the maven build log:
/21/11 12:59:04 AM EDT: [WARN] Failure to transfer asm:asm/maven-metadata.xml from file:../../local.repository/trunk was cached in the local repository, resolution will not be reattempted until the update interval of local.repository has elapsed or updates are forced. Original error: Could not transfer metadata asm:asm/maven-metadata.xml from/to local.repository (file:../../local.repository/trunk): No connector available to access repository local.repository (file:../../local.repository/trunk) of type legacy using the available factories AsyncRepositoryConnectorFactory, WagonRepositoryConnectorFactory
4/21/11 12:59:04 AM EDT: Generating sources /ererg/pom.xml
4/21/11 12:59:05 AM EDT: [WARN] Failure to transfer asm:asm/maven-metadata.xml from file:../../local.repository/trunk was cached in the local repository, resolution will not be reattempted until the update interval of local.repository has elapsed or updates are forced. Original error: Could not transfer metadata asm:asm/maven-metadata.xml from/to local.repository (file:../../local.repository/trunk): No connector available to access repository local.repository (file:../../local.repository/trunk) of type legacy using the available factories AsyncRepositoryConnectorFactory, WagonRepositoryConnectorFactory
4/21/11 12:59:09 AM EDT: [ERROR] The import com.google.appengine cannot be resolved
4/21/11 12:59:09 AM EDT: [ERROR] The import com.google.appengine cannot be resolved
4/21/11 12:59:09 AM EDT: [ERROR] UserService cannot be resolved to a type
4/21/11 12:59:09 AM EDT: [ERROR] UserServiceFactory cannot be resolved
4/21/11 12:59:10 AM EDT: [ERROR] The import com.google.appengine cannot be resolved
4/21/11 12:59:10 AM EDT: [ERROR] User cannot be resolved to a type</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">2204</link>
			<link type="Relate" description="is related to">2252</link>
		</links>
	</bug>
	<bug id="2379" opendate="2011-04-23 14:38:45" fixdate="2011-04-27 17:59:34" resolution="Complete">
		<buginformation>
			<summary>Push-in of methods from _Roo_Entity.aj causes method to be removed from corresponding Request .java</summary>
			<description>Push-in persist method from MyEntity_Roo_Entity.aj to MyEntity.java works if you do manually edit MyEntity. However after editing the persist() in MyEntity, Roo removes the persist() from ~.client.managed.request.MyEntityRequest. This causes a compile error. Manually replacing the method in MyEntityRequest fixes this until MyEntity is edited again. </description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateDataHolder.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManager.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtUtils.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.TemplateResourceLoader.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="is depended on by">2295</link>
		</links>
	</bug>
	<bug id="2386" opendate="2011-04-27 18:30:24" fixdate="2011-04-27 18:32:30" resolution="Complete">
		<buginformation>
			<summary>Avoid potential NPE in accessing "shell" in AddOnRooBotOperationsImpl</summary>
			<description>Though the shell is injected in by Felix and should not be null, it is checked for null after code which calls methods on it. </description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2388" opendate="2011-04-28 04:52:29" fixdate="2011-04-28 05:11:55" resolution="Duplicate">
		<buginformation>
			<summary>Roo Finder is not correctly generated</summary>
			<description>public static TypedQuery&amp;lt;Controlway&amp;gt; Controlway.findControlwaysByGroups(Set&amp;lt;Controlgroup&amp;gt; groups) {
        if (groups == null) throw new IllegalArgumentException("The groups argument is required");
        EntityManager em = Controlway.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM Controlway AS o WHERE");
        for (int i = 0; i &amp;lt; groups.size(); i++) 
{
            if (i &amp;gt; 0) queryBuilder.append(" AND");
            queryBuilder.append(" :groups_item").append(i).append(" MEMBER OF controlway.groups"); // here the &amp;amp;apos;controlway&amp;amp;apos; is wrong if i change it to &amp;amp;apos;o&amp;amp;apos; than it works
        }
        TypedQuery&amp;lt;Controlway&amp;gt; q = em.createQuery(queryBuilder.toString(), Controlway.class);
        int groupsIndex = 0;
        for (Controlgroup _controlgroup: groups) 
{
            q.setParameter("groups_item" + groupsIndex++, _controlgroup);
        }
        return q;
    }
If I start the Roo shell it will override my changes and this is very annoying</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2359</link>
		</links>
	</bug>
	<bug id="2392" opendate="2011-05-01 18:28:13" fixdate="2011-05-01 18:35:46" resolution="Complete">
		<buginformation>
			<summary>ToString add-on removes toString method if MemberDetails is not complete</summary>
			<description>Each time ToStringMetadataProvider is called, the toString method is built but if the last pass does not detect any accessors, the toString method is null and is removed from the ITD. This can be demonstrated if fields and accessors are introduced via DBRE</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.tostring.ToStringMetadata.java</file>
			<file type="M">org.springframework.roo.addon.tostring.ToStringMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2380" opendate="2011-04-24 16:07:42" fixdate="2011-05-01 19:43:07" resolution="Complete">
		<buginformation>
			<summary>Customized ui.xml files overwritten by Roo</summary>
			<description>Roo Guide 12.5 states, "Roo looks for an element that has an "id=boundElementHolder" attribute, if a "boundElementHolder" element is not found Roo leaves the file."
Despite this, editing this id to "cisElementHolder" in *DetailView.ui.xml and *EditView.ui.xml does not prevent customizations to these files from being overwritten by Roo including setting the id back to boundElementHolder.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2348" opendate="2011-04-15 08:10:36" fixdate="2011-05-02 19:10:20" resolution="Fixed">
		<buginformation>
			<summary>Spring Web Flow Support broken</summary>
			<description>After issuing
web flow
there is the following configuration in webflow-config.xml:
	&amp;lt;!-- Places the ConversionService in request scope so it&amp;amp;apos;s available during request processing --&amp;gt;
	&amp;lt;bean id="conversionServiceExposingInterceptor" class="org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor"&amp;gt; 
		&amp;lt;constructor-arg ref="applicationConversionService" /&amp;gt; 
	&amp;lt;/bean&amp;gt; 
This does not work. I added
	&amp;lt;bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" /&amp;gt;
to webmvc-config.xml and change the config above to
	&amp;lt;bean id="conversionServiceExposingInterceptor" class="org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor"&amp;gt; 
		&amp;lt;constructor-arg ref="conversionService" /&amp;gt; 
	&amp;lt;/bean&amp;gt; 
&amp;lt;mvc:annotation-driven /&amp;gt; registers a ConversionService but I am not sure about the bean name.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceOperationsImplTests.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperationsImpl.java</file>
			<file type="D">org.springframework.roo.addon.web.mvc.controller.converter.XmlTemplate.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">2275</link>
		</links>
	</bug>
	<bug id="2396" opendate="2011-05-03 16:00:31" fixdate="2011-05-03 18:09:43" resolution="Duplicate">
		<buginformation>
			<summary>pushing in controller method breaks roo shell</summary>
			<description>Pushing a controller method in from the generated aspect causes the roo shell to complain about the method already existing in the target type
"Method &amp;amp;apos;show&amp;amp;apos; already defined in target type &amp;amp;apos;com.company.web.ThermalSpaceController&amp;amp;apos; (ITD target &amp;amp;apos;com.company.web.ThermalSpaceController_Roo_Controller&amp;amp;apos;)"
Even worse, the roo shell apparently fails to continue executing after issuing that warning, so once a method has been pushed in, no changes to any other file in the project will be correctly round-tripped in the shell.  In my case, I made changes to some of my entities, none of which were reflected in the generated aspects - no new methods in toString(), no changes to _Roo_Entity, etc.  It took me a very long time to determine that the problem was that I had pushed in a single controller method.  I didn&amp;amp;apos;t even modify the method.  I hadn&amp;amp;apos;t gotten that far yet.  I pushed the method in, then attempted to modify a couple of entities in a manner that would then require changes to the controller, but I could not get the entities to update.
YOu can see my original thread about the problem, before I figured out what was causing it, here:
http://forum.springsource.org/showthread.php?t=108776
I started a second thread to discuss the problem that I eventually discovered:
http://forum.springsource.org/showthread.php?t=108779
Note - If I change the name of the method in the java file, then the problem goes away.  However, roo continues to generate the equivalent method with the exact same RequestMapping.  So then, when I run the code, I get complaints about ambiguous handler methods.  I&amp;amp;apos;m ok with changing the method name, but roo then needs to match on RequestMapping annotations and strip any methods in the generated aspects which match mappings in the java file.  Or something.  Roo is unusable as it stands today.  Once you&amp;amp;apos;ve modified a single controller, all round-tripping appears to be broken</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.details.MemberFindingUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2368</link>
		</links>
	</bug>
	<bug id="2400" opendate="2011-05-04 22:37:55" fixdate="2011-05-05 00:01:02" resolution="Complete">
		<buginformation>
			<summary>GAE - ROO Auto-generates code for fields marked as @Transient</summary>
			<description>I have a class with the following fields:






    @Transient private Type type;




    @Transient private Category category;




    @Transient private SubCategory subCategory;






I do not want ROO to generate persistence code for them, but although they are marked as transient, ROO still generated the following:
Image_Roo_JavaBean.aj






    private Long Image._typeId;




    




    private Long Image._categoryId;




    




    private Long Image._subCategoryId;









   public Type Image.getType() {




        if (this._typeId != null) {




            if (this.type == null || this.type.getId() != this._typeId) {




                this.type = Type.findType(this._typeId);




            }




        } else {




            this.type = null;




        }




        return this.type;




    }




    




    public void Image.setType(Type type) {




        if (type != null) {




            if (type.getId () == null) {




                type.persist();




            }




            this._typeId = type.getId();




        } else {




            this._typeId = null;




        }




        this.type = type;




    }




    




    public Long Image.getCategoryId() {




        return this.categoryId;




    }




    




    public void Image.setCategoryId(Long categoryId) {




        this.categoryId = categoryId;




    }




    




    public Category Image.getCategory() {




        if (this._categoryId != null) {




            if (this.category == null || this.category.getId() != this._categoryId) {




                this.category = Category.findCategory(this._categoryId);




            }




        } else {




            this.category = null;




        }




        return this.category;




    }




    




    public void Image.setCategory(Category category) {




        if (category != null) {




            if (category.getId () == null) {




                category.persist();




            }




            this._categoryId = category.getId();




        } else {




            this._categoryId = null;




        }




        this.category = category;




    }




    




    public Long Image.getSubCategoryId() {




        return this.subCategoryId;




    }




    




    public void Image.setSubCategoryId(Long subCategoryId) {




        this.subCategoryId = subCategoryId;




    }




    




    public SubCategory Image.getSubCategory() {




        if (this._subCategoryId != null) {




            if (this.subCategory == null || this.subCategory.getId() != this._subCategoryId) {




                this.subCategory = SubCategory.findSubCategory(this._subCategoryId);




            }




        } else {




            this.subCategory = null;




        }




        return this.subCategory;




    }




    




    public void Image.setSubCategory(SubCategory subCategory) {




        if (subCategory != null) {




            if (subCategory.getId () == null) {




                subCategory.persist();




            }




            this._subCategoryId = subCategory.getId();




        } else {




            this._subCategoryId = null;




        }




        this.subCategory = subCategory;




    }






The problem with this is that when I persist my class, I get 3 irrelevant properties in my datastore that are causing me grief.
As a workaround, I tried adding my own getters and setters to the class.  This would be ok, but it still generates just the fields:






    private Long Image._typeId;




    




    private Long Image._categoryId;




    




    private Long Image._subCategoryId;






How do I get it to stop?</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2403" opendate="2011-05-07 06:11:17" fixdate="2011-05-07 06:19:11" resolution="Complete">
		<buginformation>
			<summary>DBRE throws wrong exception message when content of dbre.xml is invalid</summary>
			<description>When content is present in the prolog of the dbre.xml, a less than useful message is given to the user</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreTypeUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelService.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2404" opendate="2011-05-08 02:31:02" fixdate="2011-05-08 20:31:35" resolution="Complete">
		<buginformation>
			<summary>ImportRegistrationResolver uses fqn for genric types, even if not necessary</summary>
			<description>Let&amp;amp;apos;s assume, we have an ITD, where we use the following types:
java.util.List&amp;lt;java.lang.String&amp;gt;
java.util.List&amp;lt;java.lang.Integer&amp;gt;
For the first type, the ImportRegistrationResolver sucessfully adds the proper import for java.util.List. So, the type name in the code becomes the short form:  List&amp;lt;String&amp;gt;
But when the second type is resolved, ImportRegistrationResolver.isAdditionLegal() will return false, since both types have the same simple type name (List). Thus, the Javatype java.util.List&amp;lt;java.lang.Integer&amp;gt; is not registered as an import.
Thus, the long form is used in the generated code: java.util.List&amp;lt;Integer&amp;gt;
I think a solution to this problem could be not to keep the full JavaTypes in the Set of registered types in ImportRegistrationResolver.  Instead, the generic type arguments (and probably also array dimesions and so on) should be stripped off.  (Since java.util.List&amp;lt;java.lang.String&amp;gt; ,  java.util.List&amp;lt;java.lang.Integer&amp;gt;, java.util.List&amp;lt;java.lang.String&amp;gt; [] are all the same import statement java.util.List...) 
</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.model.ImportRegistrationResolverImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2409" opendate="2011-05-09 10:08:07" fixdate="2011-05-09 19:20:34" resolution="Fixed">
		<buginformation>
			<summary>ConverterNotFoundException with a ONE_TO_MANY relationship</summary>
			<description>The attached script sets up my initial attempt at the Composite pattern, with a basic class(component) which is extended by two sub classes (Leaf and Composite). Upon executing the controllers under Tomcat, and adding a Composite, a ConverterNotFound exception is raised upon executing the show.jspx jsp. It seems that the Spring Expression evaluator is complaining about not being able to convert a Set. 
One workaround I have found is to not render the field:display tag in the show.jspx file (render="false").  </description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="2411" opendate="2011-05-09 11:12:51" fixdate="2011-05-10 04:33:17" resolution="Complete">
		<buginformation>
			<summary>&amp;apos;finder list&amp;apos; command throws OutOfMemoryError with a very restrictive --filter option</summary>
			<description>Finder generation with a lot of properties requires --filter option to avoid all memory consumption.
However, with a very restrictive --filter option crash too.
Execute &amp;amp;apos;log.roo&amp;amp;apos; script to reproduce error.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServices.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderCommands.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderOperations.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.finder.DynamicFinderServicesImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2415" opendate="2011-05-10 08:15:09" fixdate="2011-05-10 17:29:19" resolution="Complete">
		<buginformation>
			<summary>DBRE not include &amp;apos;schema&amp;apos; attribute on &amp;apos;Table&amp;apos; annotation</summary>
			<description>Next command:






database reverse engineer --schema myschema --package ~.domain






Generate entity classes with @Table without schema definition:






MyEntity_Roo_Entity.aj






...




declare @type: Sentencias: @Table(name = "MyEntity");




...    






Application can&amp;amp;apos;t find tables because are placed in a non default schema.
Schema attribute is required:






MyEntity_Roo_Entity.aj






...




declare @type: Sentencias: @Table(schema="myschema", name = "MyEntity");




...    






By default, this is the desired behavior.
However, in some cases it&amp;amp;apos;s preferable not define the schema attribute at Table annotation and set a schema search path in the database. In this case, the application is not schema dependent.
Then, i propose a new database reverse engineer option:
--includeSchemaReference: Include a reference to database schema on Entitys (boolean, optional, and true by default).</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.converter.SchemaConverter.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseContentHandler.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelService.java</file>
		</fixedFiles>
	</bug>
	<bug id="2419" opendate="2011-05-11 09:32:42" fixdate="2011-05-11 16:01:01" resolution="Complete">
		<buginformation>
			<summary>In @RooWebScaffold &amp;apos;exposeJson = true&amp;apos; should consider &amp;apos;create&amp;apos;, &amp;apos;update&amp;apos; and &amp;apos;delete&amp;apos;</summary>
			<description>When an entity is exposed by JSON in a Controller at @RooWebScaffold annotation with &amp;amp;apos;exposeJson = true&amp;amp;apos; attribute, should be considered same annotation attributes:

create
update
delete

Else define it own JSON create, update and delete attributes.
There is a security problem when create, update or delete is disabled on MVC and not allow disabling on JSON either.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2453</link>
		</links>
	</bug>
	<bug id="2418" opendate="2011-05-11 07:02:27" fixdate="2011-05-11 18:32:50" resolution="Complete">
		<buginformation>
			<summary>Wrong encoding content in JSON response</summary>
			<description>I have a controller like this:






TcmnNucleosController.java











@RooWebScaffold(path = "tcmnnucleoses", formBackingObject = TcmnNucleos.class, create = false, update = false, delete = false, exposeJson=true)




@RequestMapping("/tcmnnucleoses")




@Controller




public class TcmnNucleosController {









    @RequestMapping(params = "find=ByProvincia", method = RequestMethod.GET) //, headers = "Accept=application/json")




    @ResponseBody




    public String jsonFindTcmnNucleosesByProvincia(




            @RequestParam("provincia") String provincia) {




 




        return TcmnNucleos.toJsonArray(TcmnNucleos




                .findTcmnNucleosesByProvincia(




                        TcmnProvincias.findTcmnProvincias(provincia))




                .getResultList());




    }











In &amp;amp;apos;TcmnNucleos&amp;amp;apos; postgreSQL table, enconded in UTF-8, contains data like:











"Pruba"




"Quart"




"Mislata"




"Manresa"











This call returns this:






$ wget -O - -S --header=&amp;amp;apos;Accept: application/json,application/javascript&amp;amp;apos; &amp;amp;apos;http://localhost:8080/acuses/tcmnnucleoses/?provincia=1&amp;amp;find=ByProvincia&amp;amp;apos;




--2011-05-11 15:50:15--  http://localhost:8080/acuses/tcmnnucleoses/?provincia=1&amp;amp;find=ByProvincia




Resolviendo localhost... ::1, 127.0.0.1




Conectando a localhost|::1|:8080... conectado.




Peticin HTTP enviada, esperando respuesta... 




  HTTP/1.1 200 OK




  Server: Apache-Coyote/1.1




  Content-Type: application/json;charset=UTF-8




  Content-Length: 1854




  Date: Wed, 11 May 2011 13:50:16 GMT




  Connection: keep-alive




Longitud: 1854 (1,8K) [application/json]




Guardando en: STDOUT




[{...:"Pruba","dnuclc":null,...}]






JSON returned content is encoded in WINDOWS-1252 but http header says application/json;charset=UTF-8
Web.xml has no changes.






web.xml











  &amp;lt;filter&amp;gt;




        &amp;lt;filter-name&amp;gt;CharacterEncodingFilter&amp;lt;/filter-name&amp;gt;




        &amp;lt;filter-class&amp;gt;org.springframework.web.filter.CharacterEncodingFilter&amp;lt;/filter-class&amp;gt;




        &amp;lt;init-param&amp;gt;




            &amp;lt;param-name&amp;gt;encoding&amp;lt;/param-name&amp;gt;




            &amp;lt;param-value&amp;gt;UTF-8&amp;lt;/param-value&amp;gt;




        &amp;lt;/init-param&amp;gt;




        &amp;lt;init-param&amp;gt;




            &amp;lt;param-name&amp;gt;forceEncoding&amp;lt;/param-name&amp;gt;




            &amp;lt;param-value&amp;gt;true&amp;lt;/param-value&amp;gt;




        &amp;lt;/init-param&amp;gt;




    &amp;lt;/filter&amp;gt;




    




    




    




    &amp;lt;filter&amp;gt;




        &amp;lt;filter-name&amp;gt;HttpMethodFilter&amp;lt;/filter-name&amp;gt;




        &amp;lt;filter-class&amp;gt;org.springframework.web.filter.HiddenHttpMethodFilter&amp;lt;/filter-class&amp;gt;




    &amp;lt;/filter&amp;gt;




    ....




    ....









   &amp;lt;filter-mapping&amp;gt;




        &amp;lt;filter-name&amp;gt;CharacterEncodingFilter&amp;lt;/filter-name&amp;gt;




        &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;




    &amp;lt;/filter-mapping&amp;gt;




    




    ....




    ....










</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2425" opendate="2011-05-12 08:20:40" fixdate="2011-05-14 06:43:13" resolution="Complete">
		<buginformation>
			<summary>ConstraintViolationException creating an entity generated with DBRE</summary>
			<description>Database properties:

User: test2
Password: test2
Database: test2DB

Attached database.sql script with structure creation.
Execute attached log.roo script:






project --topLevelPackage org.gvnix.test.dbre.acuses




persistence setup --provider HIBERNATE --database POSTGRES --hostName localhost --password test2 --userName test2 --databaseName test2DB




osgi obr url add --url http://spring-roo-repository.springsource.org/repository.xml




osgi obr start --bundleSymbolicName org.springframework.roo.wrapping.postgresql-jdbc3




osgi obr url remove --url http://spring-roo-repository.springsource.org/repository.xml




database reverse engineer --schema public --package ~.domain




controller all --package ~.web






When you create an entity of type Table2 next exception is raised:






org.hibernate.exception.ConstraintViolationException: Could not execute JDBC batch update; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.ConstraintViolationException: Could not execute JDBC batch update






Attached stack trace.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2416" opendate="2011-05-10 09:05:21" fixdate="2011-05-14 16:16:09" resolution="Complete">
		<buginformation>
			<summary>DBRE JoinColumn of same JoinColumns must have same insertable and updatable values</summary>
			<description>When &amp;amp;apos;database reverse engineer&amp;amp;apos; command generates multiple JoinColumn in a property, the insertable and updatable attributes must have the same value on each JoinColumn.






@ManyToOne




@JoinColumns({ @JoinColumn(name = "aplicacion", referencedColumnName = "aplicacion", nullable = false, insertable = false, updatable = false), @JoinColumn(name = "rolusuar", referencedColumnName = "usuario", nullable = false) })




private TcomAplusu TcomAplusu.tcomAplusu;






Previous configuration crash with "Mixing insertable and non insertable columns in a property is not allowed: org.gvnix.test.dbre.acuses.TcomAplusu.tcomAplusu"
Error can be resolved with:






@ManyToOne




@JoinColumns({ @JoinColumn(name = "aplicacion", referencedColumnName = "aplicacion", nullable = false, insertable = false, updatable = false), @JoinColumn(name = "rolusuar", referencedColumnName = "usuario", nullable = false, insertable = false, updatable = false) })




private TcomAplusu TcomAplusu.tcomAplusu;





</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.ForeignKey.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Reference.java</file>
		</fixedFiles>
	</bug>
	<bug id="2431" opendate="2011-05-14 20:46:52" fixdate="2011-05-14 21:04:42" resolution="Complete">
		<buginformation>
			<summary>jspx and conversion service bean needlessly updated when Roo shell starts</summary>
			<description>With no changes to the governors, jspx files and the ApplicationConversionServiceFactoryBean_Roo_ConversionService ITD are being updated each time the Roo shell is restarted.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.menu.MenuOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrJspMetadataListener.java</file>
			<file type="M">org.springframework.roo.support.util.XmlRoundTripUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadataProviderImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2433" opendate="2011-05-15 02:07:20" fixdate="2011-05-15 02:43:17" resolution="Complete">
		<buginformation>
			<summary>DBCP connection pool is not aware when a database connection is unavailable</summary>
			<description>You can reproduce the issue restarting the database server while application running.
See problem explanation and possible resolution:

http://sacharya.com/grails-dbcp-stale-connections/

DBCP configuration properties:

http://commons.apache.org/dbcp/configuration.html

Configuration properties summary that solves the problem:






        &amp;lt;property name="validationQuery" value="SELECT 1"/&amp;gt;




        &amp;lt;property name="testOnBorrow" value="true"/&amp;gt;




        &amp;lt;property name="testOnReturn" value="true"/&amp;gt;




        &amp;lt;property name="testWhileIdle" value="true"/&amp;gt;




        &amp;lt;property name="timeBetweenEvictionRunsMillis" value="1800000"/&amp;gt;




        &amp;lt;property name="numTestsPerEvictionRun" value="3"/&amp;gt;




        &amp;lt;property name="minEvictableIdleTimeMillis" value="1800000"/&amp;gt;





</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">1047</link>
		</links>
	</bug>
	<bug id="2417" opendate="2011-05-10 19:08:43" fixdate="2011-05-15 21:18:41" resolution="Complete">
		<buginformation>
			<summary>DBRE managed fields do not appear in the generated toString() method if any field exists in the governor</summary>
			<description>The toString() accurately shows entries for db-managed fields, however these same fields are removed from the toString() method if a new field is added to the entity&amp;amp;apos;s .java file. Then only the .java file&amp;amp;apos;s fields are displayed in the toString() method.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.tostring.ToStringMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.details.BeanInfoUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">2456</link>
		</links>
	</bug>
	<bug id="2436" opendate="2011-05-15 23:03:13" fixdate="2011-05-15 23:37:43" resolution="Complete">
		<buginformation>
			<summary>NPE in DBRE when using the Postgres World sample database</summary>
			<description>NPE in DBRE when using the Postgres World sample database (see http://pgfoundry.org/frs/?group_id=1000150&amp;amp;release_id=584):






java.lang.NullPointerException




   at org.springframework.roo.addon.dbre.DbreMetadata.getField(DbreMetadata.java:645)




   at org.springframework.roo.addon.dbre.DbreMetadata.addOtherFields(DbreMetadata.java:551)




   at org.springframework.roo.addon.dbre.DbreMetadata.&amp;lt;init&amp;gt;(DbreMetadata.java:125)




   at org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.getMetadata(DbreMetadataProviderImpl.java:110)




   at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:269)




   at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:148)




   at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:82)




   at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:147)




   at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:235)




   at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:214)




   at org.springframework.roo.metadata.AbstractHashCodeTrackingMetadataNotifier.notifyIfRequired(AbstractHashCodeTrackingMetadataNotifier.java:52)




   at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.notify(DbreDatabaseListenerImpl.java:183)




   at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.reverseEngineer(DbreDatabaseListenerImpl.java:169)




   at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.deserializeDatabase(DbreDatabaseListenerImpl.java:104)




   at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.onFileEvent(DbreDatabaseListenerImpl.java:83)




   at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:330)




   at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanNotified(PollingFileMonitorService.java:213)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:189)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:143)




   at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)




   at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:182)




   at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:373)




   at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:134)




   at java.lang.Thread.run(Thread.java:680)





</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Column.java</file>
		</fixedFiles>
	</bug>
	<bug id="2437" opendate="2011-05-15 23:36:43" fixdate="2011-05-16 00:02:45" resolution="Complete">
		<buginformation>
			<summary>@Temporal annotation missing on PK field produced by DBRE</summary>
			<description>@Temporal annotation missing on PK field produced by DBRE. Using Pagila DB from postgres samples.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2438" opendate="2011-05-16 03:34:55" fixdate="2011-05-16 04:31:45" resolution="Complete">
		<buginformation>
			<summary>Missing @MockStaticEntityMethods annotation in test mock</summary>
			<description>The generated mock test requires mocking of static entity methods, and as such won&amp;amp;apos;t run as is.  Current code is missing a class-level annotation, @MockStaticEntityMethods, which will make the code function properly.
Incorrect version: 











package org.rooina.coursemanager.model;









import org.junit.Test;









public class StudentTest {









    @Test




    public void testMethod() {




        int expectedCount = 13;




        Student.countStudents();




        org.springframework.mock.staticmock.AnnotationDrivenStaticEntityMockingControl.expectReturn(expectedCount);




        org.springframework.mock.staticmock.AnnotationDrivenStaticEntityMockingControl.playback();




        org.junit.Assert.assertEquals(expectedCount, Student.countStudents());




    }




}






Correct version:






package org.rooina.coursemanager.model;









import org.junit.Test;




import org.springframework.mock.staticmock.MockStaticEntityMethods;









@MockStaticEntityMethods




public class StudentTest {









    @Test




    public void testMethod() {




        int expectedCount = 13;




        Student.countStudents();




        org.springframework.mock.staticmock.AnnotationDrivenStaticEntityMockingControl.expectReturn(expectedCount);




        org.springframework.mock.staticmock.AnnotationDrivenStaticEntityMockingControl.playback();




        org.junit.Assert.assertEquals(expectedCount, Student.countStudents());




    }




}





</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2439" opendate="2011-05-16 12:54:29" fixdate="2011-05-16 13:57:46" resolution="Duplicate">
		<buginformation>
			<summary>Pushin refactoring of Controller methods fails with Exception in Roo Shell</summary>
			<description>I created a simple project with one entity "Foo" and one field.
Then I scaffolded the controller with controller all.
Now, I did &amp;amp;apos;push-in-refactoring&amp;amp;apos; for the "update" method of the controller. 
The Roo shell gives following exception then:
[Spring Roo Process Manager Background Polling Thread] Method &amp;amp;apos;update&amp;amp;apos; already defined in target type &amp;amp;apos;de.controllerpushintest.web.Foo
Controller&amp;amp;apos; (ITD target &amp;amp;apos;de.controllerpushintest.web.FooController_Roo_Controller&amp;amp;apos;)
java.lang.IllegalArgumentException: Method &amp;amp;apos;update&amp;amp;apos; already defined in target type de.controllerpushintest.web.FooController&amp;amp;apos; (ITD target &amp;amp;apos;de.controllerpushintest.web.FooController_Roo_Controller&amp;amp;apos;)
at org.springframework.roo.support.util.Assert.isNull(Assert.java:89)
at org.springframework.roo.classpath.details.ItdTypeDetailsBuilder.onAddMethod(ItdTypeDetailsBuilder.java:84)
at org.springframework.roo.classpath.details.AbstractMemberHoldingTypeDetailsBuilder.addMethod(AbstractMemberHoldingTypeDetailsBuilder.java:138)
at org.springframework.roo.classpath.details.AbstractMemberHoldingTypeDetailsBuilder.addMethod(AbstractMemberHoldingTypeDetailsBuilder.java:156)
at org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadata.&amp;lt;init&amp;gt;(WebScaffoldMetadata.java:105)
...
Afterwards, the Roo shell seems not to react on changes applied to the controller at all.
It&amp;amp;apos;s critical, since one cannot customize controllers anymore.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.4.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.details.MemberFindingUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2368</link>
		</links>
	</bug>
	<bug id="2443" opendate="2011-05-17 16:19:26" fixdate="2011-05-18 16:24:14" resolution="Complete">
		<buginformation>
			<summary>NPE in GwtOperationsImpl:133 when certain key sequence completed at Roo shell launch time</summary>
			<description>Load roo-dev in an empty directory, hitting TAB three times during load. Paste in "project com.foo" and hit ENTER also during load. You should see the NPE as per below.






balex@balex-e4310:~/hello$ rm -rf * .*; rm -rf ~/projects/roo/bootstrap/target/osgi; roo-dev




rm: cannot remove directory: `.&amp;amp;apos;




rm: cannot remove directory: `..&amp;amp;apos;




    ____  ____  ____  




   / __ \/ __ \/ __ \ 




  / /_/ / / / / / / / 




 / _, _/ /_/ / /_/ /  




/_/ |_|\____/\____/    1.2.0.BUILD-SNAPSHOT [rev a1c2b0d]














Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.




poll           process        quit           reference      script         system         version




roo&amp;gt; 









*/             /*             //             ;              cloud          date           development    exit           flash          git            help




osgi           pgp            poll           process        proxy          quit           reference      script         system         version




roo&amp;gt; 









*/             /*             //             ;              cloud          date           development    download       exit           flash          git




help           osgi           pgp            poll           process        project        proxy          quit           reference      script         system




version




roo&amp;gt; 









*/             /*             //             ;              cloud          date           development    download       exit           flash          focus




git            help           hint           metadata       osgi           pgp            poll           process        project        proxy          quit




reference      script         system         version




roo&amp;gt; project com.foo




bde1199 Created ROOT/pom.xml




java.lang.NullPointerException




    at org.springframework.roo.addon.gwt.GwtOperationsImpl.notify(GwtOperationsImpl.java:133)




    at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:233)




    at org.springframework.roo.project.MavenProjectMetadataProvider.onFileEvent(MavenProjectMetadataProvider.java:196)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:330)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanNotified(PollingFileMonitorService.java:213)




    at org.springframework.roo.process.manager.internal.DefaultFileManager.scan(DefaultFileManager.java:189)




    at org.springframework.roo.project.MavenOperationsImpl.createProject(MavenOperationsImpl.java:106)




    at org.springframework.roo.project.MavenCommands.createProject(MavenCommands.java:36)




    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)




    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)




    at java.lang.reflect.Method.invoke(Method.java:616)




    at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy$1.callback(ProcessManagerHostedExecutionStrategy.java:49)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:180)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:143)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)




    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:182)




    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:373)




    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:134)




    at java.lang.Thread.run(Thread.java:679)




[Spring Roo Process Manager Background Polling Thread] java.lang.NullPointerException




                                                           at org.springframework.roo.addon.gwt.GwtOperationsImpl.notify(GwtOperationsImpl.java:133)




                                                           at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:233)




                                                           at org.springframework.roo.project.MavenProjectMetadataProvider.onFileEvent(MavenProjectMetadataProvider.java:196)




                                                           at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:330)




                                                           at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:304)




                                                           at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:178)




                                                           at org.springframework.roo.process.manager.internal.DefaultProcessManager.backgroundPoll(DefaultProcessManager.java:125)




                                                           at org.springframework.roo.process.manager.internal.DefaultProcessManager.timerBasedPoll(DefaultProcessManager.java:240)




                                                           at org.springframework.roo.process.manager.internal.DefaultProcessManager$2.run(DefaultProcessManager.java:68)




                                                           at java.lang.Thread.run(Thread.java:679)




com.foo roo&amp;gt; q





</description>
			<version>1.1.1.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.metadata.DefaultMetadataService.java</file>
		</fixedFiles>
	</bug>
	<bug id="1756" opendate="2010-11-20 06:21:58" fixdate="2011-05-19 21:53:33" resolution="Complete">
		<buginformation>
			<summary>--scope option in "dependency add" command</summary>
			<description>A very simple and obvious feature request. Being able to apply standard maven dependency configuration.
Add the optional --scope parameter to the dependency add command in the roo shell.
Default value of course "compile", optional other values "test", "provided", "runtime" etc..
No need to manually set the scope of test libraries in the pom.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="M">org.springframework.roo.project.ProjectOperations.java</file>
			<file type="M">org.springframework.roo.project.MavenCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2449</link>
		</links>
	</bug>
	<bug id="2449" opendate="2011-05-18 19:21:03" fixdate="2011-05-19 21:54:25" resolution="Duplicate">
		<buginformation>
			<summary>Add --scope to maven dependency command</summary>
			<description>Add --scope to the options for the dependency add command for installing pom.xml dependencies, so you can install things like the Selenium Java Driver into the test scope only.  Should be optional, could have scopes of test, runtime, provided, compile (the default if none picked).</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="M">org.springframework.roo.project.ProjectOperations.java</file>
			<file type="M">org.springframework.roo.project.MavenCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1756</link>
		</links>
	</bug>
	<bug id="2454" opendate="2011-05-20 17:56:47" fixdate="2011-05-20 17:58:06" resolution="Complete">
		<buginformation>
			<summary>Roo allows duplicate enum constants in an enumerated type</summary>
			<description>Duplicate enum constants cause a compile error and should not be allowed to proceed to be created in the Roo shell</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserClassOrInterfaceTypeDetails.java</file>
		</fixedFiles>
	</bug>
	<bug id="2456" opendate="2011-05-21 17:09:07" fixdate="2011-05-21 17:18:00" resolution="Complete">
		<buginformation>
			<summary>Finders not created for DBRE fields when any field exists in the governor</summary>
			<description>Similar to the issue in ROO-2417, finder methods are not being created for dbre created fields if any field exists in the governor </description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.finder.FinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderMetadataProviderImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="is depended on by">2525</link>
			<link type="Relate" description="relates to">2417</link>
		</links>
	</bug>
	<bug id="2445" opendate="2011-05-17 23:35:27" fixdate="2011-05-24 06:15:57" resolution="Complete">
		<buginformation>
			<summary>GWT module&amp;apos;s gwt.xml file not found; cannot continue</summary>
			<description>The script
project --topLevelPackage foo --projectName foo
persistence setup --provider DATANUCLEUS --database GOOGLE_APP_ENGINE 
entity --class ~.server.domain.Foo
field string foo
gwt setup
ends with the message:
GWT module&amp;amp;apos;s gwt.xml file not found; cannot continue
I have tried spring-roo-1.1.4.RELEASE and spring-roo-1.1.4.BUILD-SNAPSHOT_20110517.005036-d4d95d4.
With spring-roo-1.1.3.RELEASE, it still worked.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtPath.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultFileManager.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="M">org.springframework.roo.support.util.TemplateUtils.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="is depended on by">2459</link>
		</links>
	</bug>
	<bug id="2459" opendate="2011-05-22 08:46:11" fixdate="2011-05-24 06:17:07" resolution="Complete">
		<buginformation>
			<summary>GWT Addon does not support multiple modules</summary>
			<description>If a project has more than one GWT module file (i.e. ApplicationScaffold.gwt.xml and HelloWorld.gwt.xml), Roo fails to parse any of them.  Any entities created afterwards are ignored by the GWT Addon.  In Roo 1.1.4.RELEASE, the shell gives the message ...
"GWT module&amp;amp;apos;s gwt.xml file not found; cannot continue"
In 1.1.4.SNAPSHOT, the shell currently fails to give any failure message.
This is unacceptable for many typical uses of Roo.  For instance, during development I create my own GWT Module for my application, but leave the ApplicationScaffold module around to help out with debugging during development.  I never deploy it to production, but it is certainly nice to have around!
See comments for a proposed patch.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="depends on">2445</link>
		</links>
	</bug>
	<bug id="2465" opendate="2011-05-24 23:50:12" fixdate="2011-05-25 21:38:44" resolution="Fixed">
		<buginformation>
			<summary>DBRE only generates welcome page</summary>
			<description>I have an existing Oracle DB and try the DBRE with Roo Version 1.1.3. It works!
With version 1.1.4 the command &amp;amp;apos;database reverse engineer --schema ... --includeNonPortableAttributes&amp;amp;apos; creates the domain model but the command
&amp;amp;apos;controller all --package ~.web&amp;amp;apos; only creates the welcome page. The menu.jspx and the Web UI for the entities are missing.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2473" opendate="2011-05-26 17:59:21" fixdate="2011-05-29 16:39:22" resolution="Complete">
		<buginformation>
			<summary>Fields marked with --sizeMin don&amp;apos;t always have "required" in prompt  </summary>
			<description>To replicate:

Run clinic.roo
Go to the "Create new Owner" page
Click into the "Email" field; note that the prompt says "Enter Email"
Submit the form; the email field displays the error "size must be between 6 and 30"

If the form won&amp;amp;apos;t submit without an email addresses entered, then the prompt for that field should say "Enter Email (required)".
The workaround is to add a JPA @NotNull annotation to the relevant entity field; the MVC addon will then update the relevant JSPX files by adding required="true" to that field. However @NotNull is a persistence-related annotation, not a validation/UI annotation. The presence of the JSR-303 @SizeMin annotation should be enough for the MVC addon to mark the field as required.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="2453" opendate="2011-05-20 11:16:42" fixdate="2011-05-29 17:30:40" resolution="Duplicate">
		<buginformation>
			<summary>json add ignores --disallowedOperations flag on the controller</summary>
			<description>If you specify you want to disallow some of the crud operations like update,create or delete on the controller and if you also specify you would like to add the roo managed json annotation to the object, the json add roo shell command will ignore the disallowed operations and instead create all the crud operations.
Ex:
entity --class ~.domain.PolicySignature 
field string --fieldName policy
field string --fieldName signature
field string --fieldName awskeyid
controller scaffold --class ~.web.PolicySignatureService --entity ~.domain.PolicySignature --disallowedOperations update,create,delete
json add
Then the resulting PolicySignatureService_Roo_Controller.aj file will have the correct html content type show and list requestmappings but if you set your content type to json you can bypass the restrictions and also put post and delete which I don&amp;amp;apos;t think should happen.
Also if you manually try to delete these disallowed operations the roo shell replaces them in the aspect J file. 
This is what the aspect J file looks like, you&amp;amp;apos;ll notice you have many more operations with content type set to json than you do with the regular content type:
privileged aspect PolicySignatureService_Roo_Controller {
    @RequestMapping(value = "/
{id}", method = RequestMethod.GET)
    /* ... */

    @RequestMapping(method = RequestMethod.GET)
    /* ... */

    @ModelAttribute("policysignatures")
       /* ... */

    @RequestMapping(value = "/{id}
", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
       /* ... */
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
      /* ... */
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
       /* ... */
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
       /* ... */
    @RequestMapping(method = RequestMethod.PUT, headers = "Accept=application/json")
      /* ... */
    @RequestMapping(value = "/jsonArray", method = RequestMethod.PUT, headers = "Accept=application/json")
       /* ... */
    @RequestMapping(value = "/
{id}
", method = RequestMethod.DELETE, headers = "Accept=application/json")
       /* ... */
}
</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2419</link>
		</links>
	</bug>
	<bug id="2480" opendate="2011-05-31 06:58:07" fixdate="2011-06-01 00:29:34" resolution="Complete">
		<buginformation>
			<summary>Dynamic Finders - ITDs, controllers, views do not get generated when a table has a version column</summary>
			<description>1.  Create a table that has a version column, ID, and at least one additional column
2.  Setup persistence
3.  Use database reverse engineer to generate the entity
4.  Use controller all --package ~.web to generate the controllers
5.  Use focus --class ~domain.TestRoo
6.  finder list
7.  finder add --finderName findTestRooByIntTxnDescEquals
Results from the above:  For steps 1- 4, Roo will generate the TestRoo.java, ITD, and controllers.  In step 7, Roo will modify only TestRoo.java by adding the finder name.
Now delete the version table and issue: database reverse engineer and issue step 7 again.  Roo will now modify TestRoo.java, generate the ITD, and modify the controllers as expected.
Below is the sql to generate the table:
CREATE
    TABLE TEST_ROO    (
        ID BIGINT NOT NULL,
        VERSION INTEGER,
        INTERNAL_TXN_CODE SMALLINT NOT NULL,
        INT_TXN_DESC VARCHAR(255),
        EFFECTIVE_DATE DATE NOT NULL,
        PRIMARY KEY (ID),
        UNIQUE (INTERNAL_TXN_CODE)
    )</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2481" opendate="2011-05-31 23:21:57" fixdate="2011-06-01 02:08:59" resolution="Complete">
		<buginformation>
			<summary>Two unrelated classes synchronise on same Boolean constant</summary>
			<description>These two classes use the same instance of the Boolean class (i.e. Boolean.TRUE) as their "lock" synchronisation field:

org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl
org.springframework.roo.file.monitor.polling.PollingFileMonitorService

This inadvertent coupling of two unrelated classes could lead to unresponsiveness and possible deadlock.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.file.monitor.polling.PollingFileMonitorService.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2483" opendate="2011-06-01 02:25:14" fixdate="2011-06-01 02:40:32" resolution="Complete">
		<buginformation>
			<summary>SolrUtils returns incorrect suffix for java.util.Calendar fields</summary>
			<description>The intent of the following line in SolrUtils is clearly to return "_dt" for Calendar fields:






} else if (type.equals(new JavaType("java.util.Date")) || type.equals("java.util.Calendar")) {




	return "_dt";




} else {




	return "_t";




}






However because comparing the type (an instance of JavaType) to the literal String "java.util.Calendar" will never return true, any Calendar fields will fall through to the else clause and return "_t" instead of "_dt".</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="2213" opendate="2011-03-07 16:56:26" fixdate="2011-06-01 22:18:03" resolution="Complete">
		<buginformation>
			<summary>Provide transaction manager name for Transactional annotation in aspect generated by RooEntity</summary>
			<description>@RooEntity doesn&amp;amp;apos;t have an option to properly configure the @Transactional annotation. So, we think at least it should allow you to define a @Transactional("name of TxMgr") in the aspect via some @RooEntity property.
Thanks
Carlos</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityCommands.java</file>
			<file type="M">org.springframework.roo.addon.entity.RooEntity.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaCommands.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="2488" opendate="2011-06-06 23:32:48" fixdate="2011-06-06 23:52:23" resolution="Complete">
		<buginformation>
			<summary>NPE in thread "Spring Roo RooBot Add-In Index Eager Download"</summary>
			<description>To re-create:

Create a script app.roo like so:






project --topLevelPackage com.foo




persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY




entity --class ~.Foo --testAutomatically




field string --fieldName name






From the bash prompt, run "roo.sh script app.roo"

Roo emits the following output:






    ____  ____  ____  




   / __ \/ __ \/ __ \ 




  / /_/ / / / / / / / 




 / _, _/ /_/ / /_/ /  




/_/ |_|\____/\____/    1.1.4.RELEASE [rev f787ce7]














Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.




project --topLevelPackage com.foo




Created ROOT/pom.xml




Created SRC_MAIN_JAVA                                                                                                                                                        Please wait - still loading




Created SRC_MAIN_RESOURCES




Created SRC_TEST_JAVA                                                                                                                                                        Please wait - still loading




Created SRC_TEST_RESOURCES




Created SRC_MAIN_WEBAPP




Created SRC_MAIN_RESOURCES/META-INF/spring




Created SRC_MAIN_RESOURCES/log4j.properties




Created SRC_MAIN_RESOURCES/META-INF/spring/applicationContext.xml




persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY                                                                                                       Please wait - still loading




Created SRC_MAIN_RESOURCES/META-INF/spring/database.properties




Updated ROOT/pom.xml [added dependencies org.hsqldb:hsqldb:1.8.0.10, org.hibernate:hibernate-core:3.6.3.Final, org.hibernate:hibernate-entitymanager:3.6.3.Final, org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.0.Final, org.hibernate:hibernate-validator:4.1.0.Final, javax.validation:validation-api:1.0.0.GA, cglib:cglib-nodep:2.2, javax.transaction:jta:1.1, o    Please wait - still loading${spring.version}, org.springframework:spring-orm:${spring.version}, commons-pool:commons-pool:1.5.4, commons-dbcp:commons-dbcp:1.3; added repository https://repository.ories/releases]                                                                                                                                                          Downloaded 0% of roobot.xml.zip




Updated SRC_MAIN_RESOURCES/META-INF/spring/applicationContext.xml




Created SRC_MAIN_RESOURCES/META-INF/persistence.xml




entity --class ~.Foo --testAutomatically




Created SRC_MAIN_JAVA/com/foo




Created SRC_MAIN_JAVA/com/foo/Foo.java




Created SRC_TEST_JAVA/com/foo




Created SRC_TEST_JAVA/com/foo/FooDataOnDemand.java                                                                                                                       Downloaded 0% of roobot.xml.zip




Created SRC_TEST_JAVA/com/foo/FooIntegrationTest.java




Created SRC_MAIN_JAVA/com/foo/Foo_Roo_Configurable.aj




Created SRC_MAIN_JAVA/com/foo/Foo_Roo_Entity.aj




Created SRC_MAIN_JAVA/com/foo/Foo_Roo_ToString.aj




Created SRC_TEST_JAVA/com/foo/FooDataOnDemand_Roo_Configurable.aj




Created SRC_TEST_JAVA/com/foo/FooDataOnDemand_Roo_DataOnDemand.aj




Created SRC_TEST_JAVA/com/foo/FooIntegrationTest_Roo_Configurable.aj




Created SRC_TEST_JAVA/com/foo/FooIntegrationTest_Roo_IntegrationTest.aj                                                                                                  Downloaded 0% of roobot.xml.zip




field string --fieldName name




Updated SRC_MAIN_JAVA/com/foo/Foo.java




Created SRC_MAIN_JAVA/com/foo/Foo_Roo_JavaBean.aj




Updated SRC_TEST_JAVA/com/foo/FooDataOnDemand_Roo_DataOnDemand.aj




Updated SRC_MAIN_JAVA/com/foo/Foo_Roo_ToString.aj




Script required 2 second(s) to execute




Exception in thread "Spring Roo RooBot Add-In Index Eager Download" java.lang.NullPointerException




	at org.apache.felix.scr.impl.manager.ComponentContextImpl.getBundleContext(ComponentContextImpl.java:89)




	at org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.getUpgradableBundles(AddOnRooBotOperationsImpl.java:784)




	at org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.printAddonStats(AddOnRooBotOperationsImpl.java:675)                                     Downloaded 0% of roobot.xml.zip




	at org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.populateBundleCache(AddOnRooBotOperationsImpl.java:667)




	at org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.access$100(AddOnRooBotOperationsImpl.java:59)




	at org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl$1.run(AddOnRooBotOperationsImpl.java:110)




	at java.lang.Thread.run(Thread.java:680)






After clearing out the project directory and running that command again, the problem failed to recur.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2535</link>
		</links>
	</bug>
	<bug id="2490" opendate="2011-06-07 18:26:17" fixdate="2011-06-07 18:38:48" resolution="Complete">
		<buginformation>
			<summary>NPE in integration test addon when changing name of flush method</summary>
			<description>Upon changing the name of an entity&amp;amp;apos;s flush method via the "flushMethod" attribute of its @RooEntity annotation, the Roo shell can display this message:






NullPointerException at org.springframework.roo.addon.test.IntegrationTestMetadata.getPersistMethodTest(IntegrationTestMetadata.java:449)






This happens because the getPersistMethodTest() method doesn&amp;amp;apos;t check whether the flush method is null before using it. It might be null because of a timing error whereby the annotation specifies a new flush method name but the entity&amp;amp;apos;s Xxx_Roo_Entity.aj ITD hasn&amp;amp;apos;t been rebuilt yet and therefore still introduces that method using its previous name.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2450" opendate="2011-05-18 19:32:07" fixdate="2011-06-08 18:16:19" resolution="Fixed">
		<buginformation>
			<summary>tilesViewResolver bean missing in web flow creation</summary>
			<description>After creating a new roo project and running &amp;amp;apos;web flow&amp;amp;apos;, I tried to deploy to tomcat but I receive the following Error:
Error creating bean with name &amp;amp;apos;mvcViewFactoryCreator&amp;amp;apos; defined in ServletContext resource [/WEB-INF/spring/webflow-config.xml]: Cannot resolve reference to bean &amp;amp;apos;tilesViewResolver&amp;amp;apos; while setting bean property &amp;amp;apos;viewResolvers&amp;amp;apos;; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named &amp;amp;apos;tilesViewResolver&amp;amp;apos; is defined</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2494" opendate="2011-06-09 01:35:35" fixdate="2011-06-09 01:38:37" resolution="Complete">
		<buginformation>
			<summary>Conversion service ITD not updated when a previously deleted controller is created again</summary>
			<description>After the @RooWebScaffold annotation is added back to a controller class again, the conversion service ITD is not updated until the Roo shell is restarted.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2496" opendate="2011-06-09 02:54:06" fixdate="2011-06-09 15:24:16" resolution="Complete">
		<buginformation>
			<summary>Do not allow creation of DataOnDemand class for abstract entities</summary>
			<description>Related to https://jira.springsource.org/browse/ROO-321, you can define a DataOnDemand class that is based on an abstract entity.  This should not be allowed as it won&amp;amp;apos;t compile.
Example:






entity --class ~.model.Foo




dod --entity ~.model.Foo





</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2498" opendate="2011-06-09 09:40:18" fixdate="2011-06-12 04:48:14" resolution="Complete">
		<buginformation>
			<summary>Cannot remove fields. Missing flush() in org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.removeField  ?</summary>
			<description>I tried to remove a field from a class by calling removeField on MutableClassOrInterfaceTypeDetails.
But the field does not get deleted at all.
Maybe the reason is a missing call to flush() in  JavaParserMutableClassOrInterfaceTypeDetails.removeField   ?</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.java</file>
		</fixedFiles>
	</bug>
	<bug id="2506" opendate="2011-06-13 20:33:53" fixdate="2011-06-14 19:32:21" resolution="Complete">
		<buginformation>
			<summary>ItdTypeDetailsBuilder requires abstract methods to have a body</summary>
			<description>o.s.r.classpath.details.ItdTypeDetailsBuilder.onAddMethod(MethodMetadataBuilder) requires the passed-in method builder to specify a method body, which is incorrect for abstract methods (e.g. those being introduced into an interface).
This bug only affects developers of addons that generate an ITD that introduces an abstract method.
The workaround is to add a dummy body as follows:






MethodMetadataBuilder methodBuilder = ... // obtain or create as normal (for an abstract method)




methodBuilder.getBodyBuilder().appendFormalLine("anything"); // this line will not appear in the generated ITD, as the method is abstract





</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.MethodMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.details.MemberFindingUtils.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.details.AbstractMemberHoldingTypeDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.details.ItdTypeDetailsBuilder.java</file>
		</fixedFiles>
	</bug>
	<bug id="2505" opendate="2011-06-13 01:01:00" fixdate="2011-06-14 22:04:16" resolution="Fixed">
		<buginformation>
			<summary>when use "json add",json controller have wrong inner variable name in for loop</summary>
			<description>when user json add,web controller aj generated thatlook at the color red content. object name the same as the Class name.
@RequestMapping(value = "/jsonArray", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity&amp;lt;String&amp;gt; TAdController.updateFromJsonArray(@RequestBody String json) {
        HttpHeaders headers= new HttpHeaders();
        headers.add("Content-Type", "application/text");
        for ( TAd TAd : TAd.fromJsonArrayToTAds(json)) {
            if (TAd.merge() == null) 
{
                return new ResponseEntity&amp;lt;String&amp;gt;(headers, HttpStatus.NOT_FOUND);
            }
        }
        return new ResponseEntity&amp;lt;String&amp;gt;(headers, HttpStatus.OK);
    }</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2523" opendate="2011-06-25 17:43:10" fixdate="2011-06-25 18:18:55" resolution="Complete">
		<buginformation>
			<summary>Integration tests fail when column is unique and field length is greater than column length</summary>
			<description>When a field, for example, is called "registration"  size restriction and unique constraints are placed on field, as like here:






    @NotNull




    @Column(unique = true)




    @Size(min = 8, max = 8)




    private String registration;






unit tests will fail as the field initializer is truncated, but is not unique in all cases</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2531" opendate="2011-06-27 09:10:56" fixdate="2011-06-28 03:43:36" resolution="Complete">
		<buginformation>
			<summary>allow clients to override completion keys</summary>
			<description>STS uses a custom key-binding for tab completion (Ctrl+Space). It would be helpful if it was possible to modify the value of AbstractShell.COMPLETION_KEY.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.jline.JLineShell.java</file>
			<file type="M">org.springframework.roo.classpath.operations.HintOperationsImpl.java</file>
			<file type="M">org.springframework.roo.shell.osgi.SimpleParserComponent.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
			<file type="M">org.springframework.roo.shell.AbstractShell.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">2551</link>
			<link type="Relate" description="is related to">2491</link>
		</links>
	</bug>
	<bug id="2535" opendate="2011-06-28 14:13:47" fixdate="2011-06-28 16:44:04" resolution="Duplicate">
		<buginformation>
			<summary>exception on shutdown</summary>
			<description>While debugging a problem in Roo I noticed this exception on the console: 
Exception in thread "Spring Roo RooBot Add-In Index Eager Download" java.lang.NullPointerException
	at org.apache.felix.scr.impl.manager.ComponentContextImpl.getBundleContext(ComponentContextImpl.java:89)
	at org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.getUpgradableBundles(AddOnRooBotOperationsImpl.java:799)
	at org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.printAddonStats(AddOnRooBotOperationsImpl.java:687)
	at org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.populateBundleCache(AddOnRooBotOperationsImpl.java:679)
	at org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.access$100(AddOnRooBotOperationsImpl.java:59)
	at org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl$1.run(AddOnRooBotOperationsImpl.java:110)
	at java.lang.Thread.run(Thread.java:595)
It happens rarely when exiting the shell shortly after starting Roo and is difficult to reproduce.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2488</link>
		</links>
	</bug>
	<bug id="2528" opendate="2011-06-27 02:06:00" fixdate="2011-06-28 18:35:13" resolution="Complete">
		<buginformation>
			<summary>Two controllers over an entity error because same request mapping</summary>
			<description>Creating more than one controller over the same entity causes startup errors because they are created with the same base request mapping name:
 @RequestMapping("/owners")
To reproduce, execute next command after clinic.roo script:
 web mvc scaffold --class ~.web.OtherOwnerController --backingType ~.domain.Owner
On startup:






2011-06-27 11:03:09,850 [main] ERROR org.springframework.web.servlet.DispatcherServlet - Context initialization failed




org.springframework.beans.factory.BeanCreationException: Error creating bean with name &amp;amp;apos;org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping#0&amp;amp;apos;: Initialization of bean failed; nested exception is java.lang.IllegalStateException: Cannot map handler &amp;amp;apos;ownerController&amp;amp;apos; to URL path [/owners/{id}]: There is already handler of type [class com.springsource.petclinic.web.OtherOwnerController] mapped.





</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2534" opendate="2011-06-28 06:18:38" fixdate="2011-06-28 19:13:39" resolution="Fixed">
		<buginformation>
			<summary>The default @DateTimeFormat with  "S-" has MM/dd/yy pattern leading to a bug like Y2K</summary>
			<description>as stated from java docs the "S-" patter corresponds to something like MM/dd/yy for I think all locales.
this combined with the generated widget constructed with the same pattern lead to a Y2K like bug.
inserting 01/01/1911 will be displayed correctly on the widget but posted as 01/01/11 and translated as 01/01/2011 on the server.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">3393</link>
		</links>
	</bug>
	<bug id="2539" opendate="2011-06-28 22:43:11" fixdate="2011-06-28 23:42:38" resolution="Complete">
		<buginformation>
			<summary>DataOnDemand attempts to create identifier class by creating non-existent mutator methods instead of using parmeterized constructor</summary>
			<description>It appears the composite key support offered in DoD does not correctly create the identifier class instance. The identifier class does not (and should not) provide public mutators for its fields however DoD is creating code that calls these (non-existent) methods. It should call the constructor instead.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2541" opendate="2011-06-29 22:36:20" fixdate="2011-06-30 15:19:47" resolution="Complete">
		<buginformation>
			<summary>Validation constraints not considered for fields of @Embeddable classes in DataOnDemand</summary>
			<description>Only fields of the entity have their validation constraint annotations considered in DoD. Fields of embeddable classes also require their validation constraints to be honoured as well.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.EmbeddedHolder.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2467" opendate="2011-05-25 22:55:04" fixdate="2011-07-01 00:18:50" resolution="Complete">
		<buginformation>
			<summary>*.jspx files not being updated when adding a field to the governor</summary>
			<description>After running the following script the .jspx files are not update when adding (and then removing) a field to and from the governor. Upon restarting the Roo shell the files are updated.






project --topLevelPackage com.foo.empty




persistence setup --provider HIBERNATE --database H2_IN_MEMORY 




entity --class ~.domain.Foo




controller all --package ~.web





</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="2487" opendate="2011-06-06 23:12:51" fixdate="2011-07-02 07:01:10" resolution="Complete">
		<buginformation>
			<summary>Existing ITDs not always deleted when metadata providers return null</summary>
			<description>One instance of this bug is as follows:

Create a project like so:






project --topLevelPackage com.foo




persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY




entity --class ~.Foo --testAutomatically




field string --fieldName name






The following files should (correctly) exist in src/test/java/com/foo:
	
FooDataOnDemand.java
FooDataOnDemand_Roo_DataOnDemand.aj (the ITD)


Modify the Foo entity&amp;amp;apos;s @RooEntity annotation with findEntriesMethod=""; Roo should delete the above ITD (because it will no longer compile), however it does not.

The workaround is to delete the ITD manually.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadata.java</file>
			<file type="M">org.springframework.roo.metadata.AbstractHashCodeTrackingMetadataNotifier.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">2549</link>
		</links>
	</bug>
	<bug id="2545" opendate="2011-07-03 18:51:22" fixdate="2011-07-03 19:21:02" resolution="Fixed">
		<buginformation>
			<summary>Roo generated selenium script fails for clinic.roo</summary>
			<description>





info: Executing: |verifyText | _s_com_springsource_petclinic_domain_Owner_pets_pets_id |  |




error: Element _s_com_springsource_petclinic_domain_Owner_pets_pets_id not found




warn: currentTest.recordFailure: Element _s_com_springsource_petclinic_domain_Owner_pets_pets_id not found




...




info: Executing: |verifyText | _s_com_springsource_petclinic_domain_Pet_owner_owner_id |  |




warn: currentTest.recordFailure: Actual value &amp;amp;apos;someFirstName1 someLastName1 someAddress1 someCity1&amp;amp;apos; did not match &amp;amp;apos;&amp;amp;apos;




info: Executing: |verifyText | _s_com_springsource_petclinic_domain_Pet_type_type_id |  |




warn: currentTest.recordFailure: Actual value &amp;amp;apos;Dog&amp;amp;apos; did not match &amp;amp;apos;&amp;amp;apos;





</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2546" opendate="2011-07-03 20:37:21" fixdate="2011-07-03 20:43:55" resolution="Complete">
		<buginformation>
			<summary>Cloud Foundry preferences not being stored reliably when using Roo on Windows</summary>
			<description>Whilst login details are stored on *nix based OSs they aren&amp;amp;apos;t being stored on Windows.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.ServiceConfigurationConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudServiceConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundrySessionImpl.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundryOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudControllerUrlConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundryCommands.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudFileConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.UaaAwareAppCloudClient.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudLoginEmailConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.ConverterUtils.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudAppConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudUriConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudAppMemoryOptionConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudDeployableFileConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundryOperations.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundrySession.java</file>
		</fixedFiles>
	</bug>
	<bug id="2533" opendate="2011-06-28 04:52:49" fixdate="2011-07-03 20:45:23" resolution="Complete">
		<buginformation>
			<summary>Problems with Cloud Foundry Addon in 1.1.4</summary>
			<description>There are several problems with the Cloud Foundry Addon in Spring Roo 1.1.4
Install with 
 addon install bundle --bundleSymbolicName org.springframework.roo.addon.cloud.foundry
fails and results in:
NullPointerException at org.springframework.roo.addon.roobot.client.AddOnR ooBotOperationsImpl.installOrUpgradeAddOn(AddOnRoo BotOperation)
After advice I used this command:
addon install bundle --bundleSymbolicName org.springframework.roo.addon.cloud.foundry;1.1.4.RELEASE
This works for installing the addon but fails then on deploy command:
roo&amp;gt; cloud foundry deploy --appName wedding1234 --path CREATE
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building wedding
[INFO] task-segment: [clean, package]
[INFO] ------------------------------------------------------------------------
...
[INFO] Webapp assembled in [1130 msecs]
[INFO] Building war: D:\jens\transport\workspace-roo\wedding\target\wedding-0.1.
0.BUILD-SNAPSHOT.war
[WARNING] Warning: selected war files include a WEB-INF/web.xml which will be ig
nored
(webxml attribute is missing from war task, or ignoreWebxml attribute is specifi
ed as &amp;amp;apos;true&amp;amp;apos;)
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 12 seconds
[INFO] Finished at: Mon Jun 27 15:42:28 CEST 2011
[INFO] Final Memory: 58M/509M
[INFO] ------------------------------------------------------------------------
NullPointerException at org.springframework.roo.addon.cloud.foundry.CloudF oundry
Commands.push(CloudFoundryCommands.java:114)
Alternatively I tried:
roo&amp;gt; cloud foundry deploy --appName wedding1234 --path target/wedding-0.1.0.BUIL
D-SNAPSHOT.war
NullPointerException at java.io.File.&amp;lt;init&amp;gt;(File.java:222)
(The file target/wedding-0.1.0.BUILD-SNAPSHOT.war exists and it also happens with other samples from 1.1.4)
Please see also the discussion thread here:
http://forum.springsource.org/showthread.php?111154-cannot-install-cloud-foundry-addon&amp;amp;s=bd01dbd11f8149f7f4fd054152d15fb3
Creating a JIRA as suggested.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundrySessionImpl.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudDeployableFileConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundryOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.ServiceConfigurationConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudServiceConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudControllerUrlConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundryCommands.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudFileConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.UaaAwareAppCloudClient.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudLoginEmailConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.ConverterUtils.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudAppConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudUriConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.converter.CloudAppMemoryOptionConverter.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundryOperations.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundrySession.java</file>
		</fixedFiles>
	</bug>
	<bug id="2543" opendate="2011-07-03 16:31:28" fixdate="2011-07-04 01:50:12" resolution="Complete">
		<buginformation>
			<summary>Roo shell does not give informative message or hangs when the persistMethod attribute of @RooEntity is set to null</summary>
			<description>In 1.1.3 and 1.1.4, only the message generated from the constructor of JavaSymbolName is given to the user if the persistMethod attribute of @RooEntity is set to an empty string. In current snapshot builds, the shell hangs. </description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.MethodMatcher.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProviderImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2508" opendate="2011-06-14 11:26:31" fixdate="2011-07-04 16:40:35" resolution="Complete">
		<buginformation>
			<summary>@Rooplural annotation prevents "list all entity" option from showing in the menu</summary>
			<description>When a @Rooplural is added to an entity the "list all entity" option from the navigation menu of the app isn&amp;amp;apos;t displayed, that means that the corresponding item in menu.jspx for list the item isn&amp;amp;apos;t added. This seems to be a Roo issue since it happens with recently created projects where no configuration file was changed manually. 
In the original thread on the forum I reported the issue for version 1.1.3 but recently I confirmed that the 1.1.4 version has the same problem. I don&amp;amp;apos;t know if the usage of @Rooplural was changed in recent versions but in the documentation I don&amp;amp;apos;t found anything. 
Thanks for all, regards.</description>
			<version>1.1.3.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.MethodMatcher.java</file>
		</fixedFiles>
	</bug>
	<bug id="2550" opendate="2011-07-04 05:35:20" fixdate="2011-07-04 16:46:36" resolution="Fixed">
		<buginformation>
			<summary>@mvc controller with custom mapping</summary>
			<description>Hi,
Basically, the issue is that an extra / is shown in the documentation for web mvc controller.
Roo documentation for web mvc controller shows: optional --preferredMapping: Indicates a specific request mapping path for this controller (eg /foo/); no default value
When creating a custom controller web mvc controller --class ~.admin.LoginController --preferredMapping /admin/login/ (notice the mapping ends with a slash, just as in the documentation), Roo generates double slashes in various places, such as in the controller, *.tagx and views.xml files. Example:






    @RequestMapping




    public String index() {




        return "admin/login//index";




    }




}}





</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2549" opendate="2011-07-04 05:32:12" fixdate="2011-07-04 17:04:29" resolution="Complete">
		<buginformation>
			<summary>DoD doesn&amp;apos;t fail gracefully or resolve properly once metadata has stabilized </summary>
			<description>When declaring the id field in the governor the following exception is thrown:






[Spring Roo Process Manager Background Polling Thread] java.lang.IllegalArgumentException: Identifier accessor method required




java.lang.IllegalStateException: java.lang.IllegalArgumentException: Identifier accessor method required




   at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:178)




   at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




   at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:216)




   at org.springframework.roo.addon.test.IntegrationTestMetadataProviderImpl.getMetadata(IntegrationTestMetadataProviderImpl.java:69)




   at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:269)




   at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:147)




   at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




   at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:147)




   at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:236)




   at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:191)




   at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:131)




   at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:330)




   at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:304)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:178)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.backgroundPoll(DefaultProcessManager.java:125)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.timerBasedPoll(DefaultProcessManager.java:240)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager$2.run(DefaultProcessManager.java:68)




   at java.lang.Thread.run(Thread.java:680)




Caused by: java.lang.IllegalArgumentException: Identifier accessor method required




   at org.springframework.roo.support.util.Assert.notNull(Assert.java:112)




   at org.springframework.roo.addon.dod.DataOnDemandMetadata.&amp;lt;init&amp;gt;(DataOnDemandMetadata.java:77)




   at org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.getMetadata(DataOnDemandMetadataProviderImpl.java:127)




   at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:269)




   at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:147)




   ... 17 more






The issue can be replicated by running the expenses script and pushing in the id field using the code below, closing the shell, launching the shell again, and commenting out the pushed in id field.






@javax.persistence.Id




@GeneratedValue(strategy = GenerationType.AUTO)




@Column(name = "id")




private Long id;





</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProviderImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">2487</link>
		</links>
	</bug>
	<bug id="2551" opendate="2011-07-04 18:54:53" fixdate="2011-07-05 07:44:04" resolution="Complete">
		<buginformation>
			<summary>Nothing happens when executing a script from with STS</summary>
			<description>The issue was found in STS 2.6.1 and Stefan has verified that the issue is also present in 2.7 nightly found here
To replicate:

Set the Roo instance in STS to the latest snapshot
Create a new Roo project in STS
Load the Roo shell from within STS and run "script (expenses.roo || clinic.roo || vote.roo)"

</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.classpath.operations.AbstractOperations.java</file>
			<file type="M">org.springframework.roo.shell.jline.osgi.JLineShellComponent.java</file>
			<file type="M">org.springframework.roo.shell.jline.JLineShell.java</file>
			<file type="M">org.springframework.roo.felix.pgp.PgpServiceImpl.java</file>
			<file type="M">org.springframework.roo.support.osgi.UrlFindingUtils.java</file>
			<file type="M">org.springframework.roo.shell.AbstractShell.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">2531</link>
		</links>
	</bug>
	<bug id="2553" opendate="2011-07-05 17:42:14" fixdate="2011-07-05 18:05:17" resolution="Complete">
		<buginformation>
			<summary>Switching persistence providers from a GAE-based app to a normal JPA app does not clean up special provisions in JavaBean artifacts</summary>
			<description>Switching persistence providers from a GAE-based app to a normal JPA app does not clean up special provisions in JavaBean artifacts.
To replicate, create a simple app with GAE/DN persistence and an entity then invoke the peristence setup command and use EclipseLink/HSQL and attempt to compile the app.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2554" opendate="2011-07-05 20:12:12" fixdate="2011-07-05 20:18:58" resolution="Complete">
		<buginformation>
			<summary>Unnecessary rewriting of DoD ITD on member push in</summary>
			<description>When pushing in a member of a watched entity the corresponding DoD ITD is rewritten despite there being no material change.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.shell.NaturalOrderComparator.java</file>
		</fixedFiles>
	</bug>
	<bug id="2555" opendate="2011-07-05 20:17:12" fixdate="2011-07-05 20:20:12" resolution="Complete">
		<buginformation>
			<summary>Pushing in a member into an entity which is monitored by DoD causes an exception</summary>
			<description>For example pushing in setUsername in the stock expenses project causes the following:






java.lang.IllegalArgumentException: Method &amp;amp;apos;setUserName&amp;amp;apos; already defined in ITD (ITD target &amp;amp;apos;org.springsource.roo.extrack.server.domain.EmployeeDataOnDemand_Roo_DataOnDemand&amp;amp;apos;




java.lang.IllegalStateException: java.lang.IllegalArgumentException: Method &amp;amp;apos;setUserName&amp;amp;apos; already defined in ITD (ITD target &amp;amp;apos;org.springsource.roo.extrack.server.domain.EmployeeDataOnDemand_Roo_DataOnDemand&amp;amp;apos;




   at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:178)




   at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)                                                       




   at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:216)




   at org.springframework.roo.addon.test.IntegrationTestMetadataProviderImpl.getMetadata(IntegrationTestMetadataProviderImpl.java:69)




   at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:269)




   at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:147)




   at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




   at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:147)




   at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:236)




   at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:191)




   at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:131)




   at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:330)




   at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:304)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:178)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.backgroundPoll(DefaultProcessManager.java:125)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.timerBasedPoll(DefaultProcessManager.java:240)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager$2.run(DefaultProcessManager.java:68)




   at java.lang.Thread.run(Thread.java:680)




Caused by: java.lang.IllegalArgumentException: Method &amp;amp;apos;setUserName&amp;amp;apos; already defined in ITD (ITD target &amp;amp;apos;org.springsource.roo.extrack.server.domain.EmployeeDataOnDemand_Roo_DataOnDemand&amp;amp;apos;




   at org.springframework.roo.support.util.Assert.isNull(Assert.java:89)




   at org.springframework.roo.classpath.details.ItdTypeDetailsBuilder.onAddMethod(ItdTypeDetailsBuilder.java:100)




   at org.springframework.roo.classpath.details.AbstractMemberHoldingTypeDetailsBuilder.addMethod(AbstractMemberHoldingTypeDetailsBuilder.java:183)




   at org.springframework.roo.classpath.details.AbstractMemberHoldingTypeDetailsBuilder.addMethod(AbstractMemberHoldingTypeDetailsBuilder.java:207)




   at org.springframework.roo.addon.dod.DataOnDemandMetadata.addFieldMutatorMethodsToBuilder(DataOnDemandMetadata.java:426)




   at org.springframework.roo.addon.dod.DataOnDemandMetadata.&amp;lt;init&amp;gt;(DataOnDemandMetadata.java:120)




   at org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.getMetadata(DataOnDemandMetadataProviderImpl.java:130)




   at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:269)




   at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:147)




   ... 17 more





</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.shell.NaturalOrderComparator.java</file>
		</fixedFiles>
	</bug>
	<bug id="2556" opendate="2011-07-05 22:25:15" fixdate="2011-07-05 22:41:36" resolution="Complete">
		<buginformation>
			<summary>Calendar fields need to use java.util.Date for Solr indexing</summary>
			<description>For indexing purposes the .getTime() method should be called on Calendar field types.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2560" opendate="2011-07-06 09:01:48" fixdate="2011-07-06 18:14:38" resolution="Complete">
		<buginformation>
			<summary>[DataNucleus] Introduced findXxx(id) method throws EmptyResultDataAccessException instead of returning null when no data is found</summary>
			<description>The following script:






domain.roo






persistence setup --provider DATANUCLEUS --database GOOGLE_APP_ENGINE --applicationId myapp




entity --class ~.server.domain.DomainObject --testAutomatically




field string --fieldName displayName --notNull




web gwt setup






will generate this "find by ID" method:






DomainObject_Roo_Entity.aj






@Transactional




public static DomainObject DomainObject.findDomainObject(Long id) {




    if (id == null) return null;




    try {




        return (DomainObject) entityManager().createQuery("SELECT o FROM DomainObject o WHERE o.id = :id").setParameter("id", id).getSingleResult();




    } catch (javax.persistence.NoResultException e) {




        return null;




    } 




}






If no row exists with that ID, JpaExceptionTranslatorAspect kicks in and translates the resulting javax.persistence.NoResultException into an org.springframework.dao.EmptyResultDataAccessException before it can be caught in the catch block, meaning that the finder throws the latter exception instead of returning null in that scenario.
As evidence of this bug, the generated DomainObjectIntegrationTest.testRemove() method fails with an org.springframework.dao.EmptyResultDataAccessException (thrown from the final assert statement).</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2563" opendate="2011-07-06 23:40:00" fixdate="2011-07-06 23:49:55" resolution="Complete">
		<buginformation>
			<summary>Integration test ITD does not get updated when switching between GAE and relational DBs</summary>
			<description>If the persistence is changed from a relational store to GAE for GWT projects, the integration test ITD is not refreshed, and vice versa</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.EmbeddedCommands.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.FinanceEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2562" opendate="2011-07-06 22:26:04" fixdate="2011-07-07 19:20:56" resolution="Fixed">
		<buginformation>
			<summary>Stock ticker chart doesn&amp;apos;t appear</summary>
			<description>If you run this script:






script clinic.roo




web mvc embed finances --stockSymbol VMW






... then the URL http://localhost:8080/petclinic/embed/finances displays an empty collapsible pane where the VMware stock price chart (shown here in non-embedded form) should be.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.FinanceEmbeddedProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2570" opendate="2011-07-07 19:26:52" fixdate="2011-07-07 19:28:31" resolution="Complete">
		<buginformation>
			<summary>recursiveAntMatch recurses on non-files not on directories</summary>
			<description>The issues was discovered when running the expenses script fro a directory in the root of a Windows drive e.g. "C:\expenses-test". Execution of the script failed due to "C:\log.roo" not being able to be found despite it not being in the project&amp;amp;apos;s root directory.</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.file.monitor.polling.PollingFileMonitorService.java</file>
		</fixedFiles>
	</bug>
	<bug id="2580" opendate="2011-07-11 13:56:01" fixdate="2011-07-11 16:08:22" resolution="Duplicate">
		<buginformation>
			<summary>Member holding type details required</summary>
			<description>I&amp;amp;apos;m working with spring roo 1.1.4 but I have a problem when I generate the model who is compound of several schemas. The spring roo console shows this:
Foreign key table for foreign key &amp;amp;apos;update_by_table_in_another_schema__users&amp;amp;apos; in table &amp;amp;apos;users&amp;amp;apos; must not be null in determining a one-to-one relationship
I have a user schema who has the table user, roles, roles_user and another business schema. In a table of my business schema I have a foreign key to table user of the users schema.
I tested the "database reverse enginner" with only one schema and this created the model classes without problems.
what Can I do? I have to work with only a schema
Thanks</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreCommands.java</file>
			<file type="M">org.springframework.roo.addon.dbre.converter.SchemaConverter.java</file>
			<file type="D">org.springframework.roo.addon.dbre.model.TableBean.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Table.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Schema.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreTypeUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.ForeignKey.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseContentHandler.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperations.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelService.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseIntrospector.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">1408</link>
		</links>
	</bug>
	<bug id="2587" opendate="2011-07-13 18:37:26" fixdate="2011-07-13 18:38:18" resolution="Complete">
		<buginformation>
			<summary>dbre.xml not inserted into maven-war-plugin as an exclusion when a database reverse engineered</summary>
			<description>A copy and paste error since 1.1.4 prevents the dbre.xml resource from being added to the maven-war-plugin as an exclusion.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2594" opendate="2011-07-20 05:18:08" fixdate="2011-07-20 05:20:35" resolution="Complete">
		<buginformation>
			<summary>Inner type field annotations are not written out to ITDs</summary>
			<description>Unlike the annotations of inner-type methods, field annotations are not written out.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
		</fixedFiles>
	</bug>
	<bug id="2588" opendate="2011-07-14 00:09:33" fixdate="2011-07-25 18:37:38" resolution="Fixed">
		<buginformation>
			<summary>TypeLocationService does not detect types with annotations in project due to eager caching</summary>
			<description>TypeLocationService.processTypesWithAnnotation() uses caching based on !fileMonitorService.isDirty(); (line 140 &amp;amp; 162). This leads to skipping of newly written types with the given annotation. I think this is because the file monitor service scans the file system once every 1000ms and if a Roo service invokes MemberFindingUtils.getAnnotationOfType(..) within that timespan it will not see the type because the fileMonitorService is not marked as dirty yet. Assigning to Alan to verify.
</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2604" opendate="2011-07-29 02:33:30" fixdate="2011-07-29 02:34:41" resolution="Complete">
		<buginformation>
			<summary>DbreMetadata ignores cascade attributes in dbre.xml</summary>
			<description>Though the onUpdate and onDelete cascade attributes obtained from the database metadata are written to the dbre.xml file, the values are not used to create CascadeType attributes in entity relationships</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2585" opendate="2011-07-13 05:20:21" fixdate="2011-07-29 23:04:08" resolution="Complete">
		<buginformation>
			<summary>&amp;apos;web mvc all&amp;apos; seems to have broken availability check</summary>
			<description>I just noticed when doing a &amp;amp;apos;help&amp;amp;apos; that &amp;amp;apos;controller all&amp;amp;apos; has been deprecated in favor of &amp;amp;apos;web mvc all&amp;amp;apos;. However, when trying that command on a project that has persistency set up and an entity defined I&amp;amp;apos;m getting an error message stating that the command is not currently available. &amp;amp;apos;controller all&amp;amp;apos; works though, so it seems like there&amp;amp;apos;s a broken availability check for the new spring mvc version of the command. </description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.HintConverter.java</file>
			<file type="M">org.springframework.roo.classpath.operations.HintCommands.java</file>
			<file type="M">org.springframework.roo.classpath.operations.HintOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="2606" opendate="2011-07-30 07:52:56" fixdate="2011-07-31 16:26:13" resolution="Complete">
		<buginformation>
			<summary>Reverse engineering issue. Generated AJ source file includes the following definition: @Temporal(TemporalType.DATETIME)</summary>
			<description>Hi
I&amp;amp;apos;ve executed the roo database reverse engineering command using the --includeNonPortableAttributes switch on a MSSQL server 2008 R2 database. The dbre.xml file generated by the reverse engineering operation contains the following table definition:
&amp;lt;table name="DAILY_MARKET"&amp;gt;
  &amp;lt;column name="DM_DATE" primaryKey="true" required="true" scale="3" size="23" type="93,datetime"/&amp;gt;
  &amp;lt;column name="DM_S_SYMB" primaryKey="true" required="true" scale="0" size="15" type="1,char"/&amp;gt;
  ...
&amp;lt;/table&amp;gt;
The DDL used for generating the table looks like this:
CREATE TABLE [dbo].[DAILY_MARKET](
[DM_DATE] [datetime] NOT NULL,
[DM_S_SYMB] [char](15) NOT NULL,
...
The DailyMarketPK_Roo_Identifier.aj source file generated by roo contains the folloing java code snippet:
privileged aspect DailyMarketPK_Roo_Identifier {
    declare @type: DailyMarketPK: @Embeddable;
    @Column(name = "DM_DATE", columnDefinition = "datetime", nullable = false)
    @Temporal(TemporalType.DATETIME)
    @DateTimeFormat(style = "S-")
    private Date DailyMarketPK.dmDate;
The AJC compiler then complains about the statement @Temporal(TemporalType.DATETIME) since the JPA enum TemporalType does not contain the DATETIME element but only the DATE, TIME and TIMESTAMP elements.
I&amp;amp;apos;m not sure about the priority of this issue, so please adjust according to your normal conventions.
Best regards
Jorgen</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.IdentifierMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2517" opendate="2011-06-20 17:53:18" fixdate="2011-07-31 18:13:03" resolution="Complete">
		<buginformation>
			<summary>GWT and test addons don&amp;apos;t support "id" domain suffix (i.e. Indonesia)</summary>
			<description>If you create a project as follows:






project --topLevelPackage id.foo




persistence setup --database HYPERSONIC_IN_MEMORY --provider HIBERNATE




entity --class ~.domain.Pizza




field string --fieldName name




gwt setup






... the following Java file is generated:






src/main/java/id/foo/client/managed/ui/PizzaDetailsView_Roo_Gwt.java






// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.









package id.co.foo.client.managed.ui;









import com.google.gwt.core.client.GWT;




import com.google.gwt.dom.client.SpanElement;




import com.google.gwt.event.dom.client.ClickEvent;




import com.google.gwt.event.dom.client.HasClickHandlers;




import com.google.gwt.i18n.client.DateTimeFormat;




import com.google.gwt.i18n.client.NumberFormat;




import com.google.gwt.uibinder.client.UiBinder;




import com.google.gwt.uibinder.client.UiField;




import com.google.gwt.uibinder.client.UiHandler;




import com.google.gwt.user.client.Window;




import com.google.gwt.user.client.ui.Composite;




import com.google.gwt.user.client.ui.HTMLPanel;




import com.google.gwt.user.client.ui.Widget;




import id.co.foo.client.managed.request.PizzaProxy;




import id.co.foo.client.scaffold.place.ProxyDetailsView;




import id.co.foo.client.scaffold.place.ProxyListView;









public abstract class PizzaDetailsView_Roo_Gwt extends Composite implements ProxyDetailsView&amp;lt;PizzaProxy&amp;gt; {









    @UiField




    SpanElement id;









    @UiField




    SpanElement version;









    @UiField




    SpanElement name;









    PizzaProxy proxy;









    @UiField




    SpanElement displayRenderer;









    public void setValue(PizzaProxy proxy) {




        this.proxy = proxy;




        id.setInnerText(proxy.getId() == null ? "" : String.valueOf(proxy.getId()));




        version.setInnerText(proxy.getVersion() == null ? "" : String.valueOf(proxy.getVersion()));




        name.setInnerText(proxy.getName() == null ? "" : String.valueOf(proxy.getName()));




        displayRenderer.setInnerText(id.co.foo.client.managed.ui.PizzaProxyRenderer.instance().render(proxy));




    }




}






... in which the following line doesn&amp;amp;apos;t compile, because the "id" root package clashes with the ITD&amp;amp;apos;s "id" SpanElement field:






displayRenderer.setInnerText(id.co.foo.client.managed.ui.PizzaProxyRenderer.instance().render(proxy));






The workaround is to cut-and-paste the setValue method into the target Java class (in this example, PizzaDetailsView.java) and remove the package name as follows:






PizzaDetailsView.java






displayRenderer.setInnerText(PizzaProxyRenderer.instance().render(proxy));





</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.1.5.RELEASE, 1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2584" opendate="2011-07-13 05:16:33" fixdate="2011-08-01 00:06:43" resolution="Complete">
		<buginformation>
			<summary>Arrow keys stop working under Windows 7 with Roo 1.1.5</summary>
			<description>I just tried to create a new project using Roo 1.1.5 and noticed that the arrow keys no longer work in the command line shell on my Windows 7 laptop. Haven&amp;amp;apos;t checked the sources to see what has changed (JLine, Roo shell code), but it&amp;amp;apos;s very annoying. Same thing for the home and end key and the page up/down, BTW. Under Roo 1.1.4 this problem didn&amp;amp;apos;t exist. </description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.jline.JLineShell.java</file>
		</fixedFiles>
	</bug>
	<bug id="2322" opendate="2011-04-11 13:37:24" fixdate="2011-08-01 02:36:26" resolution="Complete">
		<buginformation>
			<summary>Invalid dependency between upstream ...  and downstream ...</summary>
			<description>When RooShell is started on a project in STS, the following message is shown:
Invalid dependency between upstream &amp;amp;apos;MID:org.springframework.roo.addon.dod.DataOnDemandMetadata#SRC_TEST_JAVA?br.com.brpex.paavo.dominio.PedidoDataOnDemand&amp;amp;apos; and downstream &amp;amp;apos;MID:org.springframework.roo.addon.dod.DataOnDemandMetadata#SRC_TEST_JAVA?br.com.brpex.paavo.dominio.AndamentoPedidoDataOnDemand&amp;amp;apos;
Moreover, Roo not updated the files .j when i change my entities adding a new field, for example. Is that a problem is related to the first one?
Thanks.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2615" opendate="2011-08-02 07:24:01" fixdate="2011-08-02 16:15:17" resolution="Complete">
		<buginformation>
			<summary>Compile error in generated test classes - missing import of BigDecimal in *DataOnDemand.aj aspect</summary>
			<description>Hi
I used Roo to build a web app based on the reverse engineering of a SQL Server 2008 R2 database. The reverse engineering command included the --testAutomatically switch in order to auto generate the associated test classes. 
The auto generated test code however contains the following compile error:
error at CompanyCompetitorPK embeddedIdClass = new CompanyCompetitorPK(BigDecimal.valueOf(index), BigDecimal.valueOf(index), "c" + index);                                                            ^
C:\Development\Projects\Roo\TCPEx3-hibernate\src\test\java\org\tpc\tpce\hibernate\domain\CompanyCompetitorDataOnDemand_Roo_DataOnDemand.aj:46:0::0 BigDecimal cannot be resolved
The auto generated code simply forgets to import the BigDecimal class.
The SQL Server database table used for building the CompanyCompetitor entity is defined as follows:
CREATE TABLE [dbo].[COMPANY_COMPETITOR](
[CP_CO_ID] [numeric](11, 0) NOT NULL,
[CP_COMP_CO_ID] [numeric](11, 0) NOT NULL,
[CP_IN_ID] [char](2) NOT NULL,
PRIMARY KEY CLUSTERED 
(
[CP_CO_ID] ASC,
[CP_COMP_CO_ID] ASC,
[CP_IN_ID] ASC
)
I have attached the Roo project including the offending CompanyCompetitorDataOnDemand_Roo_DataOnDemand.aj file.
Best regards
Jorgen Fastrup</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2618" opendate="2011-08-03 10:44:44" fixdate="2011-08-03 17:24:04" resolution="Complete">
		<buginformation>
			<summary>Entity integration tests fail to compile with Database.com (VMFORCE) database</summary>
			<description>Database.com (VMFORCE) entities have special requirements for the version field which is coded into the Entity Addon.  Unfortunately, the Test Addon doesn&amp;amp;apos;t account for these:
[INFO] Compiler errors : 
error at org.junit.Assert.assertTrue("Version for &amp;amp;apos;Visit&amp;amp;apos; failed to increment on flush directive", (currentVersion != null &amp;amp;&amp;amp; obj.getLastModifiedDate() &amp;gt; currentVersion) || !modified);
                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/home/tkral/dev/samples/roo-clinic/src/test/java/com/springsource/petclinic/domain/VisitIntegrationTest_Roo_IntegrationTest.aj:74:0::0 The operator &amp;gt; is undefined for the argument type(s) java.util.Calendar, java.util.Calendar
error at org.junit.Assert.assertTrue("Version for &amp;amp;apos;Visit&amp;amp;apos; failed to increment on merge and flush directive", (currentVersion != null &amp;amp;&amp;amp; obj.getLastModifiedDate() &amp;gt; currentVersion) || !modified);
                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2624" opendate="2011-08-05 07:41:25" fixdate="2011-08-05 22:15:20" resolution="Complete">
		<buginformation>
			<summary>Roo generates invalid SQL for Derby database</summary>
			<description>In Roo, do this:






// Spring Roo 1.1.5.RELEASE [rev d3a68c3] log opened at 2011-07-28 11:10:39




project --topLevelPackage blah.bcfactory --projectName blah --java 6




persistence setup --database DERBY --provider ECLIPSELINK 




entity --class ~.domain.MacAddress --testAutomatically 




field number --fieldName id --type java.lang.Long --notNull 




perform test






What&amp;amp;apos;ll you get?






Local Exception Stack: 




Exception [EclipseLink-4002] (Eclipse Persistence Services - 2.2.0.v20110202-r8913): org.eclipse.persistence.exceptions.DatabaseException




Internal Exception: java.sql.SQLSyntaxErrorException: Syntax error: Encountered "_" at line 1, column 8.




Error Code: 30000




Call: SELECT _id, ID, version FROM MACADDRESS




Query: ReadAllQuery(referenceClass=MacAddress sql="SELECT _id, ID, version FROM MACADDRESS")









at org.eclipse.persistence.exceptions.DatabaseException.sqlException(DatabaseException.java:333)




at org.eclipse.persistence.internal.databaseaccess.DatabaseAccessor.basicExecuteCall(DatabaseAccessor.java:684)




at org.eclipse.persistence.internal.databaseaccess.DatabaseAccessor.executeCall(DatabaseAccessor.java:526)




at org.eclipse.persistence.internal.sessions.AbstractSession.basicExecuteCall(AbstractSession.java:1729)




at org.eclipse.persistence.sessions.server.ServerSession.executeCall(ServerSession.java:566)




at org.eclipse.persistence.internal.queries.DatasourceCallQueryMechanism.executeCall(DatasourceCallQueryMechanism.java:207)




at org.eclipse.persistence.internal.queries.DatasourceCallQueryMechanism.executeCall(DatasourceCallQueryMechanism.java:193)




at org.eclipse.persistence.internal.queries.DatasourceCallQueryMechanism.executeSelectCall(DatasourceCallQueryMechanism.java:264)




at org.eclipse.persistence.internal.queries.DatasourceCallQueryMechanism.selectAllRows(DatasourceCallQueryMechanism.java:647)





</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2619" opendate="2011-08-03 23:30:06" fixdate="2011-08-08 18:39:14" resolution="Complete">
		<buginformation>
			<summary>Database reverse engineer a table with a boolean field and property generated incorrectly</summary>
			<description>If I reverse engineer the following table:






CREATE TABLE app_user




(




  id bigint NOT NULL,




  account_expired boolean NOT NULL,




  -- ...




)






then the following property code is generated for account_expired:






 




    public Boolean AppUser.getAccountExpired() {




        return this.accountExpired;




    }









    public boolean AppUser.isAccountExpired() {




        return this.accountExpired != null &amp;amp;&amp;amp; this.accountExpired;




    }









    public void AppUser.setAccountExpired(Boolean accountExpired) {




        this.accountExpired = accountExpired;




    }






Unfortunately this causes problems when creating or editing an AppUser in the webapp (after generating a web tier with "controller all --package ~.web") - Spring MVC&amp;amp;apos;s doBind method picks up the boolean "is" method and decides that the property is read-only as there is no matching set(boolean) method. This means that you can&amp;amp;apos;t set accountExpired from the web tier.
The fix for me is simple - remove the code:






		// Add boolean accessor for Boolean object fields




		if (field.getFieldType().equals(JavaType.BOOLEAN_OBJECT) &amp;amp;&amp;amp; !hasBooleanPrimitiveAccessor(field)) {




			builder.addMethod(getBooleanPrimitiveAccessor(field));




		}






which I believe is redundant. Any reason why this code is there?
Patch attached.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">1945</link>
		</links>
	</bug>
	<bug id="1408" opendate="2010-09-16 09:39:49" fixdate="2011-08-10 17:51:37" resolution="Complete">
		<buginformation>
			<summary>DBRE multiple schema support</summary>
			<description>At the moment we allow only one database schema per project in DBRE.
What is the problem to support multiple? For instance:






database reverse engineer --schema SCHEMA_1 --package ~.model.schema1




database reverse engineer --schema SCHEMA_2 --package ~.model.schema2






At the moment second script command wipes out all generated artifacts created by first command.</description>
			<version>1.1.0.RC1</version>
			<fixedVersion>1.2.0.M1, 1.2.0.RC1</fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreCommands.java</file>
			<file type="M">org.springframework.roo.addon.dbre.converter.SchemaConverter.java</file>
			<file type="D">org.springframework.roo.addon.dbre.model.TableBean.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Table.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Schema.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreTypeUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.ForeignKey.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseContentHandler.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperations.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelService.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseIntrospector.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2580</link>
			<link type="Duplicate" description="is duplicated by">2272</link>
		</links>
	</bug>
	<bug id="2612" opendate="2011-08-01 22:26:52" fixdate="2011-08-11 23:33:22" resolution="Complete">
		<buginformation>
			<summary>Entity .merge() method should be generified to accomodate inheritance</summary>
			<description>In the clinic.roo example, the Owner and Vet entities inherit their merge() methods from the AbstractPerson superclass. However, since that method is not generifed, it actually returns an AbstractPerson rather than an Owner or Vet, meaning that the following code will not compile:






Owner updatedOwner = owner.merge();





</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2610" opendate="2011-07-31 18:15:34" fixdate="2011-08-12 06:25:49" resolution="Complete">
		<buginformation>
			<summary>Corrupt characters appearing in Roo shell in OS X Lion 10.7</summary>
			<description>Since changing to OS X Lion, the Roo shell is displaying extraneous characters</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.jline.JLineShell.java</file>
		</fixedFiles>
	</bug>
	<bug id="2638" opendate="2011-08-10 19:33:23" fixdate="2011-08-16 18:35:00" resolution="Fixed">
		<buginformation>
			<summary>Git addon reports incorrect commit ID</summary>
			<description>To replicate, run this script:






project --topLevelPackage com.foo




git setup




q






Then run "git log" from the command prompt. The commit ID reported by the Git addon is different to that reported by "git log". Here&amp;amp;apos;s an example:






1.2.0.BUILD-SNAPSHOT [rev 87bde46]









Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.




roo&amp;gt; project --topLevelPackage com.foo




0b2872e Created ROOT/pom.xml




Created SRC_MAIN_JAVA




Created SRC_MAIN_RESOURCES




Created SRC_TEST_JAVA




Created SRC_TEST_RESOURCES




Created SRC_MAIN_WEBAPP




Created SRC_MAIN_RESOURCES/META-INF/spring




53126d9 Created SRC_MAIN_RESOURCES/log4j.properties




5360da5 Created SRC_MAIN_RESOURCES/META-INF/spring/applicationContext.xml




com.foo roo&amp;gt; git setup




5ae253a Created ROOT/.gitignore




Git commit 71c9442c5484326e6714ac53db5ad4c445744b99 [git setup]




com.foo roo&amp;gt; q




Total execution time 20 seconds




Roo exited with code 0




aswan: gitto &amp;gt; git log




commit 8ae7ca485529f89847217d5e7d304d75e3601fb6




Author: Roo Git Add-On &amp;lt;s2-roo@vmware.com&amp;gt;




Date:   Thu Aug 11 12:25:54 2011 +1000









    git setup





</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.git.GitOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2626" opendate="2011-08-07 14:26:17" fixdate="2011-08-16 23:20:46" resolution="Fixed">
		<buginformation>
			<summary>No converter found capable of converting from &amp;apos;java.util.Set&amp;apos; to &amp;apos;java.lang.String&amp;apos; - Roo issue 2409 continued</summary>
			<description>When trying to access the "Industrys" list.jspx file the Spring MVC throws the execption just below and then displayes an error message to the end-user.
SEVERE: Servlet.service() for servlet jsp threw exception
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from &amp;amp;apos;java.util.Set&amp;amp;apos; to &amp;amp;apos;java.lang.String&amp;amp;apos;
        at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:181)
        at org.springframework.expression.spel.support.StandardTypeConverter.convertValue(StandardTypeConverter.java:66)
This issues is related to Roo issue 2409.
I have attached the Roo project as well as the SQL DDL used to generate the SQL Server 2008 database. The database schema used by the web application contains 4 tables. The tables SECTOR and INDUSTRY each contains one single record and the rest of the tables are empty.
The Web application works perfectly as long as I only build a web aplication based on these 3 tables: SECTOR, INDUSTRY and COMPANY. 
Once I add the COMPANY_COMPETITOR table to the database schema and then regneerates the entire Roo project from scratch the execption above occurs. Note that the table COMPANY_COMPETITOR has 2 individual foreign key constraints that each reference the same column in the COMPANY table.
Best regards
Jorgen Fastrup
</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="1999" opendate="2011-01-17 22:29:06" fixdate="2011-08-16 23:48:14" resolution="Complete">
		<buginformation>
			<summary>Composite primary key support in MVC scaffolding</summary>
			<description>table relation in db
HOLE Table oneToMany -&amp;gt; TEE Table
TEE_SET Table OneToMany -&amp;gt;TEE Table
CREATE TABLE `TEE` (
  `HOLE_ID` bigint(20) NOT NULL,
  `TEE_SET_ID` bigint(20) NOT NULL,
   ...
  PRIMARY KEY (`HOLE_ID`,`TEE_SET_ID`),
  KEY `FK143F4FF05EDBE` (`TEE_SET_ID`),
  KEY `FK143F4F8F88267` (`HOLE_ID`),
  CONSTRAINT `FK143F4F8F88267` FOREIGN KEY (`HOLE_ID`) REFERENCES `HOLE` (`ID`),
  CONSTRAINT `FK143F4FF05EDBE` FOREIGN KEY (`TEE_SET_ID`) REFERENCES `TEE_SET` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
1. i build roo from git ok then show Spring Roo 1.1.2.BUILD-SNAPSHOT
2. mvn tomcat:run it run ok
3. i show in web list other entity table ok, but tee table error!
//////
http://localhost:8080/stan/tees?page=1&amp;amp;size=10
show
Data access failure
Sorry, a problem occurred while accessing the database.
Exception Message
org.hibernate.exception.DataException: could not execute query; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.DataException: could not execute query
Exception Stack Trace
org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:311)
org.springframework.orm.jpa.aspectj.JpaExceptionTranslatorAspect.ajc$afterThrowing$org_springframework_orm_jpa_aspectj_JpaExceptionTranslatorAspect$1$18a1ac9(JpaExceptionTranslatorAspect.aj:15)
com.stan.domain.Tee_Roo_Entity.countTees_aroundBody2(Tee_Roo_Entity.aj:74)
com.stan.domain.Tee_Roo_Entity.ajc$interMethod$com_stan_domain_Tee_Roo_Entity$com_stan_domain_Tee$countTees(Tee_Roo_Entity.aj:1)
com.stan.domain.Tee.countTees(Tee.java:1)
com.stan.domain.Tee_Roo_Entity.ajc$interMethodDispatch1$com_stan_domain_Tee_Roo_Entity$com_stan_domain_Tee$countTees(Tee_Roo_Entity.aj)
com.stan.web.TeeController_Roo_Controller.ajc$interMethod$com_stan_web_TeeController_Roo_Controller$com_stan_web_TeeController$list(TeeController_Roo_Controller.aj:56)
com.stan.web.TeeController.list(TeeController.java:1)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
java.lang.reflect.Method.invoke(Method.java:597)
org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)
org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:426)
org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:414)
org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:790)
org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719)
org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:549)
javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:113)
org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
java.lang.Thread.run(Thread.java:619)
4. roo.LOg
// Spring Roo 1.1.2.BUILD-SNAPSHOT [rev 9625210] log opened at 2011-01-18 13:34:18
hint
project --topLevelPackage com.stan
hint
persistence setup --provider HIBERNATE --database MYSQL
database properties list
database properties set --key database.username --value open18
database properties set --key database.password --value tiger
database properties set --key database.url --value jdbc:mysql://localhost:3306/open18
database properties list
database reverse engineer --schema open18 --package ~.domain
controller all --package ~.web
perform test
perform package
quit
// Spring Roo 1.1.2.BUILD-SNAPSHOT [rev 9625210] log closed at 2011-01-18 13:40:35
5, my database struct in attachment open18.sql.
</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.json.CustomDataJsonTags.java</file>
			<file type="M">org.springframework.roo.addon.serializable.CustomDataSerializableTags.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.CustomDataPersistenceTags.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.serializable.SerializableMetadata.java</file>
			<file type="M">org.springframework.roo.addon.json.JsonMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="is depended on by">2214</link>
			<link type="Duplicate" description="is duplicated by">2082</link>
		</links>
	</bug>
	<bug id="2627" opendate="2011-08-07 20:01:22" fixdate="2011-08-16 23:48:38" resolution="Complete">
		<buginformation>
			<summary>Unneeded dependencies breaking Spring ROO on GAE since 1.1.5</summary>
			<description>The following was added to my pom since 1.1.5






    &amp;lt;dependency&amp;gt;




            &amp;lt;groupId&amp;gt;javax.servlet.jsp.jstl&amp;lt;/groupId&amp;gt;




            &amp;lt;artifactId&amp;gt;jstl-api&amp;lt;/artifactId&amp;gt;




            &amp;lt;version&amp;gt;1.2&amp;lt;/version&amp;gt;




            &amp;lt;classifier/&amp;gt;




        &amp;lt;/dependency&amp;gt;




        &amp;lt;dependency&amp;gt;




            &amp;lt;groupId&amp;gt;org.glassfish.web&amp;lt;/groupId&amp;gt;




            &amp;lt;artifactId&amp;gt;jstl-impl&amp;lt;/artifactId&amp;gt;




            &amp;lt;version&amp;gt;1.2&amp;lt;/version&amp;gt;




            &amp;lt;classifier/&amp;gt;




        &amp;lt;/dependency&amp;gt;






These break all list pages.  The following exception is generated:






Caused by: javax.servlet.jsp.JspException: javax.servlet.jsp.JspException: java.lang.NoSuchMethodError: org.apache.taglibs.standard.tag.rt.core.ForTokensTag.setItems(Ljava/lang/Object;)V




	at org.apache.jsp.WEB_002dINF.views.admin.users.list_jspx$Helper.invoke(list_jspx.java:299)




	at org.apache.jsp.tag.web.form.list_tagx._jspx_meth_c_005fwhen_005f0(list_tagx.java:435)




	at org.apache.jsp.tag.web.form.list_tagx._jspx_meth_c_005fchoose_005f0(list_tagx.java:403)




	at org.apache.jsp.tag.web.form.list_tagx.access$000(list_tagx.java:7)




	at org.apache.jsp.tag.web.form.list_tagx$Helper.invoke0(list_tagx.java:517)




	at org.apache.jsp.tag.web.form.list_tagx$Helper.invoke(list_tagx.java:534)




	at org.apache.jsp.tag.web.util.panel_tagx._jspx_meth_c_005fif_005f0(panel_tagx.java:184)




	at org.apache.jsp.tag.web.util.panel_tagx.doTag(panel_tagx.java:130)




	at org.apache.jsp.tag.web.form.list_tagx._jspx_meth_util_005fpanel_005f0(list_tagx.java:388)




	at org.apache.jsp.tag.web.form.list_tagx._jspx_meth_c_005fif_005f0(list_tagx.java:212)




	at org.apache.jsp.tag.web.form.list_tagx.doTag(list_tagx.java:176)




	at org.apache.jsp.WEB_002dINF.views.admin.users.list_jspx._jspx_meth_page_005flist_005f0(list_jspx.java:93)




	at org.apache.jsp.WEB_002dINF.views.admin.users.list_jspx._jspService(list_jspx.java:63)





</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.ProjectOperations.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="is depended on by">1006</link>
			<link type="Relate" description="relates to">2518</link>
			<link type="Relate" description="relates to">1006</link>
		</links>
	</bug>
	<bug id="1006" opendate="2010-06-16 13:40:05" fixdate="2011-08-16 23:52:17" resolution="Complete">
		<buginformation>
			<summary>Roo generated Spring MVC apps should be deployable on GAE</summary>
			<description>Currently GAE raises a compilation exception of the Roo generated jspx files in a GAE environment. The problem is the use of jasper-runtime-5.0.28.jar in the current version of GAE alongside geronimo-jsp_2.1_spec-1.0.1.jar. This means that GAE have an API which allows JSP 2.1 and an implementation of Jasper which only supports JSP 2.0. Spring Roo generated MVC apps use a number of JSP 2.1 features (mostly EL related) which are supported by all current Web containers but not GAE. (see http://code.google.com/p/googleappengine/issues/detail?id=1506)
As such GAE deployments are currently not supported by Roo generated Spring MVC applications. However, we are in contact with Google to resolve this issue as soon as possible. As a workaround Roo could ship a custom tag library (potentially with reduced functionality) to support JSP 2.0 EL. 
Another issue which needs to be resolved is the full support of the default GAE data store. This will require changes outlined in ROO-611 to fully support references between domain objects.</description>
			<version>1.1.0.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="depends on">2627</link>
			<link type="Duplicate" description="is duplicated by">1897</link>
			<link type="Relate" description="is related to">2627</link>
			<link type="Related" description="is related to">996</link>
			<link type="Related" description="is related to">996</link>
		</links>
	</bug>
	<bug id="2603" opendate="2011-07-28 08:32:48" fixdate="2011-08-17 22:57:46" resolution="Fixed">
		<buginformation>
			<summary>Sets and Integers not appearing in some views.</summary>
			<description>This is a follow-up to the forum thread:
http://forum.springsource.org/showthread.php?112415-Sets-not-appearing-in-quot-show-quot-views.&amp;amp;p=373337#post373337
The following examples refer to the attached domain objects and fields.
Regarding the fact that some Integers are not displayed: For example a Practice&amp;amp;apos;s
formalityLevel,
qualityLevel,
speedLevel,
valueLevel,
perceptionLevel and
outcomeProductionDirectness
are not displayed on the Practices&amp;amp;apos; list.
Regarding the fact that some Sets are not displayed: For example a Risk&amp;amp;apos;s Set&amp;lt;OutcomeSufficiency&amp;gt; is correctly displayed on the Risk&amp;amp;apos;s "list" view, but not on its "show" view.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="2661" opendate="2011-08-23 10:52:06" fixdate="2011-08-25 05:13:29" resolution="Complete">
		<buginformation>
			<summary>Metadata conventions not being adhered to</summary>
			<description>Whilst the foundation is present for invalidating a MetadataItem after instantiation it is not being used in number of places, i.e. the MetadataItem is being returned as valid when it is not, which leads to instability in Roo. 
Roo&amp;amp;apos;s metadata system works on the principal that if a MetadataItem can&amp;amp;apos;t be created, for whatever reason, null should be returned from MetadataProvider.get(String). When such a condition is reached within a MetadataItem a flag needs to be set and this flag should be interpreted by the provider in order to determine if the produced MetadataItem is valid and if it is not then null would be returned instead of the incomplete MetadataItem. The valid flag can already be found in AbstractMetadataItem, which most MetadataItems extend, and if the MetadataProvider extends AbstractItdMetadataProvider, then, if the produced MetadataItem is invalid null will be returned.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.TypeMatcher.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfManagedBeanMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadata.java</file>
			<file type="M">org.springframework.roo.addon.property.editor.EditorMetadata.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2664" opendate="2011-08-23 11:06:02" fixdate="2011-08-25 05:24:15" resolution="Complete">
		<buginformation>
			<summary>GwtOperationsImpl not forcing found types to be evicted from the cache prior to retrieval</summary>
			<description>As part of running "gwt setup" all types are re-requested to ensure that the gwt-addon has a chance to react to the types in the system. To make sure a notify is performed and a cached type isn&amp;amp;apos;t returned the requested type needs to be explicitly evicted from the cache when retrieving it. This explicit eviction isn&amp;amp;apos;t currently being performed.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2665" opendate="2011-08-23 11:10:47" fixdate="2011-08-26 00:30:40" resolution="Complete">
		<buginformation>
			<summary>EntityMetadataProviderImpl fails to find the parent EntityMetadata in certain circumstances</summary>
			<description>In certain circumstances EntityMetadataProviderImpl incorrectly returns a parent EntityMetadata as null. It is perfectly valid for an EntityMetadata not to have a parent EntityMetadata but in some cases it indicates that not enough information is ready to proceed with metadata creation. In the case of EntityMetadata if the governor has a super class and said super class is annotated with @RooEntity the parent EntityMetadata the parent should be resolved and not null. If the parent EntityMetadata is null this indicates a problem and null should be returned instead of continuing as if the EntityMetadata to be produced doesn&amp;amp;apos;t have a parent.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProviderImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2659" opendate="2011-08-23 10:05:25" fixdate="2011-08-26 01:00:11" resolution="Complete">
		<buginformation>
			<summary>TypeLocationService is not providing a consistent type cache</summary>
			<description>The type cache maintained by TypeLocationService isn&amp;amp;apos;t in-step with the on-disk type representation, this is largely to do with the fact that the filesystem changes can&amp;amp;apos;t be reliably interpreted.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.file.monitor.polling.PollingFileMonitorService.java</file>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceOperationsImpl.java</file>
			<file type="M">org.springframework.roo.classpath.TypeLocationService.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceOperationsImplTests.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">2656</link>
		</links>
	</bug>
	<bug id="2662" opendate="2011-08-23 10:54:26" fixdate="2011-08-26 01:22:34" resolution="Complete">
		<buginformation>
			<summary>LayerTypeMatcher is incorrectly implemented</summary>
			<description>LayerTypeMatcher is currently matching on an ITD&amp;amp;apos;s MID, despite being interested in a type. Once a matching ITD is discovered the actual target, the ITD&amp;amp;apos;s governor, is extracted. This is fine to do when the target doesn&amp;amp;apos;t contain the information you need, i.e. the ITD is created based on no information present in the governor, but this is a pretty unusual case as most ITDs are created via trigger annotations on the governor. The correct approach would be to match on an attribute found in the target, in this case an annotation on governor type. </description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.CustomDataKeyDecoratorImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.entity.JpaEntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.taggers.Matcher.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerTypeMatcher.java</file>
		</fixedFiles>
	</bug>
	<bug id="2663" opendate="2011-08-23 11:04:27" fixdate="2011-08-26 01:33:23" resolution="Complete">
		<buginformation>
			<summary>Caching locators don&amp;apos;t work properly</summary>
			<description>RepositoryJpaLocatorImpl, ServiceInterfaceLocatorImpl and PersistenceMemberLocatorImpl all rely on the Metadata notification system in order to invalidate their cache. As discussed in issue ROO-2656 this mechanism is not a reliable enough to be used in this way.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.persistence.PersistenceMemberLocatorImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceLocatorImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaLocatorImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2658" opendate="2011-08-23 09:33:28" fixdate="2011-08-29 01:48:25" resolution="Complete">
		<buginformation>
			<summary>Execution-scoped configurations ignored when loading Maven plugin details from XML</summary>
			<description>When an addon loads a Maven plugin&amp;amp;apos;s details from an XML file (e.g. from the addon&amp;amp;apos;s configuration.xml file), Roo ignores any "execution"-scoped "configuration" elements, i.e. those matching //plugin/executions/execution/configuration. Other plugin details are read correctly. The XmlUtils.parseXML method pulls the values into a W3C Element properly, but when Roo constructs an o.s.r.project.Plugin from that Element, the execution-scoped configuration is dropped.  
The plugin I am customizing is the build-helper-maven-plugin, which demonstrates this style of configuration on its usage page.
The settings I&amp;amp;apos;m applying are:






&amp;lt;plugin&amp;gt;




  &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt;




  &amp;lt;artifactId&amp;gt;build-helper-maven-plugin&amp;lt;/artifactId&amp;gt;




  &amp;lt;version&amp;gt;1.5&amp;lt;/version&amp;gt;




  &amp;lt;executions&amp;gt;




      &amp;lt;execution&amp;gt;




          &amp;lt;id&amp;gt;add-source&amp;lt;/id&amp;gt;




          &amp;lt;phase&amp;gt;generate-sources&amp;lt;/phase&amp;gt;




          &amp;lt;goals&amp;gt;




              &amp;lt;goal&amp;gt;add-source&amp;lt;/goal&amp;gt;




          &amp;lt;/goals&amp;gt;




          &amp;lt;configuration&amp;gt;




              &amp;lt;sources&amp;gt;




                  &amp;lt;source&amp;gt;src/main/groovy&amp;lt;/source&amp;gt;




              &amp;lt;/sources&amp;gt;




          &amp;lt;/configuration&amp;gt;




      &amp;lt;/execution&amp;gt;




      &amp;lt;execution&amp;gt;




          &amp;lt;id&amp;gt;add-test-source&amp;lt;/id&amp;gt;




          &amp;lt;phase&amp;gt;generate-test-sources&amp;lt;/phase&amp;gt;




          &amp;lt;goals&amp;gt;




              &amp;lt;goal&amp;gt;add-test-source&amp;lt;/goal&amp;gt;




          &amp;lt;/goals&amp;gt;




          &amp;lt;configuration&amp;gt;




              &amp;lt;sources&amp;gt;




                  &amp;lt;source&amp;gt;src/test/groovy&amp;lt;/source&amp;gt;




              &amp;lt;/sources&amp;gt;




          &amp;lt;/configuration&amp;gt;




      &amp;lt;/execution&amp;gt;




  &amp;lt;/executions&amp;gt;




&amp;lt;/plugin&amp;gt;





</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.RepositoryTest.java</file>
			<file type="M">org.springframework.roo.project.PluginTest.java</file>
			<file type="M">org.springframework.roo.project.DependencyTest.java</file>
			<file type="M">org.springframework.roo.support.util.StringUtils.java</file>
			<file type="M">org.springframework.roo.project.ResourceTest.java</file>
			<file type="M">org.springframework.roo.project.ExecutionTest.java</file>
			<file type="M">org.springframework.roo.project.Resource.java</file>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.Dependency.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.project.Plugin.java</file>
			<file type="M">org.springframework.roo.support.util.XmlElementBuilder.java</file>
			<file type="M">org.springframework.roo.project.Configuration.java</file>
			<file type="M">org.springframework.roo.project.Execution.java</file>
			<file type="M">org.springframework.roo.project.Repository.java</file>
			<file type="M">org.springframework.roo.support.util.ObjectUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="2681" opendate="2011-08-30 13:58:43" fixdate="2011-08-30 16:47:55" resolution="Fixed">
		<buginformation>
			<summary>Compiler error in ApplicationConversionServiceFactoryBean under jdk 1.5</summary>
			<description>As was reported already in march 2010 with Roo 1.1 see https://jira.springsource.org/browse/ROO-708  Roo 1.2.0 SNAPSHOT since some build once again wrongly  under jdk 1.5 because of this old bug: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5008260  adds "@override" to the convert method in ApplicationConversionServiceFactoryBean_Roo_ConversionService.aj:
Example: 
 public Converter&amp;lt;Long, Course&amp;gt; ApplicationConversionServiceFactoryBean.getIdToCourseConverter() {
        return new org.springframework.core.convert.converter.Converter&amp;lt;java.lang.Long, org.rooina.coursemanager.model.Course&amp;gt;() {
            @Override //compiler error
            public org.rooina.coursemanager.model.Course convert(java.lang.Long id) 
{
                return Course.findCourse(id);
            }
        };
    }
Roo 1.1.5 doesn&amp;amp;apos;t do this, so why have this behaviour been restored?
The only way out of this seem to be push out all of the .aj file to the java source, thus loosing Roo assistance.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2689" opendate="2011-09-01 17:09:35" fixdate="2011-09-01 17:25:14" resolution="Complete">
		<buginformation>
			<summary>javax.persistence.TemporalType should only be applied to java.util.Date and java.util.Calendar fields</summary>
			<description>Hibernate and EclipseLink report an error if the TemporalType annotation is applied to java.sql.Timestamp fields. The javadocs for the annotation say that Date and Calendar are supported, which is backed up by the messages generated by Hibernate.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="301" opendate="2009-10-18 21:34:28" fixdate="2011-09-03 03:00:47" resolution="Complete">
		<buginformation>
			<summary>Choose between data access patterns</summary>
			<description>At this time, the Aspect J generated aspects and entity classes follow the Active Record pattern. 
It would be nice if we could choose between this pattern and Data Access Object, with or without Spring DaoSupport. The way to configure would be "persistence setup ... --databaseAccessPattern ActiveRecord|DAO".</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManagerImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerProviderTest.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaLayerProviderTest.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceClassMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfManagedBeanMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityLayerProvider.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerProvider.java</file>
			<file type="D">org.springframework.roo.addon.entity.EntityLayerProviderTest.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerService.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaAnnotationValuesTest.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryLayerMethodTest.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.email.MailOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.shell.jline.osgi.JLineShellComponent.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdTypeDetailsProvidingMetadataItem.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.persistence.PersistenceMemberLocatorImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceCommands.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaLayerProviderTest.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.JavaTypePersistenceMetadataDetails.java</file>
			<file type="M">org.springframework.roo.classpath.details.ClassOrInterfaceTypeDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.addon.property.editor.EditorMetadata.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrJspMetadataListener.java</file>
			<file type="M">org.springframework.roo.classpath.persistence.PersistenceMemberLocator.java</file>
			<file type="M">org.springframework.roo.classpath.layers.MemberTypeAdditions.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.finder.WebFinderMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceClassMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.property.editor.EditorMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.mvc.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceLocatorImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaLocatorImpl.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerCustomDataKeys.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataService.java</file>
			<file type="D">org.springframework.roo.project.layers.MemberTypeAdditions.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaLayerMethod.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerTypeMatcher.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerService.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerProvider.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.json.WebJsonMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.project.layers.Priority.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerType.java</file>
			<file type="D">org.springframework.roo.project.layers.CoreLayerProvider.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerAdapter.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerMethod.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerMethodTest.java</file>
			<file type="D">org.springframework.roo.project.layers.MemberTypeAdditionsTest.java</file>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.entity.Identifier.java</file>
			<file type="D">org.springframework.roo.classpath.persistence.PersistenceIdentifierLocatorImpl.java</file>
			<file type="D">org.springframework.roo.classpath.persistence.PersistenceIdentifierLocator.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityLayerMethod.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityLayerMethodTest.java</file>
			<file type="M">org.springframework.roo.addon.serializable.SerializableMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryLayerMethodTest.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.RooService.java</file>
			<file type="D">org.springframework.roo.addon.layers.repository.RepositoryLayerMethod.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RooRepositoryJpa.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerUtils.java</file>
			<file type="M">org.springframework.roo.model.JavaSymbolName.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserConstructorMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.ArrayAttributeValue.java</file>
			<file type="M">org.springframework.roo.addon.plural.PluralMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserFieldMetadata.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserClassOrInterfaceTypeDetails.java</file>
			<file type="M">org.springframework.roo.classpath.PhysicalTypeDetails.java</file>
			<file type="M">org.springframework.roo.classpath.PhysicalTypeIdentifier.java</file>
			<file type="M">org.springframework.roo.classpath.PhysicalTypeIdentifierNamingUtils.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.DefaultAnnotationMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.AnnotationAttributeValue.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.AnnotationMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.java</file>
			<file type="M">org.springframework.roo.support.util.Pair.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaCommands.java</file>
			<file type="D">org.springframework.roo.project.layers.PersistenceMethod.java</file>
			<file type="D">org.springframework.roo.project.layers.LayerServiceImplTest.java</file>
			<file type="M">org.springframework.roo.classpath.details.MemberHoldingTypeDetails.java</file>
			<file type="M">org.springframework.roo.classpath.details.DefaultItdTypeDetails.java</file>
			<file type="M">org.springframework.roo.classpath.details.DefaultClassOrInterfaceTypeDetails.java</file>
			<file type="D">org.springframework.roo.project.layers.Crud.java</file>
			<file type="D">org.springframework.roo.project.layers.CrudKey.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.DaoJpaLayerProvider.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.RooDaoJpa.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.DaoJpaMetadataProvider.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.DaoJpaMetadata.java</file>
			<file type="D">org.springframework.roo.addon.layers.dao.DaoJpaAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceOperationsImpl.java</file>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
			<file type="D">org.springframework.roo.layers.LayerService.java</file>
			<file type="D">org.springframework.roo.layers.Crud.java</file>
			<file type="D">org.springframework.roo.layers.LayerProvider.java</file>
			<file type="D">org.springframework.roo.layers.CrudKey.java</file>
			<file type="D">org.springframework.roo.layers.LayerServiceImpl.java</file>
			<file type="D">org.springframework.roo.layers.LayerUtils.java</file>
			<file type="D">org.springframework.roo.layers.MemberTypeAdditions.java</file>
			<file type="D">org.springframework.roo.layers.LayerAdapter.java</file>
			<file type="D">org.springframework.roo.layers.Priority.java</file>
			<file type="D">org.springframework.roo.layers.LayerType.java</file>
			<file type="D">org.springframework.roo.addon.layers.service.ServiceMetadataProvider.java</file>
			<file type="D">org.springframework.roo.addon.layers.service.ServiceMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.populator.AutoPopulationUtils.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.RepositoryJpaOperationsImpl.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.DaoJpaMetadata.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RepositoryJpaLayerProvider.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.RooDaoJpa.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.DaoJpaAnnotationValues.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.DaoJpaLayerProvider.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RepositoryJpaMetadataProvider.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RepositoryJpaMetadata.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RepositoryJpaAnnotationValues.java</file>
			<file type="D">org.springframework.roo.layers.external.repository.RooRepositoryJpa.java</file>
			<file type="D">org.springframework.roo.layers.external.dao.DaoJpaMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="depends on">2197</link>
			<link type="Depends" description="depends on">1372</link>
			<link type="Depends" description="is depended on by">270</link>
			<link type="Duplicate" description="is duplicated by">394</link>
			<link type="Duplicate" description="is duplicated by">339</link>
			<link type="Relate" description="relates to">2693</link>
			<link type="Related" description="is related to">340</link>
		</links>
	</bug>
	<bug id="2695" opendate="2011-09-03 06:06:53" fixdate="2011-09-03 21:56:08" resolution="Complete">
		<buginformation>
			<summary>Stack trace on startup with Roo 1.1.4 project in 1.2 snapshot</summary>
			<description>I&amp;amp;apos;ve been following the commits and see the type system has been going through some upgrades.  This may be causing problems with opening some old projects.  With the last several Roo nightlies I get this problem on a 1.1.4 Roo project as I attempt to upgrade it (gotta update the book samples for 1.2) - I had to edit roo.sh and set development.mode to true on startup to get the stack trace, otherwise it just showed the java.lang.NullPointerException message.  Attached the project if you want to try to reproduce, as just creating the vote.roo script and upgrading it doesn&amp;amp;apos;t cause the problem:






[FelixDispatchQueue] java.lang.NullPointerException                                                                            




                     java.lang.IllegalStateException: java.lang.NullPointerException                                                                              Downloaded 0% of roobot.xml.zip




                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:179)




                         at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




                         at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:217)




                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:268)




                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:147)




                         at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:149)




                         at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:237)




                         at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:214)




                         at org.springframework.roo.classpath.DefaultPhysicalTypeMetadataProvider.onFileEvent(DefaultPhysicalTypeMetadataProvider.java:106)




                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:346)




                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:320)




                         at org.springframework.roo.project.ProjectPathMonitoringInitializer.notify(ProjectPathMonitoringInitializer.java:89)




                         at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:233)




                         at org.springframework.roo.project.MavenProjectMetadataProvider.onFileEvent(MavenProjectMetadataProvider.java:195)




                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:346)




                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:320)




                         at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:36)




                         at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:15)




                         at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:184)




                         at org.springframework.roo.process.manager.internal.DefaultProcessManager.completeStartup(DefaultProcessManager.java:106)




                         at org.springframework.roo.process.manager.internal.DefaultProcessManager.access$100(DefaultProcessManager.java:34)




                         at org.springframework.roo.process.manager.internal.DefaultProcessManager$1.frameworkEvent(DefaultProcessManager.java:59)




                         at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListenerCallback(EventDispatcher.java:774)




                         at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:725)




                         at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:949)




                         at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)




                         at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)




                         at java.lang.Thread.run(Thread.java:680)




                     Caused by: java.lang.NullPointerException




                         at org.springframework.roo.classpath.javaparser.details.JavaParserClassOrInterfaceTypeDetailsBuilder.build(JavaParserClassOrInterfaceTypeDetailsBuilder.java:217)




                         at org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.getTypeFromString(JavaParserTypeParsingService.java:102)




                         at org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.getTypeAtLocation(JavaParserTypeParsingService.java:89)




                         at org.springframework.roo.classpath.DefaultPhysicalTypeMetadataProvider.get(DefaultPhysicalTypeMetadataProvider.java:119)




                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:147)




                         ... 28 more




[Spring Roo Process Manager Background Polling Thread] java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.NullPointerException




                                                       java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.NullPointerException




                                                           at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:179)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:217)




                                                           at org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.getMemberDetails(MemberDetailsScannerImpl.java:139)




                                                           at org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadataProviderImpl.getLocalMidToRequest(WebScaffoldMetadataProviderImpl.java:68)




                                                           at org.springframework.roo.classpath.itd.AbstractMemberDiscoveringItdMetadataProvider.notifyForGenericListener(AbstractMemberDiscoveringItdMetadataProvider.java:73)




                                                           at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:121)




                                                           at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:233)




                                                           at org.springframework.roo.metadata.AbstractHashCodeTrackingMetadataNotifier.notifyIfRequired(AbstractHashCodeTrackingMetadataNotifier.java:50)




                                                           at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:364)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:147)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




                                                           at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:149)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:237)




                                                           at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:214)




                                                           at org.springframework.roo.classpath.DefaultPhysicalTypeMetadataProvider.onFileEvent(DefaultPhysicalTypeMetadataProvider.java:106)




                                                           at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:346)




                                                           at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:320)




                                                           at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:182)




                                                           at org.springframework.roo.process.manager.internal.DefaultProcessManager.backgroundPoll(DefaultProcessManager.java:129)




                                                           at org.springframework.roo.process.manager.internal.DefaultProcessManager.timerBasedPoll(DefaultProcessManager.java:244)




                                                           at org.springframework.roo.process.manager.internal.DefaultProcessManager$2.run(DefaultProcessManager.java:72)




                                                           at java.lang.Thread.run(Thread.java:680)




                                                       Caused by: java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.NullPointerException




                                                           at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:179)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:217)




                                                           at org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.getMemberDetails(MemberDetailsScannerImpl.java:139)




                                                           at org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadataProviderImpl.getLocalMidToRequest(WebScaffoldMetadataProviderImpl.java:68)




                                                           at org.springframework.roo.classpath.itd.AbstractMemberDiscoveringItdMetadataProvider.notifyForGenericListener(AbstractMemberDiscoveringItdMetadataProvider.java:73)




                                                           at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:121)




                                                           at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:233)




                                                           at org.springframework.roo.metadata.AbstractHashCodeTrackingMetadataNotifier.notifyIfRequired(AbstractHashCodeTrackingMetadataNotifier.java:50)




                                                           at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:364)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:147)




                                                           ... 22 more




                                                       Caused by: java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.NullPointerException




                                                           at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:179)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:217)




                                                           at org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.getMemberDetails(MemberDetailsScannerImpl.java:139)




                                                           at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.getMemberDetails(AbstractItdMetadataProvider.java:467)




                                                           at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.getMemberDetails(AbstractItdMetadataProvider.java:446)




                                                           at org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.getMetadata(DataOnDemandMetadataProviderImpl.java:134)




                                                           at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:317)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:147)




                                                           ... 32 more




                                                       Caused by: java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.NullPointerException




                                                           at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:179)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:217)




                                                           at org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.getMemberDetails(MemberDetailsScannerImpl.java:139)




                                                           at org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadataProviderImpl.getLocalMidToRequest(WebScaffoldMetadataProviderImpl.java:68)




                                                           at org.springframework.roo.classpath.itd.AbstractMemberDiscoveringItdMetadataProvider.notifyForGenericListener(AbstractMemberDiscoveringItdMetadataProvider.java:73)




                                                           at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:121)




                                                           at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:233)




                                                           at org.springframework.roo.metadata.AbstractHashCodeTrackingMetadataNotifier.notifyIfRequired(AbstractHashCodeTrackingMetadataNotifier.java:50)




                                                           at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:364)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:147)




                                                           ... 40 more




                                                       Caused by: java.lang.IllegalStateException: java.lang.NullPointerException




                                                           at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:179)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)




                                                           at org.springframework.roo.classpath.TypeLocationServiceImpl.lookupClassOrInterfaceTypeDetails(TypeLocationServiceImpl.java:279)




                                                           at org.springframework.roo.classpath.TypeLocationServiceImpl.cacheType(TypeLocationServiceImpl.java:300)




                                                           at org.springframework.roo.classpath.TypeLocationServiceImpl.updateCache(TypeLocationServiceImpl.java:342)




                                                           at org.springframework.roo.classpath.TypeLocationServiceImpl.getWhatsDirty(TypeLocationServiceImpl.java:350)




                                                           at org.springframework.roo.classpath.persistence.PersistenceMemberLocatorImpl.hasRelevantFilesChange(PersistenceMemberLocatorImpl.java:97)




                                                           at org.springframework.roo.classpath.persistence.PersistenceMemberLocatorImpl.updateCache(PersistenceMemberLocatorImpl.java:115)




                                                           at org.springframework.roo.classpath.persistence.PersistenceMemberLocatorImpl.getIdentifierFields(PersistenceMemberLocatorImpl.java:68)




                                                           at org.springframework.roo.addon.entity.EntityMetadataProviderImpl.getMetadata(EntityMetadataProviderImpl.java:133)




                                                           at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:317)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:147)




                                                           ... 50 more




                                                       Caused by: java.lang.NullPointerException




                                                           at org.springframework.roo.classpath.javaparser.details.JavaParserClassOrInterfaceTypeDetailsBuilder.build(JavaParserClassOrInterfaceTypeDetailsBuilder.java:217)




                                                           at org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.getTypeFromString(JavaParserTypeParsingService.java:102)




                                                           at org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.getTypeAtLocation(JavaParserTypeParsingService.java:89)




                                                           at org.springframework.roo.classpath.DefaultPhysicalTypeMetadataProvider.get(DefaultPhysicalTypeMetadataProvider.java:119)




                                                           at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:147)




                                                           ... 61 more




roo&amp;gt; 





</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserClassOrInterfaceTypeDetailsBuilder.java</file>
		</fixedFiles>
	</bug>
	<bug id="2701" opendate="2011-09-04 19:39:50" fixdate="2011-09-04 21:14:14" resolution="Complete">
		<buginformation>
			<summary>MavenProjectMetadataProvider&amp;apos;s plugin removal methods use inappropriate criteria</summary>
			<description>A plugin&amp;amp;apos;s core identity is its groupId and artifactId. For example, when people talk about the JUnit plugin, they mean groupId = "org.apache.maven.plugins" and artifactId = "maven-surefire-plugin". In addition to this core identity, a POM using this plugin will usually specify the plugin&amp;amp;apos;s version, and possibly other details such as configuration and executions.
There are two methods in MavenProjectMetadataProvider for removing plugins from the generated project&amp;amp;apos;s POM; both of which have problems:

#removeBuildPlugins(List&amp;lt;Plugin&amp;gt;) matches on artifactId and version, i.e. ignores groupId. This means that some unrelated plugin could be accidentally removed if it happened to share its artifactId and version with one that was intended to be removed.
#removeBuildPlugin(Plugin) will remove any plugins that are "equal" to the given one, according to the result of calling Plugin#equals(), which correctly checks groupId and artifactId but wrongly checks version and (if it exists in both Plugins) the configuration. So to remove a plugin using this method, you have to provide a Plugin instance that exactly matches the one in the POM, right down to the details of its configuration.

Based on how these methods are currently used, they should both be changed to remove any plugins that match the groupId and artifactId of the given one(s).</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.Resource.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.support.util.CollectionUtils.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.menu.MenuOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.Dependency.java</file>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.Execution.java</file>
			<file type="M">org.springframework.roo.shell.jline.JLineShell.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.Plugin.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="M">org.springframework.roo.shell.jline.osgi.JLineShellComponent.java</file>
		</fixedFiles>
	</bug>
	<bug id="2707" opendate="2011-09-05 00:40:02" fixdate="2011-09-05 00:45:49" resolution="Complete">
		<buginformation>
			<summary>A file change detected by Roo&amp;apos;s polling mechanism does not update the changed file set</summary>
			<description>Only changes made via Roo through the MutableFile infrastructure are being reflected in the file change set, i.e. what is returned via getWhatsDirty. This is really bad as it causes a stale type cache when a user updates a type.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.file.monitor.polling.PollingFileMonitorService.java</file>
		</fixedFiles>
	</bug>
	<bug id="2690" opendate="2011-09-01 18:52:01" fixdate="2011-09-05 17:31:21" resolution="Complete">
		<buginformation>
			<summary>Same POM dependency can be added twice with different versions </summary>
			<description>One way to replicate this bug is as follows:

In Roo 1.1.5, run the clinic.roo script
Roo emits this output (in part):






Updated ROOT/pom.xml [added dependencies org.hibernate:hibernate-core:3.6.4.Final, org.hibernate:hibernate-entitymanager:3.6.4.Final, org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.0.Final]






Quit Roo 1.1.5 and run the latest snapshot build
Rerun the persistence command used by clinic.roo, i.e. persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY
Roo emits this output:






Updated ROOT/pom.xml [added dependencies org.hibernate:hibernate-core:3.6.7.Final, org.hibernate:hibernate-entitymanager:3.6.7.Final, org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final]






... and sure enough, each of the following artifacts appears twice in the POM, with different version numbers as shown:


org.hibernate:hibernate-core: 3.6.4.Final and 3.6.7.Final
org.hibernate:hibernate-entitymanager: 3.6.4.Final and 3.6.7.Final
org.hibernate.javax.persistence:hibernate-jpa-2.0-api: 1.0.0.Final and 1.0.1.Final

Obviously it&amp;amp;apos;s bad practice to have the same dependency twice with different versions. Maven will actually use the first occurrence of each dependency in the POM, so in the above case at least, Maven will quietly ignore the newer versions of those artifacts.
The bug is due to the fact that:

o.s.r.project.ProjectOperations.addDependencies(List&amp;lt;Dependency&amp;gt;) uses the Dependency#equals method (via Set#contains) to check for the existence of a given dependency, and
Dependency#equals checks the dependency&amp;amp;apos;s version field (i.e. two versions of the same artifact are not "equal")

</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.Dependency.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadata.java</file>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.DependencyType.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.project.DependencyScope.java</file>
		</fixedFiles>
	</bug>
	<bug id="2704" opendate="2011-09-04 20:59:58" fixdate="2011-09-06 18:02:33" resolution="Complete">
		<buginformation>
			<summary>ConversionServiceMetadata can&amp;apos;t handle multiple backing types with the same type name but different packages</summary>
			<description>If two types exist with same type name but different packages, e.g. com.foo.bar.Test and com.bar.foo.Test, ConversionServiceMetatadata creates methods with the same name and tries to add it to the ITD builder which leads to an exception. This issue can be verified by running Roo with the BrokerSystem project.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2705" opendate="2011-09-04 21:14:08" fixdate="2011-09-06 18:05:40" resolution="Complete">
		<buginformation>
			<summary>Metadata items are not checking to see if the existing member was created by them</summary>
			<description>In some places, such as ServiceInterfaceMetadata, ServiceClassMetadata and JpaEntityMetadata, no check to determine if the member found, when checking to see if a member already exists, was declared by the the producing metadata item. Generally if the member was declared by the producing metadata then the behaviour is different, see EntityMetadata.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceClassMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.details.MemberFindingUtils.java</file>
			<file type="M">org.springframework.roo.addon.entity.JpaEntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.finder.WebFinderMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2709" opendate="2011-09-05 19:17:51" fixdate="2011-09-06 22:29:08" resolution="Complete">
		<buginformation>
			<summary>PgpServiceImpl#trustDefaultKeys can&amp;apos;t resolve bundle URLs when run from STS</summary>
			<description>This issue was discovered by Steffen Pingel while working on STS-2038.
The bug is that if the URL of a given OSGi resource can&amp;amp;apos;t be resolved, PgpServiceImpl#trustDefaultKeys throws an IllegalArgumentException (the stacktrace is in the above ticket).</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.classpath.operations.AbstractOperations.java</file>
			<file type="M">org.springframework.roo.shell.jline.osgi.JLineShellComponent.java</file>
			<file type="M">org.springframework.roo.support.osgi.OSGiUtils.java</file>
			<file type="M">org.springframework.roo.felix.pgp.PgpServiceImpl.java</file>
			<file type="M">org.springframework.roo.shell.AbstractShell.java</file>
		</fixedFiles>
	</bug>
	<bug id="2718" opendate="2011-09-07 16:09:27" fixdate="2011-09-07 18:54:39" resolution="Complete">
		<buginformation>
			<summary>&amp;apos;web mvc json all&amp;apos; does not update existing controllers as expected</summary>
			<description>When executing the following Roo script, I anticipate that Roo should augment ~.web.ProfileController with @RooWebJson. Instead, the operation quietly exits without any changes.






// Spring Roo 1.2.0.BUILD-SNAPSHOT [rev 5cdc536] log opened at 2011-09-07 17:58:15




project --topLevelPackage net.digitalmaelstrom.examples.roo




persistence setup --provider HIBERNATE --database HYPERSONIC_PERSISTENT 




entity --class ~.domain.Profile --testAutomatically 




field string --fieldName firstName




field string --fieldName lastName




json all




web mvc setup




web mvc all --package ~.web




// Expecting Roo to modify ~.web.ProfileController to support JSON




web mvc json all




// However, the no changes are made.





</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2671" opendate="2011-08-25 00:14:54" fixdate="2011-09-08 09:02:11" resolution="Complete">
		<buginformation>
			<summary>The GWT add-on is not following standard Roo conventions</summary>
			<description>In Roo annotating a type would enable a piece of functionality and cause changes to the project, and the opposite would occur when removing the annotation. This is not the case for the GWT add-on which mirrors all entities found instead of making use of the @RooGwtMirroredBean annotation as originally intended.</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.proxy.GwtProxyMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtUtils.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtCommands.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperations.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.GwtScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManagerImpl.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtMetadata.java</file>
			<file type="M">org.springframework.roo.model.RooJavaType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.RooGwtMirroredFrom.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtType.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManager.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="M">org.springframework.roo.bootstrap.Main.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtProxyProperty.java</file>
		</fixedFiles>
	</bug>
	<bug id="2722" opendate="2011-09-08 08:43:06" fixdate="2011-09-08 09:02:53" resolution="Complete">
		<buginformation>
			<summary>Errors when using AbstractIdentifiableAnnotatedJavaStructureBuilder.updateTypeAnnotation</summary>
			<description>There are a couple of problems with AbstractIdentifiableAnnotatedJavaStructureBuilder.updateTypeAnnotation:

NPE when attempting to update an annotation that is currently not present
Passing in null for attributesToDeleteIfPresent causes new attributes not to be added

It would also be nice to add a few convenience methods to skip passing in null for attributesToDeleteIfPresent and the ability to accept AnnotationMetadataBuilders.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.details.AbstractIdentifiableAnnotatedJavaStructureBuilder.java</file>
		</fixedFiles>
	</bug>
	<bug id="2592" opendate="2011-07-19 06:23:18" fixdate="2011-09-08 09:33:12" resolution="Complete">
		<buginformation>
			<summary>No validation error messages displayed when creating new entity using GWT scaffolded UI</summary>
			<description>Try running the following script and then &amp;amp;apos;mvn gwt:run&amp;amp;apos;: when you leave out a name or do not enter 16 digits for the credit card number when creating a new Account it cannot be saved, but no validation error is shown so the user has no idea that some data doesn&amp;amp;apos;t validate. 






project --topLevelPackage rewardsonline




persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY 




entity --class ~accounts.Account --testAutomatically 




field string --fieldName name --notNull 




field string --fieldName creditCardNumber --regexp \d{16}




gwt setup





</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.place.AbstractProxyEditActivity-template.java</file>
		</fixedFiles>
	</bug>
	<bug id="2717" opendate="2011-09-06 23:46:39" fixdate="2011-09-08 22:53:55" resolution="Complete">
		<buginformation>
			<summary>I/O resources can be left open</summary>
			<description>Closeable I/O resources are not being closed in all cases, which could lead to resource shortages, e.g. running out of file handles. For example, the following Roo code will not attempt to close the "is" resource if the call to br.close() throws an exception:






try {




    br.close();




    is.close();




} catch (Exception ignored) {}






We need a utility method similar to Apache Commons&amp;amp;apos; IOUtils#closeQuietly(java.io.Closeable) that accepts null inputs and eats any IOException arising from calling Closeable#close(). </description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.support.util.Base64.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.shell.AbstractShell.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundryOperationsImpl.java</file>
			<file type="M">org.springframework.roo.felix.HttpPgpUrlStreamHandlerServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.menu.MenuOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.propfiles.PropFileOperations.java</file>
			<file type="M">org.springframework.roo.project.MavenOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.propfiles.PropFileOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.ApplicationContextOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.VideoEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.creator.CreatorOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.DefaultXmlRoundTripFileManager.java</file>
			<file type="M">org.springframework.roo.support.logging.LoggingOutputStream.java</file>
			<file type="M">org.springframework.roo.addon.jms.JmsOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.oscommands.OsOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.jdbc.ConnectionProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceOperationsImpl.java</file>
			<file type="M">org.springframework.roo.bootstrap.Main.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.tiles.TilesOperationsImpl.java</file>
			<file type="M">org.springframework.roo.support.util.MessageDisplayUtils.java</file>
			<file type="M">org.springframework.roo.felix.pgp.SignatureDecision.java</file>
			<file type="M">org.springframework.roo.addon.dbre.converter.SchemaConverter.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.logging.LoggingOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseIntrospector.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseContentHandler.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.BooleanAttributeValue.java</file>
			<file type="M">org.springframework.roo.shell.MethodTarget.java</file>
			<file type="M">org.springframework.roo.model.JavaSymbolName.java</file>
			<file type="M">org.springframework.roo.metadata.internal.StandardMetadataTimingStatistic.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserUtils.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.IntegerAttributeValue.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.java</file>
			<file type="M">org.springframework.roo.felix.FelixDelegator.java</file>
			<file type="M">org.springframework.roo.shell.converters.CharacterConverter.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
			<file type="M">org.springframework.roo.shell.converters.BooleanConverter.java</file>
			<file type="M">org.springframework.roo.shell.jline.JLineShell.java</file>
			<file type="M">org.springframework.roo.shell.NaturalOrderComparator.java</file>
			<file type="M">org.springframework.roo.support.util.IOUtils.java</file>
			<file type="M">org.springframework.roo.project.AutomaticProjectUpgradeService.java</file>
			<file type="M">org.springframework.roo.felix.LogLevel.java</file>
			<file type="M">org.springframework.roo.project.Filter.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.LongAttributeValue.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathCommands.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadata.java</file>
			<file type="M">org.springframework.roo.addon.finder.FieldToken.java</file>
			<file type="M">org.springframework.roo.felix.pgp.PgpServiceImpl.java</file>
			<file type="M">org.springframework.roo.file.monitor.event.FileDetails.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.AbstractEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.model.JavaPackage.java</file>
			<file type="M">org.springframework.roo.process.manager.event.AbstractProcessManagerStatusPublisher.java</file>
			<file type="M">org.springframework.roo.project.Path.java</file>
			<file type="M">org.springframework.roo.addon.entity.EntityMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.ClassloaderInclusivePath.java</file>
			<file type="M">org.springframework.roo.felix.PsOptions.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.details.annotations.CharAttributeValue.java</file>
			<file type="M">org.springframework.roo.addon.email.MailProtocol.java</file>
			<file type="M">org.springframework.roo.metadata.DefaultMetadataLogger.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.shell.jline.osgi.JLineShellComponent.java</file>
			<file type="M">org.springframework.roo.project.Repository.java</file>
			<file type="M">org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.FinderMetadataDetails.java</file>
			<file type="M">org.springframework.roo.support.style.ToStringCreator.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonMetadata.java</file>
			<file type="M">org.springframework.roo.url.stream.jdk.JdkUrlInputStreamService.java</file>
			<file type="M">org.springframework.roo.support.util.FileCopyUtils.java</file>
			<file type="M">org.springframework.roo.shell.jline.JLineLogHandler.java</file>
			<file type="M">org.springframework.roo.classpath.operations.AbstractOperations.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.ShellTableRenderer.java</file>
			<file type="M">org.springframework.roo.addon.backup.BackupOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2726" opendate="2011-09-10 00:20:35" fixdate="2011-09-10 00:24:35" resolution="Complete">
		<buginformation>
			<summary>DataOnDemand does not honour column constraints for constructing data for embedded identifier types</summary>
			<description>If fields of a composite primary key contain column lengths or @Size constraints, the embedded identifier constructor must be passed data that will honour these constraints. Currently tests fail where a column length is smaller than the data passed into the constructor</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2727" opendate="2011-09-11 08:09:17" fixdate="2011-09-11 08:49:05" resolution="Complete">
		<buginformation>
			<summary>Previous attributes not being cleared in TypeLocationService on re-caching type</summary>
			<description>Stale items such as annotations that are no longer applied to a type were never being cleared in TypeLocationService. This can lead to NPE when TypeLocationService indicates that an annotation exists and then it is not found by subsequent logic.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2597" opendate="2011-07-25 09:40:39" fixdate="2011-09-11 08:54:22" resolution="Complete">
		<buginformation>
			<summary>Roo doesn&amp;apos;t hande @Id types different than long</summary>
			<description>My example contains 3 very simple classes:
//eu.oneview.core.server.domain.PersonProperty
@RooJavaBean
@RooToString
@RooEntity
@MappedSuperclass
public abstract class PersonProperty {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Key						id;
	@ManyToOne
	private Person				person;
	private String				strValue;
	private Date					creationDate;
//...
}
//eu.oneview.core.server.domain.Phone
@RooJavaBean
@RooToString
@RooEntity
public class Phone extends PersonProperty {
}
//eu.oneview.core.server.domain.Person
@RooJavaBean
@RooToString
@RooEntity
public class Person {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Key									key;
	@OneToMany(cascade = CascadeType.ALL)
	private Set&amp;lt;Phone&amp;gt;					phones		= new HashSet&amp;lt;Phone&amp;gt;();
//...
}
the problematic code generated by Roo is on all phone methods, for example:
//eu.oneview.core.server.domain.Person_Roo_JavaBean.aj
// private Set&amp;lt;Key&amp;gt; Person.phonesKeys = new HashSet&amp;lt;Key&amp;gt;(); (is declared as an instance variable)
    public void Person.setPhones(Set&amp;lt;Phone&amp;gt; phones) {
        Set&amp;lt;eu.oneview.core.server.domain.Phone&amp;gt; localPhones = new HashSet&amp;lt;eu.oneview.core.server.domain.Phone&amp;gt;();
        List&amp;lt;Long&amp;gt; longIds = new ArrayList&amp;lt;Long&amp;gt;();
        for (Key key : phonesKeys) {
            if (!longIds.contains(key.getId())) 
{
                longIds.add(key.getId());
            }
        }
        for (Phone entity : phones) {
            if (!longIds.contains(entity.getId())) 
{
                longIds.add(entity.getId());
                phonesKeys.add(KeyFactory.createKey(Phone.class.getName(), entity.getId()));
            }
            localPhones.add(entity);
        }
        this.phones = localPhones;
    }
The problem resides in the assumption that ids are of type long:
List&amp;lt;Long&amp;gt; longIds = new ArrayList&amp;lt;Long&amp;gt;();
Whereas eu.oneview.core.server.domain.Phone_Roo_Entity.aj is generated correctly
    @Transactional
    public static Phone Phone.findPhone(Key id) {
        if (id == null) return null;
        try 
{
            return (Phone) entityManager().createQuery("SELECT o FROM Phone o WHERE o.id = :id").setParameter("id", id).getSingleResult();
        }
 catch (org.springframework.dao.EmptyResultDataAccessException e) 
{
            return null;
        } catch (javax.persistence.NoResultException e) {            return null;        }
    }
the call in eu.oneview.core.server.domain.Person_Roo_JavaBean.aj is:
Phone entity = Phone.findPhone(key.getId()); 
instead of Phone entity = Phone.findPhone(key);
And similar errors are all along the code. 
When doing a &amp;amp;apos;gwt setup&amp;amp;apos;, proxies dont contain the method getId() at all because it&amp;amp;apos;s not in the supported types, this leads to generated code errors:
The method getId() is undefined for the type PhoneProxy	PhoneListEditor.java	/1VuRoo/src/main/java/eu/oneview/core/client/managed/ui	line 85	Java Problem
//eu.oneview.core.client.managed.ui.PhoneListEditor
    @UiHandler("add")
    public void addClicked(ClickEvent e) {
        if (picker.getValue() == null) 
{
            return;
        }
        for (PhoneProxy proxy : displayedList) {
            if (proxy.getId().equals(picker.getValue().getId())) 
{
                return;
            }
        }
        displayedList.add(picker.getValue());
        viewLabel.setText(makeFlatList(displayedList));
    }
I think the easiest way would be to integrate the GAE types to the supported types list (or at least the com.google.appengine.api.datastore.Key type)
Best Regards,
Zied Hamdi</description>
			<version>1.1.4.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.locator.GwtLocatorMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtPath.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtUtils.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.ProjectMetadata.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtProxyMetadata.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtProxyMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtRequestMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.TemplateResourceLoader.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtRequestMetadataProvider.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtRequestMetadata.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.RooGwtRequest.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.RooGwtProxy.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtProxyProperty.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtScaffoldMetadataProvider.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtProxyMetadataProvider.java</file>
			<file type="D">org.springframework.roo.addon.gwt.GwtScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.RooGwtMirroredFrom.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManager.java</file>
			<file type="M">org.springframework.roo.model.RooJavaType.java</file>
		</fixedFiles>
	</bug>
	<bug id="2733" opendate="2011-09-12 04:15:11" fixdate="2011-09-12 16:52:22" resolution="Complete">
		<buginformation>
			<summary>GWT application that previously ran on Google App Engine does not run when persistence switched back to SQL database</summary>
			<description>Run expenses.roo and switch persistence to GAE. Also run web gwt gae update. App runs OK in GAE, however, when persistence is changed back Hibernate and H2 for example, the app does not run with mvn gwt:run. The gwt-maven-plugin is not updated back to GWT version and a compile error






expenses/src/main/java/org/springsource/roo/extrack/client/scaffold/gae/GaeHelper.java:16:0::0 The constructor GaeLoginWidgetDriver(ApplicationRequestFactory) is undefined






If the intended behaviour is that there is no way back from GAE, then close off as won&amp;amp;apos;t fix </description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="2746" opendate="2011-09-13 19:08:51" fixdate="2011-09-13 19:10:32" resolution="Complete">
		<buginformation>
			<summary>PgpServiceImpl fails on Roo startup</summary>
			<description>A usage of Collections.emptyList (which returns an immutable list) prevents keys from being added to the list which in turns also prevents the spring_roo_pgp.bpg from being created.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.felix.HttpPgpUrlStreamHandlerServiceImpl.java</file>
			<file type="M">org.springframework.roo.felix.pgp.PgpServiceImpl.java</file>
			<file type="M">org.springframework.roo.felix.pgp.PgpCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="2744" opendate="2011-09-13 05:14:00" fixdate="2011-09-13 20:41:30" resolution="Complete">
		<buginformation>
			<summary>Array modifier lost creating physical type file</summary>
			<description>Creating a physical type with:
 physicalTypeMetadataProvider.createPhysicalType(physicalTypeMetadata)
When physicalTypeMetadata has a method with an array parameter:
 public String getPeopleData(Integer[] assetId) 
{
  return null;
 }

The array modifier "[]" is lost writting to file:

 public String getPeopleData(Integer assetId) {  return null; }</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="2747" opendate="2011-09-13 19:59:23" fixdate="2011-09-13 21:03:12" resolution="Complete">
		<buginformation>
			<summary>UnsupportedOperationException adding items to AbstractMemberHoldingTypeDetailsBuilder if unmodifiable list previously set</summary>
			<description>Found this by code inspection rather than at runtime, so it may not be causing any problems at the moment.
See the new test case AbstractMemberHoldingTypeDetailsBuilderTest for the various failure scenarios. In short, an UnsupportedOperationException is thrown upon this sequence of calls:






AbstractMemberHoldingTypeDetailsBuilder builder = ...; // get a concrete instance




List foos = ....; // get an unmodifiable list of Foos to add, e.g. via Collections#singletonList




builder.setFoos(foos);




Foo anotherFoo = ...;




builder.addFoo(anotherFoo); // !!! throws an UnsupportedOperationException






This bug happens because of poor encapsulation within AbstractMemberHoldingTypeDetailsBuilder, in that lists passed to setters are stored internally rather than being defensively copied. Therefore when you set an unmodifiable list, it can&amp;amp;apos;t be modified later by calling the relevant "add" method.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.details.FieldMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.details.AbstractIdentifiableJavaStructureBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.details.ConstructorMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.details.AbstractMemberHoldingTypeDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.details.InitializerMetadataBuilder.java</file>
		</fixedFiles>
	</bug>
	<bug id="2754" opendate="2011-09-15 06:05:00" fixdate="2011-09-15 06:14:59" resolution="Complete">
		<buginformation>
			<summary>Unable to download add-ons with the addon install command</summary>
			<description>Due to change which closes an input stream prematurely in org.springframework.roo.felix.HttpPgpUrlStreamHandlerServiceImpl, add-ons including jdbc drivers for DBRE, are prevented from being downloaded when the addon install command is run</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.felix.pgp.PgpServiceImpl.java</file>
			<file type="M">org.springframework.roo.felix.HttpPgpUrlStreamHandlerServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2751" opendate="2011-09-14 23:17:58" fixdate="2011-09-15 18:12:30" resolution="Complete">
		<buginformation>
			<summary>Incorrect changes to POM when repeating "persistence setup" command on a DataNucleus project</summary>
			<description>Run this script:






project --topLevelPackage com.example.anything




persistence setup --database HYPERSONIC_IN_MEMORY --provider DATANUCLEUS






Every time the "persistence setup --database HYPERSONIC_IN_MEMORY --provider DATANUCLEUS" command is reissued, the shell reports different POM elements (e.g. dependencies and plugins) as having been removed (alternating between those for DataNucleus and DataNucleus2).</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProviderTest.java</file>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.Dependency.java</file>
			<file type="M">org.springframework.roo.addon.jpa.OrmProvider.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.DependencyTest.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JdbcDatabase.java</file>
		</fixedFiles>
	</bug>
	<bug id="2772" opendate="2011-09-20 07:40:03" fixdate="2011-09-20 15:33:28" resolution="Complete">
		<buginformation>
			<summary>Cannot rename DBRE fields</summary>
			<description>After reverse eng. I push-in a field in "DbManaged.aj" to "Entity.java" and when I rename the pushed-in field, it is created again in "DbManaged.aj"
To reproduce:

Create test DB. Attached .sql to create it
Run attached .roo script
Go to Areagroups_Roo_DbManaged.aj and push-in field "areass"
Go to Areagroups.java and rename "areass" to "areas"

</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2773" opendate="2011-09-21 02:28:34" fixdate="2011-09-23 22:37:51" resolution="Complete">
		<buginformation>
			<summary>o.s.r.project.MavenProjectMetadataProviderTest fails on Windows</summary>
			<description>Spring sources cannot be built on win7 platform (builds fine on unix).
Please look after &amp;amp; resolve this issue ASAP.
Attached the actual failing test&amp;amp;apos;s report.
Build process (mvn install) produces the following output:
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 23.028s
[INFO] Finished at: Wed Sep 21 11:20:05 CEST 2011
[INFO] Final Memory: 32M/157M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.8:test (default-test) on project org.springf
ramework.roo.project: There are test failures.
[ERROR]
[ERROR] Please refer to C:\Java\spring-roo\project\target\surefire-reports for the individual test results.
[ERROR] -&amp;gt; [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-surefire-plugi
n:2.8:test (default-test) on project org.springframework.roo.project: There are test failures.
Please refer to C:\Java\spring-roo\project\target\surefire-reports for the individual test results.
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:213)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.apache.maven.plugin.MojoFailureException: There are test failures.
Please refer to C:\Java\spring-roo\project\target\surefire-reports for the individual test results.
        at org.apache.maven.plugin.surefire.SurefireHelper.reportExecution(SurefireHelper.java:74)
        at org.apache.maven.plugin.surefire.SurefirePlugin.writeSummary(SurefirePlugin.java:644)
        at org.apache.maven.plugin.surefire.SurefirePlugin.executeAfterPreconditionsChecked(SurefirePlugin.java:640)
        at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:103)
        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
        ... 19 more
[ERROR]
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR]
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn &amp;lt;goals&amp;gt; -rf :org.springframework.roo.project</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProviderTest.java</file>
		</fixedFiles>
	</bug>
	<bug id="2786" opendate="2011-09-25 03:01:36" fixdate="2011-09-25 17:52:16" resolution="Complete">
		<buginformation>
			<summary>JavaBean ITD not deleted when governor fields have been deleted</summary>
			<description>Since 1.2.0.M1, the Roo JavaBean ITD is not deleted after deleting all the fields in the governor, even after a shell restart.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2789" opendate="2011-09-26 02:54:03" fixdate="2011-09-26 06:07:58" resolution="Complete">
		<buginformation>
			<summary>Push-in refactor of the Mongo Id field does not remove the getter and setter methods from the Mongo ITD</summary>
			<description>When the org.springframework.data.annotation.Id field is created in the governor, the accessor/mutator methods are created in the JavaBean ITD, but not removed from the Mongo ITD</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoEntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoEntityMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">2792</link>
		</links>
	</bug>
	<bug id="2792" opendate="2011-09-26 16:14:10" fixdate="2011-09-26 16:22:52" resolution="Complete">
		<buginformation>
			<summary>Push-in refactor of the @Repository annotation does not remove the same annotation from the Mongo Repository ITD</summary>
			<description></description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.RepositoryMongoMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">2789</link>
		</links>
	</bug>
	<bug id="2794" opendate="2011-09-27 05:36:11" fixdate="2011-09-27 21:28:14" resolution="Complete">
		<buginformation>
			<summary>Empty file - &amp;apos;compilation unit&amp;apos; - genarates an apparent error message</summary>
			<description>If you have an empty java file (or a file with the contents commented out) then ROO reports the following
.    java.lang.IllegalArgumentException: Compilation unit contents required
AND appears NOT to go on to parse the other files (well - no "updated" messages are produced).  This is NOT the case with 1.1.5. which was happy with empty &amp;amp;apos;compilation units&amp;amp;apos; as is the SUN 1.6.26 compiler. </description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.locator.GwtLocatorMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.GwtScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.proxy.GwtProxyMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.tostring.ToStringMetadata.java</file>
			<file type="M">org.springframework.roo.addon.tostring.ToStringMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2802" opendate="2011-09-29 16:41:53" fixdate="2011-10-04 19:58:17" resolution="Complete">
		<buginformation>
			<summary>pizzashop.roo script doesn&amp;apos;t introduce required services until shell restarted</summary>
			<description>After running pizzashop.roo, the generated project does not compile:






[ERROR] Failed to execute goal org.codehaus.mojo:aspectj-maven-plugin:1.2:compile (default) on project pizzashop: Compiler errors :




[ERROR] error at PizzaOrder pizzaorder = pizzaOrderService.findPizzaOrder(id);




[ERROR] ^^^^^^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaOrderController_Roo_Controller_Json.aj:24:0::0 pizzaOrderService cannot be resolved




[ERROR] error at List&amp;lt;PizzaOrder&amp;gt; result = pizzaOrderService.findAllPizzaOrders();




[ERROR] ^^^^^^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaOrderController_Roo_Controller_Json.aj:38:0::0 pizzaOrderService cannot be resolved




[ERROR] error at pizzaOrderService.savePizzaOrder(pizzaOrder);




[ERROR] ^^^^^^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaOrderController_Roo_Controller_Json.aj:45:0::0 pizzaOrderService cannot be resolved




[ERROR] error at pizzaOrderService.savePizzaOrder(pizzaOrder);




[ERROR] ^^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaOrderController_Roo_Controller_Json.aj:54:0::0 pizzaOrderService cannot be resolved




[ERROR] error at if (pizzaOrderService.updatePizzaOrder(pizzaOrder) == null) {




[ERROR] ^^^^^^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaOrderController_Roo_Controller_Json.aj:66:0::0 pizzaOrderService cannot be resolved




[ERROR] error at if (pizzaOrderService.updatePizzaOrder(pizzaOrder) == null) {




[ERROR] ^^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaOrderController_Roo_Controller_Json.aj:77:0::0 pizzaOrderService cannot be resolved




[ERROR] error at PizzaOrder pizzaOrder = pizzaOrderService.findPizzaOrder(id);




[ERROR] ^^^^^^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaOrderController_Roo_Controller_Json.aj:86:0::0 pizzaOrderService cannot be resolved




[ERROR] error at pizzaOrderService.deletePizzaOrder(pizzaOrder);




[ERROR] ^^^^^^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaOrderController_Roo_Controller_Json.aj:92:0::0 pizzaOrderService cannot be resolved




[ERROR] error at Pizza pizza = pizzaService.findPizza(id);




[ERROR] ^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaController_Roo_Controller_Json.aj:24:0::0 pizzaService cannot be resolved




[ERROR] error at List&amp;lt;Pizza&amp;gt; result = pizzaService.findAllPizzas();




[ERROR] ^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaController_Roo_Controller_Json.aj:38:0::0 pizzaService cannot be resolved




[ERROR] error at pizzaService.savePizza(pizza);




[ERROR] ^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaController_Roo_Controller_Json.aj:45:0::0 pizzaService cannot be resolved




[ERROR] error at pizzaService.savePizza(pizza);




[ERROR] 




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaController_Roo_Controller_Json.aj:54:0::0 pizzaService cannot be resolved




[ERROR] error at if (pizzaService.updatePizza(pizza) == null) {




[ERROR] ^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaController_Roo_Controller_Json.aj:66:0::0 pizzaService cannot be resolved




[ERROR] error at if (pizzaService.updatePizza(pizza) == null) {




[ERROR] 




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaController_Roo_Controller_Json.aj:77:0::0 pizzaService cannot be resolved




[ERROR] error at Pizza pizza = pizzaService.findPizza(id);




[ERROR] ^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaController_Roo_Controller_Json.aj:86:0::0 pizzaService cannot be resolved




[ERROR] error at pizzaService.deletePizza(pizza);




[ERROR] ^^^




[ERROR] /Users/aswan/projects/bugs/2800/src/main/java/com/springsource/pizzashop/PizzaController_Roo_Controller_Json.aj:92:0::0 pizzaService cannot be resolved






It turns out that the pizzaService and pizzaOrderService fields are not introduced until the shell is restarted:






[FelixDispatchQueue] 62f090b Updated SRC_MAIN_JAVA/com/springsource/pizzashop/PizzaOrderController_Roo_Controller.aj




[FelixDispatchQueue] 1fcfcf9 Updated SRC_MAIN_JAVA/com/springsource/pizzashop/PizzaController_Roo_Controller.aj






... after which the project compiles OK.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataService.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">2800</link>
		</links>
	</bug>
	<bug id="2814" opendate="2011-10-06 16:50:47" fixdate="2011-10-09 16:47:11" resolution="Complete">
		<buginformation>
			<summary>Stack overflow error when certain @Roo annotations exist together on a class with no fields</summary>
			<description>With certain combinations of Roo annotations on an empty class (no fields), such as @RooEquals and @RooDisplayName or @RooEquals and @RooToString, a stack overflow error occurs in DefaultMetadataService like the following:






[FelixDispatchQueue] java.lang.StackOverflowError




                         at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:447)




                         at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:544)




                         at java.lang.StringCoding$StringEncoder.encode(StringCoding.java:240)




                         at java.lang.StringCoding.encode(StringCoding.java:272)




                         at java.lang.String.getBytes(String.java:946)




                         at java.io.UnixFileSystem.getBooleanAttributes0(Native Method)




                         at java.io.UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:228)




                         at java.io.File.exists(File.java:733)




                         at org.springframework.roo.process.manager.internal.DefaultFileManager.exists(DefaultFileManager.java:67)




                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:318)




                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:149)




                         at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:83)




                         at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:219)




                         at org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.getMemberDetails(MemberDetailsScannerImpl.java:139)




                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.getMemberDetails(AbstractItdMetadataProvider.java:480)




                         at org.springframework.roo.addon.equals.EqualsMetadataProviderImpl.getMetadata(EqualsMetadataProviderImpl.java:57)




                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:326)




                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:149)




                         at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:83)




                         at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:219)




                         at org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.getMemberDetails(MemberDetailsScannerImpl.java:139)




                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.getMemberDetails(AbstractItdMetadataProvider.java:480)




                         at org.springframework.roo.addon.displayname.DisplayNameMetadataProviderImpl.getMetadata(DisplayNameMetadataProviderImpl.java:74)




                         at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:326)




                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:149)




                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:199)




                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:199)




                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:199)




                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:199)




                         at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:199)




...





</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.equals.EqualsMetadata.java</file>
			<file type="M">org.springframework.roo.addon.equals.EqualsMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2816" opendate="2011-10-09 18:47:11" fixdate="2011-10-09 18:56:09" resolution="Complete">
		<buginformation>
			<summary>Some views show the text "WEB-INF/views/foo/bar.jspx" instead of that JSP&amp;apos;s contents</summary>
			<description>Found this while investigating ROO-2793. The views generated by the following commands show the text "WEB-INF/views/foo/bar.jspx" instead of that JSP&amp;amp;apos;s contents:

controller class
web mvc embed

</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrJspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2788" opendate="2011-09-26 01:18:35" fixdate="2011-10-09 22:30:25" resolution="Fixed">
		<buginformation>
			<summary>Roo failed on entity name "News"</summary>
			<description>
project --topLevelPackage com.aveas.test
persistence setup --provider HIBERNATE --database HYPERSONIC_PERSISTENT
entity --class ~.domain.News
field string --fieldName name
web mvc setup
web mvc all --package ~.web
Application generated by this script take error on create attempting with message "argument type mismatch".
In fact, problem detected only with entity name "News".</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2819" opendate="2011-10-10 17:05:47" fixdate="2011-10-10 18:43:07" resolution="Complete">
		<buginformation>
			<summary>Tiles view definitions not deleted when create or update are disabled in controller</summary>
			<description>Found this while investigating ROO-2806. To replicate:

Generate a project with an MVC layer (e.g. run "script vote.roo")
Edit an entity controller&amp;amp;apos;s @RooWebScaffold annotation to contain "create = false" and "update = false"
Roo does not remove the corresponding view definitions from the entity&amp;amp;apos;s views.xml file

</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.menu.MenuOperations.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrJspMetadataListener.java</file>
			<file type="M">org.springframework.roo.support.util.StringUtilsTest.java</file>
			<file type="M">org.springframework.roo.support.util.StringUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.tiles.TilesOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.tiles.TilesOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2784" opendate="2011-09-24 08:31:25" fixdate="2011-10-10 19:12:16" resolution="Fixed">
		<buginformation>
			<summary>Support for both MongoDB and a relational datasource at the same time</summary>
			<description>I see that we cannot have both MongoDB and a relational JPA configuration at the same time.
There are a number of projects that augment their SQL-based stores with NoSQL for reporting, unstructured or semistructured data, etc...
Is it possible to separate out the MongoDB configuration database configuration properties and other settings so that we can mount both relational and non-relational stores in the same application?  Right now I get an error when I try to do this:






org.rooinaction.coursemanager roo&amp;gt; mongo setup 




Created SRC_MAIN_RESOURCES/META-INF/spring/database.properties




Created SRC_MAIN_RESOURCES/META-INF/spring/applicationContext-mongo.xml




Updated ROOT/pom.xml [added repositories http://maven.springframework.org/milestone, https://repository.jboss.org/nexus/content/repositories/releases; added dependencies javax.persistence:persistence-api:1.0, javax.validation:validation-api:1.0.0.GA, org.hibernate:hibernate-validator:4.2.0.Final, org.cloudfoundry:cloudfoundry-runtime:0.8.0, org.springframework.data:spring-data-mongodb:1.0.0.M4]




Updated SRC_MAIN_RESOURCES/META-INF/spring/applicationContext-mongo.xml














org.rooinaction.coursemanager roo&amp;gt; persistence setup --provider HIBERNATE --database DERBY_EMBEDDED 




NullPointerException at org.springframework.roo.addon.jpa.JpaOperationsImpl.updateDatabaseProperties(JpaOperationsImpl.java:475)






I put this in as an enhancement because I&amp;amp;apos;m not sure this was intended as a feature.  
Thanks,
Ken</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoOperationsImpl.java</file>
			<file type="M">org.springframework.roo.model.SpringJavaType.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoEntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2862</link>
		</links>
	</bug>
	<bug id="2806" opendate="2011-10-03 06:23:08" fixdate="2011-10-10 22:30:12" resolution="Complete">
		<buginformation>
			<summary>"controller class" command uses incorrect view name when "preferredMapping" contains uppercase characters</summary>
			<description>To replicate, run the "controller class" command with the "preferredMapping" option in mixed case, for example:  






controller class --class ~.web.Hello --preferredMapping helloApp






1. The view name returned by the controller:






Hello.java






@RequestMapping




public String index() {




    return "helloApp/index"; // this view name is in mixed case




}






... does not match the view name in the Tiles views.xml file:






src/main/webapp/WEB-INF/views/helloapp/views.xml






&amp;lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&amp;gt;




&amp;lt;!DOCTYPE tiles-definitions PUBLIC "-//Apache Software Foundation//DTD Tiles Configuration 2.1//EN" "http://tiles.apache.org/dtds/tiles-config_2_1.dtd"&amp;gt;




&amp;lt;tiles-definitions&amp;gt;




    &amp;lt;!-- This "name" attribute should also be in mixed case --&amp;gt;




    &amp;lt;definition extends="default" name="camelcase/index"&amp;gt;




        &amp;lt;!-- The case of this filename only needs to match the file system --&amp;gt;




        &amp;lt;put-attribute name="body" value="/WEB-INF/views/camelcase/index.jspx"/&amp;gt;




    &amp;lt;/definition&amp;gt;




&amp;lt;/tiles-definitions&amp;gt;






2. Also, the relative URL in the relevant menu item is in lowercase instead of mixed case:






src/main/webapp/WEB-INF/views/menu.jspx






&amp;lt;menu:menu id="_menu" z="nZaf43BjUg1iM0v70HJVEsXDopc="&amp;gt;




    &amp;lt;menu:category id="c_controller" z="nj8Dm3hojIyIEyPkwE1UMDIs+K8="&amp;gt;




        &amp;lt;!-- The "url" attribute should be in mixed case --&amp;gt;




        &amp;lt;menu:item id="i_controller__helloappindex_id" messageCode="global_generic" url="/helloapp/index" z="vDuzy0/jMEErpBRrv8fulF3ZUEw="/&amp;gt;




    &amp;lt;/menu:category&amp;gt;




&amp;lt;/menu:menu&amp;gt;






The workaround is to fix the above problems manually.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.support.util.StringUtilsTest.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.tiles.TilesOperations.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.tiles.TilesOperationsImpl.java</file>
			<file type="M">org.springframework.roo.support.util.StringUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="2818" opendate="2011-10-10 03:01:38" fixdate="2011-10-12 22:30:10" resolution="Complete">
		<buginformation>
			<summary>Cloud foundry login command ignores cloudControllerUrl parameter</summary>
			<description>im trying to use the cloud foundry addon, against a micro CF and agains a custom cloud foundry (installed from source on amazon ec2, with real DNS)
when i try to log in i get the following error in both case:
roo&amp;gt; cloud foundry login --email foo@bar.com --password XXXXXX --cloudControllerUrl http://api.lalyos.info
Operation could not be completed: com.vmware.appcloud.client.AppCloudException: 403 Forbidden (Operation not permitted)
java.lang.IllegalStateException: Operation could not be completed: com.vmware.appcloud.client.AppCloudException: 403 Forbidden (Operation not permitted)
    at org.springframework.roo.addon.cloud.foundry.UaaAwareAppCloudClient.login(UaaAwareAppCloudClient.java:469)
    at com.vmware.appcloud.client.AppCloudClient.loginIfNeeded(AppCloudClient.java:194)
    at org.springframework.roo.addon.cloud.foundry.UaaAwareAppCloudClient.loginIfNeeded(UaaAwareAppCloudClient.java:479)
it seems that in the login method, it was using the UaaAwareAppCloudClient always connectiong to constants CLOUD_FOUNDRY_URL (http://api.cloudfoundry.com) instead using the &amp;amp;apos;cloudControllerUrl&amp;amp;apos; parameter
applying the attached patch does make it able to connect to custom CF instances:
roo&amp;gt; cloud foundry login --email foo@bar.com --password XXXXXX --cloudControllerUrl http://api.lalyos.info
Credentials saved.
Logged in successfully with email address &amp;amp;apos;foo@bar.com&amp;amp;apos;
cheers,
lalyos</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.cloud.foundry.UaaAwareAppCloudClient.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundrySessionImpl.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundryOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.model.CloudControllerUrl.java</file>
			<file type="M">org.springframework.roo.addon.cloud.foundry.CloudFoundryCommands.java</file>
		</fixedFiles>
	</bug>
	<bug id="2817" opendate="2011-10-09 19:56:09" fixdate="2011-10-15 21:41:36" resolution="Complete">
		<buginformation>
			<summary>Error upon adding @RooSolrWebSearchable to MVC controller</summary>
			<description>To replicate:

Run these commands:
	
script vote.roo
solr setup
solr all


Upon manually adding the @RooSolrWebSearchable annotation to an MVC controller (e.g. ChoiceController), the console throws the following error:







java.lang.IllegalArgumentException: The proposed document is required




    at org.springframework.roo.support.util.Assert.notNull(Assert.java:112)




    at org.springframework.roo.addon.web.mvc.jsp.roundtrip.DefaultXmlRoundTripFileManager.writeToDiskIfNecessary(DefaultXmlRoundTripFileManager.java:45)




    at org.springframework.roo.addon.solr.SolrJspMetadataListener.installMvcArtifacts(SolrJspMetadataListener.java:105)




    at org.springframework.roo.addon.solr.SolrJspMetadataListener.get(SolrJspMetadataListener.java:95)




    at org.springframework.roo.addon.solr.SolrJspMetadataListener.notify(SolrJspMetadataListener.java:229)




    at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:239)




    etc.





</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrJspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="2834" opendate="2011-10-16 22:08:43" fixdate="2011-10-16 22:10:52" resolution="Complete">
		<buginformation>
			<summary>Can&amp;apos;t embed Screenr videos</summary>
			<description>Found while working on ROO-2815 that if you run the following commands to embed a Screenr video:






project --topLevelPackage org.springsource.embedding




persistence setup --database HYPERSONIC_IN_MEMORY --provider HIBERNATE 




web mvc setup




web mvc embed video --provider SCREENR --videoId DOOs --viewName Screenr






... then the shell throws this error:






[Fatal Error] :1:1: Premature end of file.




Could not open input stream




java.lang.IllegalStateException: Could not open input stream




    at org.springframework.roo.support.util.XmlUtils.readXml(XmlUtils.java:109)




    at org.springframework.roo.addon.web.mvc.embedded.provider.VideoEmbeddedProvider.getScreenrId(VideoEmbeddedProvider.java:94)




    at org.springframework.roo.addon.web.mvc.embedded.provider.VideoEmbeddedProvider.install(VideoEmbeddedProvider.java:78)




    at org.springframework.roo.addon.web.mvc.embedded.EmbeddedOperationsImpl.install(EmbeddedOperationsImpl.java:54)




    at org.springframework.roo.addon.web.mvc.embedded.EmbeddedCommands.embedVideo(EmbeddedCommands.java:93)




    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)




    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)




    at java.lang.reflect.Method.invoke(Method.java:597)




    at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy$1.callback(ProcessManagerHostedExecutionStrategy.java:49)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:184)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:147)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)




    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:204)




    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:394)




    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:158)




    at java.lang.Thread.run(Thread.java:680)




Caused by: org.xml.sax.SAXParseException: Premature end of file.




    at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:249)




    at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:284)




    at javax.xml.parsers.DocumentBuilder.parse(DocumentBuilder.java:124)




    at org.springframework.roo.support.util.XmlUtils.readXml(XmlUtils.java:107)





</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.VideoEmbeddedProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2840" opendate="2011-10-18 21:38:45" fixdate="2011-10-18 22:32:39" resolution="Complete">
		<buginformation>
			<summary>Integration test ITD not updated when entity&amp;apos;s plural changes</summary>
			<description>To replicate:

Run the vote.roo script
Using a text editor or IDE, add the class-level annotation @RooPlural("Things") to Vote.java; Roo correctly updates these files:






Updated SRC_MAIN_JAVA/com/springsource/vote/web/VoteController_Roo_Controller.aj




Updated SRC_MAIN_JAVA/com/springsource/vote/domain/Vote_Roo_Entity.aj




Updated SRC_MAIN_WEBAPP/WEB-INF/views/votes/list.jspx






Restart the Roo shell; only now does Roo update the integration test ITD:






Updated SRC_TEST_JAVA/com/springsource/vote/domain/VoteIntegrationTest_Roo_IntegrationTest.aj







Likewise, if you delete that annotation to restore the default pluralisation, the same ITD is not updated until you restart the Roo shell.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProviderImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2846" opendate="2011-10-20 16:45:46" fixdate="2011-10-24 20:11:28" resolution="Complete">
		<buginformation>
			<summary>NPE starting Roo when subdirectory contains non-module POM</summary>
			<description>Since Git commit ID 91b7f045137b3d244ed730a7962a3f44d5098e4e (for ROO-120), starting Roo in a directory with no pom but with directories and other files gives a NullPointerException:






Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.




@axcdnt: #SpringRoo is getting better http://t.co/yGZnFGJI Next milestone will add support for JSF. Rapidly and efficient development! 




[FelixDispatchQueue] java.lang.NullPointerException




                         at org.springframework.roo.project.MavenPathResolvingStrategy.getRoot(MavenPathResolvingStrategy.java:68)




                         at org.springframework.roo.project.DelegatePathResolver.getRoot(DelegatePathResolver.java:70)




                         at org.springframework.roo.project.ProjectPathMonitoringInitializer.notify(ProjectPathMonitoringInitializer.java:58)




                         at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:233)




                         at org.springframework.roo.project.PomManagementServiceImpl.updatePomCache(PomManagementServiceImpl.java:176)




                         at org.springframework.roo.project.PomManagementServiceImpl.getFocusedModule(PomManagementServiceImpl.java:108)




                         at org.springframework.roo.project.PomManagementServiceImpl.getFocusedModuleName(PomManagementServiceImpl.java:116)




                         at org.springframework.roo.project.AbstractProjectOperations.getFocusedModuleName(AbstractProjectOperations.java:96)




                         at org.springframework.roo.project.AbstractProjectOperations.isFocusedProjectAvailable(AbstractProjectOperations.java:448)




                         at org.springframework.roo.addon.dbre.model.DbreModelServiceImpl.getDbreXmlPath(DbreModelServiceImpl.java:118)




                         at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.onFileEvent(DbreDatabaseListenerImpl.java:89)




                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:350)




                         at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:323)




                         at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:36)




                         at org.springframework.roo.process.manager.internal.MonitoringRequestCommand.callback(MonitoringRequestCommand.java:14)




                         at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:184)




                         at org.springframework.roo.process.manager.internal.DefaultProcessManager.completeStartup(DefaultProcessManager.java:106)




                         at org.springframework.roo.process.manager.internal.DefaultProcessManager.access$100(DefaultProcessManager.java:34)




                         at org.springframework.roo.process.manager.internal.DefaultProcessManager$1.frameworkEvent(DefaultProcessManager.java:59)




                         at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListenerCallback(EventDispatcher.java:774)




                         at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:725)




                         at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:949)




                         at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)




                         at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)




                         at java.lang.Thread.run(Thread.java:680)





</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.ProjectPathMonitoringInitializer.java</file>
			<file type="M">org.springframework.roo.project.MavenPathResolvingStrategy.java</file>
		</fixedFiles>
	</bug>
	<bug id="2845" opendate="2011-10-20 16:42:09" fixdate="2011-10-25 16:38:19" resolution="Complete">
		<buginformation>
			<summary>Metadata identification string is null when reverse engineering a database</summary>
			<description>Since Git commit 91b7f045137b3d244ed730a7962a3f44d5098e4e (for ROO-120), DBRE gives the following error when attempting to reverse engineer a database:






roo&amp;gt; database reverse engineer --schema "roo2424 roo2425" --package ~.domain




0420398 Created SRC_MAIN_RESOURCES/dbre.xml




fe0ade3 Updated ROOT/pom.xml




7425e2d Updated SRC_MAIN_RESOURCES/META-INF/persistence.xml




Metadata identification string &amp;amp;apos;null&amp;amp;apos; does not identify a metadata instance




java.lang.IllegalArgumentException: Metadata identification string &amp;amp;apos;null&amp;amp;apos; does not identify a metadata instance




    at org.springframework.roo.support.util.Assert.isTrue(Assert.java:65)




    at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:87)




    at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:83)




    at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:219)




    at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.getPhysicalTypeMetadata(DbreDatabaseListenerImpl.java:568)




    at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.getIdentifierType(DbreDatabaseListenerImpl.java:546)




    at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.manageIdentifier(DbreDatabaseListenerImpl.java:374)




    at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.createNewManagedEntityFromTable(DbreDatabaseListenerImpl.java:323)




    at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.reverseEngineer(DbreDatabaseListenerImpl.java:152)




    at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.deserializeDatabase(DbreDatabaseListenerImpl.java:112)




    at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.onFileEvent(DbreDatabaseListenerImpl.java:91)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:350)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanNotified(PollingFileMonitorService.java:231)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:193)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:147)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)




    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:204)




    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:403)




    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:158)




    at java.lang.Thread.run(Thread.java:680)










</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2850" opendate="2011-10-24 19:53:16" fixdate="2011-10-26 03:28:30" resolution="Complete">
		<buginformation>
			<summary>Tab completion ignores some available commands</summary>
			<description>If two or more commands have the same first word(s), then only one of them will be offered by the shell when you type those word(s) and press TAB. For example, these commands should be available all the time:

metadata for id
metadata for type
metadata status
metadata trace

If you type "metadata" and press TAB, the shell responds with "metadata trace", when it should offer you at least the above choices. Likewise if you type "metadata for" and press TAB, you get "metadata for id" instead of a choice between that and "metadata for type".
The workaround is to backspace over the unwanted completion and enter the first few letters of the desired completion, e.g. "metadata for t" will correctly give you "metadata for type". However this approach is only practical if you already know what command you want, which largely defeats the purpose of tab completion.</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.MethodTarget.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
			<file type="M">org.springframework.roo.shell.CommandMarker.java</file>
		</fixedFiles>
	</bug>
	<bug id="2851" opendate="2011-10-26 08:05:57" fixdate="2011-10-26 21:28:47" resolution="Complete">
		<buginformation>
			<summary>NPE creating a project in a directory with only non-root POMs</summary>
			<description>When attempting to execute the bikeshop script in a non-empty directory, but with no pom or other Roo-generated files or directories, the following NPE occurs:






oo&amp;gt; script bikeshop.roo




project --topLevelPackage com.springsource.bikeshop




java.lang.NullPointerException




    at org.springframework.roo.project.MavenPathResolvingStrategy.getPathInformation(MavenPathResolvingStrategy.java:171)




    at org.springframework.roo.project.MavenPathResolvingStrategy.getIdentifier(MavenPathResolvingStrategy.java:213)




    at org.springframework.roo.project.DelegatePathResolver.getIdentifier(DelegatePathResolver.java:61)




    at org.springframework.roo.project.MavenOperationsImpl.createMavenPom(MavenOperationsImpl.java:167)




    at org.springframework.roo.project.MavenOperationsImpl.createProject(MavenOperationsImpl.java:66)




    at org.springframework.roo.project.MavenCommands.createProject(MavenCommands.java:54)




    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)




    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)




    at java.lang.reflect.Method.invoke(Method.java:597)




    at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy$1.callback(ProcessManagerHostedExecutionStrategy.java:49)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:183)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:146)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)




    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:204)




    at org.springframework.roo.shell.AbstractShell.executeScriptLine(AbstractShell.java:144)




    at org.springframework.roo.shell.AbstractShell.script(AbstractShell.java:93)




    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)




    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)




    at java.lang.reflect.Method.invoke(Method.java:597)




    at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy$1.callback(ProcessManagerHostedExecutionStrategy.java:49)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:183)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:146)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)




    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:204)




    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:403)




    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:158)




    at java.lang.Thread.run(Thread.java:680)




Script required 0.087 seconds to execute




Script execution aborted




java.lang.IllegalStateException: Script execution aborted




    at org.springframework.roo.shell.AbstractShell.script(AbstractShell.java:98)




    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)




    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)




    at java.lang.reflect.Method.invoke(Method.java:597)




    at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy$1.callback(ProcessManagerHostedExecutionStrategy.java:49)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:183)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:146)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)




    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:204)




    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:403)




    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:158)




    at java.lang.Thread.run(Thread.java:680)






Project attached</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.MavenPathResolvingStrategy.java</file>
			<file type="M">org.springframework.roo.project.PomManagementService.java</file>
			<file type="M">org.springframework.roo.project.DefaultPathResolvingStrategy.java</file>
		</fixedFiles>
	</bug>
	<bug id="2847" opendate="2011-10-21 16:13:16" fixdate="2011-10-29 18:14:58" resolution="Complete">
		<buginformation>
			<summary>NPE in JLineShellComponent when starting Roo with no wired or wireless network</summary>
			<description>A user reports upon starting the Roo shell, the following error occurs:






Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.




Exception in thread "Spring Roo JLine Shell" java.lang.NullPointerException




at org.springframework.roo.shell.jline.osgi.JLineShel lComponent.getLatestFavouriteTweet(JLineShel




lComponent.java:97)




at org.springframework.roo.shell.jline.osgi.JLineShel lComponent.getStartupNotifications(JLineShel




lComponent.java:85)




at org.springframework.roo.shell.jline.JLineShell.run (JLineShell.java:130)




at java.lang.Thread.run(Thread.java:662)





</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.jline.osgi.JLineShellComponent.java</file>
		</fixedFiles>
	</bug>
	<bug id="2854" opendate="2011-10-28 09:49:24" fixdate="2011-10-29 19:24:15" resolution="Complete">
		<buginformation>
			<summary>The web jsf all command generated ManagedBean&amp;apos;s init() method is incomplete</summary>
			<description>If you generate a jsf UI and deploy it, and than click on any "List all" menu item
you will see an empty list even if there are entries in the DB.
Once you use the "Create" menu item, suddenly you can see all items. So let say you have
5 entries in the DB, when you restart tomcat and click on "List all" you see an empty table,
than if you create one new with "Create", than you will see a table with 6 rows.
In the generated ManagedBean&amp;amp;apos;s persist() and delete() methods include a call to findAllXXX()
but the init() method missing it.
If you modify addon-jsf/src/main/java/org/springframework/roo/addon/jsf/managedbean/JsfManagedBeanMetadata.java
by adding 1 line in getInitMethod(), around line 333:
    bodyBuilder.appendFormalLine("findAll" + plural + "();");
this is fixing the bug.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jsf.managedbean.JsfManagedBeanMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2856" opendate="2011-10-30 22:37:46" fixdate="2011-10-30 22:56:34" resolution="Complete">
		<buginformation>
			<summary>Vote application broken since multi-module maven changes</summary>
			<description>Since the ROO-120 code was added, the Roo vote application has stopped workking</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.security.SecurityOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2862" opendate="2011-11-01 10:24:02" fixdate="2011-11-01 14:31:09" resolution="Duplicate">
		<buginformation>
			<summary>mongo setup fails after jpa setup in new project</summary>
			<description>
run mongo setup then jpa setup, exception is org.springframework.roo.addon.jpa.JpaOperationsImpl.updateDatabaseProperties(JpaOperationsImpl.java:475)
roo&amp;gt; project --topLevelPackage com.test
Created ROOT/pom.xml
Created SRC_MAIN_JAVA
Created SRC_MAIN_RESOURCES
Created SRC_TEST_JAVA
Created SRC_TEST_RESOURCES
Created SRC_MAIN_WEBAPP
Created SRC_MAIN_RESOURCES/META-INF/spring
Created SRC_MAIN_RESOURCES/log4j.properties
Created SRC_MAIN_RESOURCES/META-INF/spring/applicationContext.xml
com.test roo&amp;gt; mongo setup
Created SRC_MAIN_RESOURCES/META-INF/spring/database.properties
Created SRC_MAIN_RESOURCES/META-INF/spring/applicationContext-mongo.xml
Updated ROOT/pom.xml [added repositories http://maven.springframework.org/milestone, https://repository.jboss.org/nexus/content/repositories/releases; added dependencies javax.persistence:persistence-api:1.0, javax.validation:validation-api:1.0.0.GA, org.hibernate:hibernate-validator:4.2.0.Final, org.cloudfoundry:cloudfoundry-runtime:0.8.0, org.springframework.data:spring-data-mongodb:1.0.0.M4]
Updated SRC_MAIN_RESOURCES/META-INF/spring/applicationContext-mongo.xml
com.test roo&amp;gt; jpa setup --database
jpa setup --database        jpa setup --databaseName
com.test roo&amp;gt; jpa setup --database pos
jpa setup --database pos
required --database: The database to support; no default value
com.test roo&amp;gt; jpa setup --database POSTGRES --provider hiber
jpa setup --database POSTGRES --provider hiber
required --provider: The persistence provider to support; no default value
com.test roo&amp;gt; jpa setup --database POSTGRES --provider HIBERNATE 
NullPointerException at org.springframework.roo.addon.jpa.JpaOperationsImpl.updateDatabaseProperties(JpaOperationsImpl.java:475)
com.test roo&amp;gt; </description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoOperationsImpl.java</file>
			<file type="M">org.springframework.roo.model.SpringJavaType.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoEntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2784</link>
		</links>
	</bug>
	<bug id="2863" opendate="2011-11-01 10:29:25" fixdate="2011-11-01 14:37:22" resolution="Complete">
		<buginformation>
			<summary>Hint fails after mongo setup</summary>
			<description>For a mongodb only project, typing "hint" should not require jpa setup
    ____  ____  ____  
   / __ \/ __ \/ __ \ 
  / /_/ / / / / / / / 
 / , _/ // / /_/ /  
// ||___/___/    1.2.0.M1 [rev 63a3136]
Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.
@scottyfred: Getting started with #SpringRoo and #SQLFire: http://t.co/4QGP1OWQ 
roo&amp;gt; project --topLevelPackage com.test
Created ROOT/pom.xml
Created SRC_MAIN_JAVA
Created SRC_MAIN_RESOURCES
Created SRC_TEST_JAVA
Created SRC_TEST_RESOURCES
Created SRC_MAIN_WEBAPP
Created SRC_MAIN_RESOURCES/META-INF/spring
Created SRC_MAIN_RESOURCES/log4j.properties
Created SRC_MAIN_RESOURCES/META-INF/spring/applicationContext.xml
com.test roo&amp;gt; hint
Roo requires the installation of a JPA provider and associated database.
Type &amp;amp;apos;jpa setup&amp;amp;apos; and then hit TAB three times.
We suggest you type &amp;amp;apos;H&amp;amp;apos; then TAB to complete "HIBERNATE".
After the --provider, press TAB twice for database choices.
For testing purposes, type (or TAB) HYPERSONIC_IN_MEMORY.
If you press TAB again, you&amp;amp;apos;ll see there are no more options.
As such, you&amp;amp;apos;re ready to press ENTER to execute the command.
Once JPA is installed, type &amp;amp;apos;hint&amp;amp;apos; and ENTER for the next suggestion.
com.test roo&amp;gt; mongo setup
Created SRC_MAIN_RESOURCES/META-INF/spring/database.properties
Created SRC_MAIN_RESOURCES/META-INF/spring/applicationContext-mongo.xml
Updated ROOT/pom.xml [added repositories http://maven.springframework.org/milestone, https://repository.jboss.org/nexus/content/repositories/releases; added dependencies javax.persistence:persistence-api:1.0, javax.validation:validation-api:1.0.0.GA, org.hibernate:hibernate-validator:4.2.0.Final, org.cloudfoundry:cloudfoundry-runtime:0.8.0, org.springframework.data:spring-data-mongodb:1.0.0.M4]
Updated SRC_MAIN_RESOURCES/META-INF/spring/applicationContext-mongo.xml
com.test roo&amp;gt; hint
Roo requires the installation of a JPA provider and associated database.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.HintCommands.java</file>
			<file type="M">org.springframework.roo.classpath.operations.HintOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2827</link>
		</links>
	</bug>
	<bug id="2755" opendate="2011-09-15 23:13:59" fixdate="2011-11-01 23:28:51" resolution="Complete">
		<buginformation>
			<summary>web gwt all doesn&amp;apos;t create a gwt source entry</summary>
			<description>The "web gwt all" command requires 2 parameters: proxy &amp;amp; request package locations.  If the developer chooses to put them in the top level package ie ~.proxy and ~.request the compiler will complain that it cannot find the source for these files.  Roo could add a line in ApplicationScaffold.gwt.xml &amp;lt;source path="request"/&amp;gt; and &amp;lt;source path="proxy"/&amp;gt;</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProviderTest.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2867" opendate="2011-11-02 08:32:45" fixdate="2011-11-02 19:00:44" resolution="Complete">
		<buginformation>
			<summary>Illegal/unsupported escape sequence near index 3</summary>
			<description>C:\Users\Developer&amp;gt;"C:\devtools\roo-snapshots\2Nov2011\spring-roo-1.2.0.BUILD-SN
APSHOT\bin\roo.bat"
    ____  ____  ____
   / __ \/ __ \/ __ \
  / /_/ / / / / / / /
 / , _/ // / /_/ /
// ||___/___/    1.2.0.BUILD-SNAPSHOT [rev 6c728a1]
Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.
@ngurenyaga: @SpringRoo I rarely praise tools, but Roo is special. Special enoug
h to make me tweet at an "ungodly" hour
Illegal/unsupported escape sequence near index 3
C:\Users\Developer\
   ^
roo&amp;gt;</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserMethodMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserConstructorMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.converters.JavaTypeConverter.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.project.PomManagementServiceImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">2918</link>
		</links>
	</bug>
	<bug id="2866" opendate="2011-11-01 21:50:45" fixdate="2011-11-02 22:29:40" resolution="Complete">
		<buginformation>
			<summary>GAE-specific version of gwt-maven-plugin is not added when GAE is selected as database</summary>
			<description>This appears to be a regression bug. After the "web gwt gae update" command is run when selecting the GAE database from a non-GAE database, the GWT version of the plugin is removed as expected but the GAE version of the same plugin is not added back to the pom</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtCommands.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperations.java</file>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="M">org.springframework.roo.project.ProjectOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="2827" opendate="2011-10-15 03:59:06" fixdate="2011-11-03 00:10:06" resolution="Complete">
		<buginformation>
			<summary>&amp;apos;hint&amp;apos; continues to prompt for &amp;apos;jpa setup&amp;apos; after &amp;apos;mongo setup&amp;apos;</summary>
			<description>I was attempting to follow the tutorial at http://static.springsource.org/spring-roo/reference/html/beginning.html and incorporating the MongoDB as per http://static.springsource.org/spring-roo/reference/html/base-layers.html instead of a JPA source. There is not a &amp;amp;apos;jpa setup --provider&amp;amp;apos; parameter to specify MongoDB, nor does invoking &amp;amp;apos;mongo setup&amp;amp;apos; satisfy Roo&amp;amp;apos;s requirements, so it keeps prompting to call &amp;amp;apos;jpa setup&amp;amp;apos;.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.HintCommands.java</file>
			<file type="M">org.springframework.roo.classpath.operations.HintOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2863</link>
		</links>
	</bug>
	<bug id="2191" opendate="2011-03-01 21:49:11" fixdate="2011-11-03 17:20:01" resolution="Duplicate">
		<buginformation>
			<summary>Provide a mechanism to have a class implement an interface via the roo shell.  &amp;apos;inheritance&amp;apos; command</summary>
			<description>Can be run on the current entity/class
inheritance --extends ~.ParentClass
Extends the current class
inheritance --implements ~.MyInterface
Implements an interface to the current class.  Stubs all non-implemented methods. Maybe adds @RooStub annotation to top of class?
Also add --implements to &amp;amp;apos;entity&amp;amp;apos; command.
Obviously there is great value in this, but my specific use case would be to create service methods for addons without providing the entity implementations.  
For instance, let&amp;amp;apos;s say I wanted to create an add-on that has a UserService
userService.doSomething(User user) {
   // changes user object
   // calls user.persist();
}
takes interface User 
I don&amp;amp;apos;t want to provide an entity here because I don&amp;amp;apos;t want to couple to a persistence type.  So instead I expect the user to install the UserService addon and then create a MyUser object that implements the User interface.
entity --class ~.MyUser --implements User 
</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaCommands.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoCommands.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceCommands.java</file>
			<file type="M">org.springframework.roo.classpath.converters.JavaTypeConverter.java</file>
			<file type="M">org.springframework.roo.classpath.converters.JavaPackageConverter.java</file>
			<file type="M">org.springframework.roo.classpath.converters.JavaTypeConverterTest.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderCommands.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonCommands.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.finder.WebFinderCommands.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperations.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandCommands.java</file>
			<file type="M">org.springframework.roo.classpath.PhysicalTypeCategory.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.email.MailCommands.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrCommands.java</file>
			<file type="M">org.springframework.roo.addon.json.JsonCommands.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathCommands.java</file>
			<file type="M">org.springframework.roo.addon.equals.EqualsCommands.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperations.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtCommands.java</file>
			<file type="M">org.springframework.roo.addon.creator.CreatorCommands.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaCommands.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestCommands.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfCommands.java</file>
			<file type="M">org.springframework.roo.addon.jms.JmsCommands.java</file>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.op4j.Op4jCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">994</link>
		</links>
	</bug>
	<bug id="2881" opendate="2011-11-08 04:17:42" fixdate="2011-11-09 18:45:15" resolution="Complete">
		<buginformation>
			<summary>Abstract tag is not honored by GWT scaffolding process.</summary>
			<description>Entities defined to be abstract are still created during the scaffold process in GWT. In addition, this entities are declared as abstract in the Java Code, hence, it creates compilation time problem cause the generated code in the scaffold with attempt to instantiate them.
The following script reproduces the problem:
entity --class ~.server.elements.AbstractElement --abstract
web gwt setup
web gwt all --proxyPackage ~.client.proxy --requestPackage ~.client.request</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ioc.ScaffoldModule-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.place.ProxyListView-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtType.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldDesktopApp-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.ScaffoldMobileApp-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.gae.GaeLoginWidgetDriver-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.locator.GwtLocatorMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.shared.gae.GaeUserServiceRequest-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.place.AbstractProxyEditActivity-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.place.ProxyPlace-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.place.ProxyListPlace-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.module.client.scaffold.Scaffold-template.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2891" opendate="2011-11-11 13:25:02" fixdate="2011-11-11 21:06:00" resolution="Complete">
		<buginformation>
			<summary>Repository JPA ITD not refreshed when there is a change to the domain type&amp;apos;s identifier type</summary>
			<description></description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.persistence.PersistenceMemberLocatorImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">2892</link>
		</links>
	</bug>
	<bug id="2892" opendate="2011-11-11 22:57:12" fixdate="2011-11-11 23:12:50" resolution="Complete">
		<buginformation>
			<summary>Repository Mongo ITD not refreshed when there is a change to the domain type&amp;apos;s identifier type</summary>
			<description></description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.RepositoryMongoMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.RepositoryMongoMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoEntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.RooMongoRepository.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoEntityMetadataProvider.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">2891</link>
		</links>
	</bug>
	<bug id="2888" opendate="2011-11-10 02:38:33" fixdate="2011-11-12 04:19:34" resolution="Complete">
		<buginformation>
			<summary>Problem with -ActiveRecord false in roo-gwt</summary>
			<description>Problem described in:
http://forum.springsource.org/showthread.php?116797-NullPointerException-with-quot-web-gwt-all-quot-when-activeRecord-false&amp;amp;highlight=</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.locator.GwtLocatorMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.GwtScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.TemplateResourceLoader.java</file>
		</fixedFiles>
	</bug>
	<bug id="2895" opendate="2011-11-13 16:58:39" fixdate="2011-11-13 16:59:38" resolution="Complete">
		<buginformation>
			<summary>MVC forms should not display serialVersionUID field for composite primary key classes</summary>
			<description>Appears to be a regression bug from M1 - the serialVersionUID field is available for input on the create and edit forms of a composite primary key class. This field should not be displayed.</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.serializable.SerializableMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.customdata.CustomDataKeys.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.persistence.PersistenceMemberLocatorImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadata.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="2893" opendate="2011-11-13 03:09:43" fixdate="2011-11-13 22:05:23" resolution="Complete">
		<buginformation>
			<summary>web mvc setup creates two mvc servlets in trunk</summary>
			<description>This is with build c2393bf.  When Roo generates / updates the web.xml file - it puts two copies of the mvc context in the system, and maps both to &amp;amp;apos;/&amp;amp;apos;:
in web.xml:











    &amp;lt;!-- Handles Spring requests --&amp;gt;




    &amp;lt;servlet&amp;gt;




        &amp;lt;servlet-name&amp;gt;app&amp;lt;/servlet-name&amp;gt;




        &amp;lt;servlet-class&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt;




        &amp;lt;init-param&amp;gt;




            &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;




            &amp;lt;param-value&amp;gt;/WEB-INF/spring/webmvc-config.xml&amp;lt;/param-value&amp;gt;




        &amp;lt;/init-param&amp;gt;




        &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;




    &amp;lt;/servlet&amp;gt;




    




    




    




    &amp;lt;servlet&amp;gt;




        &amp;lt;servlet-name&amp;gt;pizzashop&amp;lt;/servlet-name&amp;gt;




        &amp;lt;servlet-class&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt;




        &amp;lt;init-param&amp;gt;




            &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;




            &amp;lt;param-value&amp;gt;WEB-INF/spring/webmvc-config.xml&amp;lt;/param-value&amp;gt;




        &amp;lt;/init-param&amp;gt;




        &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;




    &amp;lt;/servlet&amp;gt;




    




    &amp;lt;servlet-mapping&amp;gt;




        &amp;lt;servlet-name&amp;gt;pizzashop&amp;lt;/servlet-name&amp;gt;




        &amp;lt;url-pattern&amp;gt;/&amp;lt;/url-pattern&amp;gt;




    &amp;lt;/servlet-mapping&amp;gt;




    &amp;lt;servlet-mapping&amp;gt;




        &amp;lt;servlet-name&amp;gt;app&amp;lt;/servlet-name&amp;gt;




        &amp;lt;url-pattern&amp;gt;/&amp;lt;/url-pattern&amp;gt;




    &amp;lt;/servlet-mapping&amp;gt;






I found this running the pizzashop example and noticed it when doing a jetty:run and getting the two web contexts.</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonOperationsImpl.java</file>
			<file type="M">org.springframework.roo.model.SpringJavaType.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
			<file type="M">org.springframework.roo.support.util.WebXmlUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="2872" opendate="2011-11-04 06:54:11" fixdate="2011-11-14 16:07:34" resolution="Complete">
		<buginformation>
			<summary>String index out of range -1 when launching roo from a non empty directory</summary>
			<description>I am consistently able to create a "String index out of range -1" exception when launching the roo shell from a non-empty directory that contains at least 1 java file.  Attached is the output of the commands that consistently recreate this.
I am currently using 1.2.0.BUILD-SNAPSHOT [rev babe22d]</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2899" opendate="2011-11-15 01:09:24" fixdate="2011-11-15 01:12:24" resolution="Complete">
		<buginformation>
			<summary>One Dependency constructor ignores specified DependencyType</summary>
			<description>The constructor o.s.r.project.Dependency#Dependency(String, String, String, DependencyType, DependencyScope) added in commit 
60ae6a8467e4b5628154f90042d6d45d8fe7f395 ignores the provided DependencyType and uses DependencyType.JAR instead. Despite the JavaDoc correctly describing this behaviour, this is obviously not what was intended and would be a surprise to any developer using this constructor.
The potential impact of this bug seems small, given that most dependencies are actually JARs.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.Dependency.java</file>
			<file type="M">org.springframework.roo.project.DependencyTest.java</file>
		</fixedFiles>
	</bug>
	<bug id="2886" opendate="2011-11-10 01:54:26" fixdate="2011-11-15 07:03:09" resolution="Complete">
		<buginformation>
			<summary>String index out of range: Exception when executing scaffolding process in Roo GWT for a "set" field</summary>
			<description>





java.lang.StringIndexOutOfBoundsException: String index out of range: -1




   at java.lang.String.substring(String.java:1937)




   at org.springframework.roo.addon.gwt.GwtTemplateServiceImpl.buildMirrorDataDictionary(GwtTemplateServiceImpl.java:576)




   at org.springframework.roo.addon.gwt.GwtTemplateServiceImpl.getMirrorTemplateTypeDetails(GwtTemplateServiceImpl.java:111)




   at org.springframework.roo.addon.gwt.scaffold.GwtScaffoldMetadataProviderImpl.get(GwtScaffoldMetadataProviderImpl.java:139)




   at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:150)




   at org.springframework.roo.metadata.DefaultMetadataService.evictAndGet(DefaultMetadataService.java:285)




   at org.springframework.roo.addon.gwt.scaffold.GwtScaffoldMetadataProviderImpl.notify(GwtScaffoldMetadataProviderImpl.java:236)




   at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:240)




   at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:214)




   at org.springframework.roo.classpath.DefaultPhysicalTypeMetadataProvider.onFileEvent(DefaultPhysicalTypeMetadataProvider.java:97)




   at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:352)




   at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:325)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:181)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.backgroundPoll(DefaultProcessManager.java:128)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.timerBasedPoll(DefaultProcessManager.java:243)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager$2.run(DefaultProcessManager.java:71)




   at java.lang.Thread.run(Thread.java:680)






The following script reproduces the bug:






project --topLevelPackage com.foo.roo2881




jpa setup --provider ECLIPSELINK --database H2_IN_MEMORY









entity jpa --class ~.domain.foo1 --testAutomatically









entity jpa --class ~.domain.foo2 --testAutomatically




field set --fieldName bar --type foo1









web gwt setup




web gwt all --proxyPackage ~.client.proxy --requestPackage ~.client.request





</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtProxyProperty.java</file>
		</fixedFiles>
	</bug>
	<bug id="2907" opendate="2011-11-16 16:26:52" fixdate="2011-11-16 16:33:54" resolution="Complete">
		<buginformation>
			<summary>DBRE should not consider MySQL table called &amp;apos;SEQUENCE&amp;apos;</summary>
			<description></description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseIntrospector.java</file>
		</fixedFiles>
	</bug>
	<bug id="2900" opendate="2011-11-15 02:33:17" fixdate="2011-11-16 16:34:41" resolution="Complete">
		<buginformation>
			<summary>In XxxBean_Roo_ManagedBean.aj, the completeYyy(java.lang.String query) method calls EntityManager#toString</summary>
			<description>To replicate, run this script:






project --topLevelPackage com.example




jpa setup --database HYPERSONIC_IN_MEMORY --provider HIBERNATE 




entity jpa --class ~.domain.Thing




field string name




web jsf setup 




web jsf all --package ~.web




entity jpa --class ~.domain.Owner




focus --class ~.domain.Thing




field reference --fieldName owner --type ~.domain.Owner






The ITD ThingBean_Roo_ManagedBean.aj contains this method:






public List&amp;lt;Owner&amp;gt; ThingBean.completeOwner(java.lang.String query) {




        List&amp;lt;Owner&amp;gt; suggestions = new ArrayList&amp;lt;Owner&amp;gt;();




        for (Owner owner : Owner.findAllOwners()) {




            String ownerStr = owner.getEntityManager() +  " "  + owner.getId() +  " "  + owner.getVersion();




            if (ownerStr.toLowerCase().startsWith(query.toLowerCase())) {




                suggestions.add(owner);




            }




        }




        return suggestions;




}






It seems wrong to be referencing the EntityManager at all here, let alone calling toString() on it. I&amp;amp;apos;ve logged this as a bug because my multimodule JSF/MVC project fails to compile (in Maven) at this line.</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jsf.managedbean.JsfManagedBeanMetadataProviderImpl.java</file>
			<file type="D">org.springframework.roo.addon.jsf.model.JsfFieldHolder.java</file>
			<file type="M">org.springframework.roo.addon.jsf.managedbean.JsfManagedBeanMetadata.java</file>
			<file type="M">org.springframework.roo.addon.jsf.converter.JsfConverterMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2908" opendate="2011-11-17 13:20:17" fixdate="2011-11-17 15:54:43" resolution="Complete">
		<buginformation>
			<summary>web jsf setup command generates incomplete web.xml if apache myfaces is choose</summary>
			<description>if you generate a simple jsf app with myfaces as implementation,
the web.xml will the myfaces specific listener:
  &amp;lt;listener&amp;gt;
    &amp;lt;listener-class&amp;gt;org.apache.myfaces.webapp.StartupServletContextListener&amp;lt;/listener-class&amp;gt;
  &amp;lt;/listener&amp;gt;
this is the roo script i used:
=========
project --topLevelPackage x
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY
entity jpa --class ~.Person
field string --fieldName name --notNull
web jsf setup --implementation APACHE_MYFACES 
web jsf all --package ~.jsf
=========
then trying to deploy it with:
mvn jetty:tun</description>
			<version>1.2.0.RELEASE</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jsf.JsfCommands.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2909" opendate="2011-11-18 01:41:43" fixdate="2011-11-18 08:55:31" resolution="Complete">
		<buginformation>
			<summary>Creating a wrapper addon causes exception in Roo shell</summary>
			<description>Create a wrapper addon, e.g. as follows:






addon create wrapper --groupId commons-lang --artifactId commons-lang --version 2.5 --topLevelPackage org.apache --vendorName Apache --licenseUrl http://www.apache.org






The Roo shell throws this error:






Invalid artifactId &amp;amp;apos;${project.groupId}.${pkgArtifactId}&amp;amp;apos;




java.lang.IllegalArgumentException: Invalid artifactId &amp;amp;apos;${project.groupId}.${pkgArtifactId}&amp;amp;apos;




    at org.springframework.roo.support.util.Assert.isTrue(Assert.java:65)




    at org.springframework.roo.project.GAV.&amp;lt;init&amp;gt;(GAV.java:46)




    at org.springframework.roo.project.maven.Pom.&amp;lt;init&amp;gt;(Pom.java:88)




    at org.springframework.roo.project.maven.PomFactoryImpl.getInstance(PomFactoryImpl.java:75)




    at org.springframework.roo.project.PomManagementServiceImpl.parseUnparsedPoms(PomManagementServiceImpl.java:166)




    at org.springframework.roo.project.PomManagementServiceImpl.updatePomCache(PomManagementServiceImpl.java:140)




    at org.springframework.roo.project.PomManagementServiceImpl.getFocusedModule(PomManagementServiceImpl.java:111)




    at org.springframework.roo.project.PomManagementServiceImpl.getFocusedModuleName(PomManagementServiceImpl.java:119)




    at org.springframework.roo.project.AbstractProjectOperations.getFocusedModuleName(AbstractProjectOperations.java:149)




    at org.springframework.roo.project.AbstractProjectOperations.isFocusedProjectAvailable(AbstractProjectOperations.java:129)




    at org.springframework.roo.addon.dbre.model.DbreModelServiceImpl.getDbreXmlPath(DbreModelServiceImpl.java:119)




    at org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.onFileEvent(DbreDatabaseListenerImpl.java:89)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:352)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publishRequestedFileEvents(PollingFileMonitorService.java:175)




    at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanNotified(PollingFileMonitorService.java:150)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:192)




    at org.springframework.roo.process.manager.internal.DefaultProcessManager.execute(DefaultProcessManager.java:146)




    at org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.execute(ProcessManagerHostedExecutionStrategy.java:47)




    at org.springframework.roo.shell.AbstractShell.executeCommand(AbstractShell.java:204)




    at org.springframework.roo.shell.jline.JLineShell.promptLoop(JLineShell.java:403)




    at org.springframework.roo.shell.jline.JLineShell.run(JLineShell.java:158)






Note that the generated addon project is valid and can be built by Maven, but with warnings:






aswan: addon &amp;gt; mvn clean install




[INFO] Scanning for projects...




[WARNING] 




[WARNING] Some problems were encountered while building the effective model for org.apache:org.apache.commons-lang:bundle:2.5.0001




[WARNING] &amp;amp;apos;artifactId&amp;amp;apos; contains an expression but should be a constant. @ org.apache:${project.groupId}.${pkgArtifactId}:${osgiVersion}, /Users/aswan/projects/addon/pom.xml, line 5, column 17




[WARNING] &amp;amp;apos;version&amp;amp;apos; contains an expression but should be a constant. @ org.apache:${project.groupId}.${pkgArtifactId}:${osgiVersion}, /Users/aswan/projects/addon/pom.xml, line 7, column 14




[WARNING] 




[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.




[WARNING] 




[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.






The solution to both the Roo shell error and the Maven warning is to change the generated POM not to use expressions in either the "artifactId" or "version" elements.</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.creator.CreatorOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2913" opendate="2011-11-19 12:55:32" fixdate="2011-11-19 21:35:44" resolution="Complete">
		<buginformation>
			<summary>JSF Scaffold against multi-module roo project switches module focus to project with entity</summary>
			<description>Using this script, which creates a web and services project, and installs JSF into the web module, the focus changes to the services module when finished scaffolding the web bean.
I think this may be a regression.  This is reproducible on my machine from scratch.  I will try Spring MVC setup as well and append to this JIRA if it is also doing this same thing now.











// Spring Roo 1.2.0.BUILD-SNAPSHOT [rev 64c3bb1] log opened at 2011-11-19 15:47:40




project --topLevelPackage org.foo.bar --projectName baz




module create --moduleName web --topLevelPackage ~.web




module focus --moduleName ~




module create --moduleName services --topLevelPackage ~.services




module focus --moduleName web




web jsf setup




module focus --moduleName services




jpa setup --database HYPERSONIC_PERSISTENT --provider HIBERNATE 




entity jpa --class ~.db.Course --activeRecord false --testAutomatically --equals true 




field string --fieldName name




field number --fieldName cost --type java.math.BigDecimal --decimalMin 0.0




field number --type short --fieldName duration




repository jpa --interface ~.persistence.CourseRepository --entity ~.db.Course




service --interface ~.service.CourseService --entity ~.db.Course 




module focus --moduleName web




web jsf scaffold --class ~.CourseBean --beanName courseBean --entity services|~.db.Course --includeOnMenu true --createConverter true 





</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jsf.JsfCommands.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">2914</link>
		</links>
	</bug>
	<bug id="2914" opendate="2011-11-19 21:48:09" fixdate="2011-11-20 00:35:05" resolution="Complete">
		<buginformation>
			<summary>GWT Scaffold against multi-module roo project switches module focus to project with entity</summary>
			<description></description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">2913</link>
		</links>
	</bug>
	<bug id="2918" opendate="2011-11-20 20:02:09" fixdate="2011-11-20 20:20:55" resolution="Complete">
		<buginformation>
			<summary>Unknown character property name {r} near index 4 when executing expenses.roo in Windows</summary>
			<description>The following error occurs when running expenses.roo in Windows:






188abe3 Created SRC_MAIN_JAVA\org\springsource\roo\extrack\client\proxy\EmployeeProxy.java




Unknown character property name {r} near index 4




C:\projects\roo-test\expenses\src\main\java\




    ^




java.util.regex.PatternSyntaxException: Unknown character property name {r} near index 4




C:\projects\roo-test\expenses\src\main\java\




    ^




    at java.util.regex.Pattern.error(Pattern.java:1713)




    at java.util.regex.Pattern.charPropertyNodeFor(Pattern.java:2437)




    at java.util.regex.Pattern.family(Pattern.java:2412)




    at java.util.regex.Pattern.sequence(Pattern.java:1831)




    at java.util.regex.Pattern.expr(Pattern.java:1752)




    at java.util.regex.Pattern.compile(Pattern.java:1460)




    at java.util.regex.Pattern.&amp;lt;init&amp;gt;(Pattern.java:1133)




    at java.util.regex.Pattern.compile(Pattern.java:823)




    at java.lang.String.replaceAll(String.java:2189)




    at org.springframework.roo.addon.gwt.GwtOperationsImpl.addPackageToGwtXml(GwtOperationsImpl.java:302)




    at org.springframework.roo.addon.gwt.GwtOperationsImpl.createProxy(GwtOperationsImpl.java:342)




    at org.springframework.roo.addon.gwt.GwtOperationsImpl.proxyAll(GwtOperationsImpl.java:201)




    at org.springframework.roo.addon.gwt.GwtOperationsImpl.scaffoldAll(GwtOperationsImpl.java:239)




    at org.springframework.roo.addon.gwt.GwtCommands.scaffoldAll(GwtCommands.java:99)




    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)




    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)




    at java.lang.reflect.Method.invoke(Method.java:597)




    at org.springframework.roo.support.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)





</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">2867</link>
		</links>
	</bug>
	<bug id="2904" opendate="2011-11-15 16:47:20" fixdate="2011-11-21 16:27:28" resolution="Complete">
		<buginformation>
			<summary>Roo nightly builds have broken auto-complete with STS console</summary>
			<description>Affected version post 1.2.0M1
It appears that with the recent builds of the Roo Shell, Parser#complete now takes a list of Completions instead of a list of Strings, and this is breaking compatibility with existing implementations of the STS console integration. Would it be possible to make this change in a binary backwards compatible manner? Instead of changing the signature of the existing method, perhaps introduce a new method and keep the older one functional?
Thanks,
Leo Dos Santos
SpringSource Tool Suite Committer</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.jline.JLineCompletorAdapter.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
			<file type="M">org.springframework.roo.classpath.converters.JavaTypeConverter.java</file>
			<file type="M">org.springframework.roo.shell.Parser.java</file>
		</fixedFiles>
	</bug>
	<bug id="2920" opendate="2011-11-21 21:05:04" fixdate="2011-11-21 21:17:50" resolution="Complete">
		<buginformation>
			<summary>Selenium test generation broken</summary>
			<description>The correct generation of Selenium test files was broken by Git commit ID 91b7f045137b3d244ed730a7962a3f44d5098e4e.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.selenium.SeleniumOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2902" opendate="2011-11-15 07:50:24" fixdate="2011-11-22 12:20:46" resolution="Complete">
		<buginformation>
			<summary>Spurious text in GWT UI when entity has only a Set field</summary>
			<description>Create a simple GWT app as follows:






project --topLevelPackage com.example




jpa setup --provider ECLIPSELINK --database H2_IN_MEMORY









entity jpa --class ~.domain.Thing




field string --fieldName name









entity jpa --class ~.domain.Owner




field set --fieldName things --type ~.domain.Thing









web gwt setup




web gwt all --proxyPackage ~.client.proxy --requestPackage ~.client.request







Start the app using "mvn gwt:run".
Create a Thing.
Create an Owner in which the set contains the Thing you created above.
When you click "Save", the following text appears in the UI:







[com.example.client.proxy.ThingProxyAutoBean_com_google_web_bindery_requestfactory_shared_impl_EntityProxyCategory_com_google_web_bindery_requestfactory_shared_impl_ValueProxyCategory_com_google_web_bindery_requestfactory_shared_impl_BaseProxyCategory$2@1] ([com.example.client.proxy.ThingProxyAutoBean_com_google_web_bindery_requestfactory_shared_impl_EntityProxyCategory_com_google_web_bindery_requestfactory_shared_impl_ValueProxyCategory_com_google_web_bindery_requestfactory_shared_impl_BaseProxyCategory$2@1])





</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.proxy.GwtProxyMetadataProviderImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2922" opendate="2011-11-22 16:14:19" fixdate="2011-11-22 16:34:03" resolution="Complete">
		<buginformation>
			<summary>GWT add-on does not respect paths in a multi-module project</summary>
			<description>In a multi-module project where GWT scaffolding is required in a module, the GWT add-on creates artifacts in the root module of the project as well as the intended module. This is due to the use of focused project calls, when it should use the path of the actual module where the GWT scaffolding is required.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtPath.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.proxy.GwtProxyMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.GwtScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="M">org.springframework.roo.addon.gwt.locator.GwtLocatorMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTemplateServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2923" opendate="2011-11-22 18:40:34" fixdate="2011-11-22 20:36:38" resolution="Complete">
		<buginformation>
			<summary>DBRE does not respect paths in a multi-module project</summary>
			<description>In a multi-module project, when the the Roo shell is started in the root directory of the project, DBRE-generated artifacts are deleted due to not finding the dbre.xml file in the module where the reverse engineering occurred as it is currently only looking for the file in the root (focused) directory. The dbre add-on should search for the file in the correct module</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseContentHandler.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DbreModelService.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2924" opendate="2011-11-23 02:33:36" fixdate="2011-11-23 13:06:41" resolution="Complete">
		<buginformation>
			<summary>@RooSolrSearchable causes infinite loop when applied to an entity</summary>
			<description>Running the "solr all" command, e.g. as follows:






project --topLevelPackage com.roo2924




jpa setup --database HYPERSONIC_IN_MEMORY --provider HIBERNATE




entity jpa --class ~.domain.Thing




field string --fieldName name




solr setup




solr all






... causes this error:






Exception in thread "Spring Roo JLine Shell" java.lang.StackOverflowError




	at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:447)




	at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:544)




	at java.lang.StringCoding$StringEncoder.encode(StringCoding.java:240)




	at java.lang.StringCoding.encode(StringCoding.java:272)




	at java.lang.String.getBytes(String.java:946)




	at java.io.UnixFileSystem.getBooleanAttributes0(Native Method)




	at java.io.UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:228)




	at java.io.File.exists(File.java:733)




	at org.springframework.roo.process.manager.internal.DefaultFileManager.exists(DefaultFileManager.java:69)




	at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:314)




	at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:150)




	at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:84)




	at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:220)




	at org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.getMemberDetails(MemberDetailsScannerImpl.java:139)




	at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.getMemberDetails(AbstractItdMetadataProvider.java:495)




	at org.springframework.roo.addon.solr.SolrMetadataProvider.getMetadata(SolrMetadataProvider.java:83)




	at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:324)




	at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:150)




	at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:84)




	at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:220)




	at org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.getMemberDetails(MemberDetailsScannerImpl.java:139)




	at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.getMemberDetails(AbstractItdMetadataProvider.java:495)




	at org.springframework.roo.addon.jpa.entity.JpaEntityMetadataProviderImpl.getMetadata(JpaEntityMetadataProviderImpl.java:191)




	at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:324)




	at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:150)




	at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:200)





</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RC1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadataProvider.java</file>
		</fixedFiles>
	</bug>
	<bug id="2935" opendate="2011-11-26 10:31:12" fixdate="2011-11-26 16:04:24" resolution="Complete">
		<buginformation>
			<summary>Resource Not Found single entity jpa</summary>
			<description>Built simple single, 2 string field entity with JPA &amp;amp; no active record. Built application, getting Resource Not Found when navigating to the create entity page.
See Attached Script: buildme.roo
See Attached Log Results: logresults.txt</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2930" opendate="2011-11-24 03:14:47" fixdate="2011-11-26 19:34:48" resolution="Complete">
		<buginformation>
			<summary>"web mvc setup" adds reference to non existing menu.jspx</summary>
			<description>When command "web mvc setup" executed the "WEB-INF/layouts/layouts.xml" file is created with a reference to a non existing file "/WEB-INF/views/menu.jspx".</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2929" opendate="2011-11-23 21:02:02" fixdate="2011-11-26 19:56:50" resolution="Complete">
		<buginformation>
			<summary>Unexpected capitalization of instance variable causes compiler error for Entity Types that start with multiple capital letters</summary>
			<description>For entity types whose name begins with more than one capital letter, code that does not compile is being generated.
For example, in SWOTWeaknessController_Roo_Controller.aj, the following code was generated for the DELETE method:
  @RequestMapping(value = "/
{id}", method = RequestMethod.DELETE)
    public String SWOTWeaknessController.delete(@PathVariable("id") Long id, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        SWOTWeakness SWOTWeakness = SWOTWeakness.findSWOTWeakness(id);   &amp;lt;=== THIS LINE HAS ERROR due to SWOTWeakness instance variable
        SWOTWeakness.remove();

The problem is that the instance variable "SWOTWeakness" has the same name as the class "SWOTWeakness", which results in the error:
[ERROR] error at SWOTWeakness SWOTWeakness = SWOTWeakness.findSWOTWeakness(id);
[ERROR] ^^^
[ERROR] D:\LYNIADEclipseWorkspace\LYNHP019\src\main\java\com\lyniad\web\SWOTWeaknessController_Roo_Controller.aj:93:0::0
 The local variable SWOTWeakness may not have been initialized

The problem does not occur for classes that follow the more conventional naming of beginning with a single capital letter. For example, the same code for a class for an entity type named "Tactic" is fine:

  @RequestMapping(value = "/{id}
", method = RequestMethod.DELETE)
    public String TacticController.delete(@PathVariable("id") Long id, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        Tactic tactic = Tactic.findTactic(id);    &amp;lt;=== This line is fine
        tactic.remove();
Suggested fix: The code which determines the upper/lower case of the instance variable needs to ensure that the resulting instance variable name is different from the class name
The workaround is to simply rename the entity, in the above case to "SwotWeakness", although that change must be propagated to object models, documentation, code that references the entity type, etc.  So the workaround is a chore, but doable.
</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.model.JavaSymbolName.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">3023</link>
		</links>
	</bug>
	<bug id="2940" opendate="2011-11-29 01:59:21" fixdate="2011-11-29 15:25:58" resolution="Complete">
		<buginformation>
			<summary>jsf managed bean generation fails (using 2 many-to-many fields)</summary>
			<description>When running the attached script which generates 1 object which holds 2 sets referencing (many_to_many) a second object, it fails to generate some method/variable names correctly in the xxxBean_Roo_ManagedBean.aj file.
E.g. xxx.getStreets() instead of xxx.getFirstStreetSet() 
also xxx.selectedFirstStreetSet and xxx.selectedSecondStreetSet vars get referenced by 2 "selectedStreets" references
note: I couldn&amp;amp;apos;t issue "entity jsf" commands via STS due to another bug, it worked from the command line though</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.jsf.managedbean.JsfManagedBeanMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2932" opendate="2011-11-24 05:05:27" fixdate="2011-12-02 14:35:21" resolution="Complete">
		<buginformation>
			<summary>Id cannot be resolved or is not a field</summary>
			<description>[ERROR] Failed to execute goal org.codehaus.mojo:aspectj-maven-plugin:1.2:compile (default) on project test: Compiler errors :
[ERROR] error at Entity attached = Entity.findEntity(this.id);
[ERROR] 
[ERROR] /tmp/test/src/main/java/org/gvnix/test/domain/Entity_Roo_Jpa_ActiveRecord.aj:29:0::0 id cannot be resolved or is not a field
[ERROR] error at private java.lang.Long Entity.id;
[ERROR] 
[ERROR] /tmp/test/src/main/java/org/gvnix/test/domain/Entity_Roo_Jpa_Entity.aj:20:0::0 can&amp;amp;apos;t make inter-type field declarations on annotation types.
[ERROR] error at private java.lang.Integer Entity.version;
[ERROR] ^^
[ERROR] /tmp/test/src/main/java/org/gvnix/test/domain/Entity_Roo_Jpa_Entity.aj:24:0::0 can&amp;amp;apos;t make inter-type field declarations on annotation types.
[ERROR] error at public java.lang.Long Entity.getId() {
[ERROR] ^^
[ERROR] /tmp/test/src/main/java/org/gvnix/test/domain/Entity_Roo_Jpa_Entity.aj:26:0::0 can&amp;amp;apos;t make inter-type method declarations on annotation types.
[ERROR] error at public void Entity.setId(java.lang.Long id) {
[ERROR] ^^^^^^^^^^^^^^^^^^^
[ERROR] /tmp/test/src/main/java/org/gvnix/test/domain/Entity_Roo_Jpa_Entity.aj:30:0::0 can&amp;amp;apos;t make inter-type method declarations on annotation types.
[ERROR] error at public java.lang.Integer Entity.getVersion() {
[ERROR] ^^^^^^^
[ERROR] /tmp/test/src/main/java/org/gvnix/test/domain/Entity_Roo_Jpa_Entity.aj:34:0::0 can&amp;amp;apos;t make inter-type method declarations on annotation types.
[ERROR] error at public void Entity.setVersion(java.lang.Integer version) {
[ERROR] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ERROR] /tmp/test/src/main/java/org/gvnix/test/domain/Entity_Roo_Jpa_Entity.aj:38:0::0 can&amp;amp;apos;t make inter-type method declarations on annotation types.
[ERROR] -&amp;gt; [Help 1]</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.details.AnnotationMetadataUtils.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdTypeDetailsProvidingMetadataItem.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserUtils.java</file>
			<file type="M">org.springframework.roo.model.JavaType.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
			<file type="M">org.springframework.roo.model.ImportRegistrationResolverImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.model.JdkJavaType.java</file>
			<file type="M">org.springframework.roo.classpath.details.DefaultItdTypeDetailsTest.java</file>
		</fixedFiles>
	</bug>
	<bug id="2941" opendate="2011-11-29 16:00:09" fixdate="2011-12-02 18:21:35" resolution="Complete">
		<buginformation>
			<summary>web mvc scaffold disallowedOperations create does not remove all create tags</summary>
			<description>When creating our mvc scaffold we include the "--disallowedOperations delete, create" option.  This successfully removed the create link from the default project page. We instead have finders in the menu.  After selecting a finder and searching our objects, a JspTagException is given as the tag&amp;amp;apos;menu_item_xxx_new_label&amp;amp;apos; does not exist.  We added this tag to applications.properties which then allowed us to receive a page back from the finder.  The object list does not include the delete operation, but after the object list, a create operation still exists.  I&amp;amp;apos;m having difficulty finding exactly where this tag is built and placed in the page, but without the create operation it should not exist.</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="2947" opendate="2011-12-04 10:30:32" fixdate="2011-12-04 20:44:04" resolution="Complete">
		<buginformation>
			<summary>Roo Integration Test generation fails - Data on demand issue with 2 attributes of same type</summary>
			<description>Failure to generate an Integration test for an entity object that has 2 attributes of same custom data type in my example CurrencyAmount is defined with @Embeddable with 2 fields amount and currency, I get the following errors when I try to do anything on my entity, it fails to add any new field or generate Integration tests for this entity
~.domain.ccti.CreditTransferTxnInfo roo&amp;gt; test integration
Created SRC_TEST_JAVA\com\acps\app\payments\core\domain\cc ti\CreditTransferTxnInfoDataOnDemand.java
Created SRC_TEST_JAVA\com\acps\app\payments\core\domain\cc ti\CreditTransferTxnInfoIntegrationTest.java
Undo create SRC_TEST_JAVA\com\acps\app\payments\core\domain\cc ti\CreditTransferTxnInfoIntegrationTest.java
Undo create SRC_TEST_JAVA\com\acps\app\payments\core\domain\cc ti\CreditTransferTxnInfoDataOnDemand.java
java.lang.IllegalArgumentException: Method &amp;amp;apos;setAmount&amp;amp;apos; already defined in ITD (ITD target &amp;amp;apos;com.acps.app.payments.core.domain.ccti.CreditTran sferTxnInfoDataOnDemand_Roo_DataOnDemand&amp;amp;apos;
~.domain.ccti.CreditTransferTxnInfo roo&amp;gt;
My Class CreditTransferTxnInfo is listed here 
import com.acps.app.payments.core.domain.embed.CurrencyAmount;
@RooJavaBean
@RooToString
@RooJpaEntity
public class CreditTransferTxnInfo {
@Size(max = 35)
private String instructionId;
@Size(max = 35)
private String endToEndId;
@Embedded
private PaymentTypeInfo paymentTypeInfo;
@Embedded
@AttributeOverrides( {
@AttributeOverride(name="amount", column = @Column(name="instructedAmount") ),
@AttributeOverride(name="currencyCode", column = @Column(name="instructedAmount_currency") )
} )
private CurrencyAmount instructedAmount;
@Embedded
@AttributeOverrides( 
{
@AttributeOverride(name="amount", column = @Column(name="equivalentAmount") ),
@AttributeOverride(name="currencyCode", column = @Column(name="equivalentAmount_currency") )
} )
private CurrencyAmount equivalentAmount;

}

Here is the Definition of CurrencyAmount.java that defines amount and CurrencyCode
@RooJavaBean
@RooToString
@Embeddable
public class CurrencyAmount {
private BigDecimal amount;
@Size(max = 3)
private String currencyCode;
}
Does Roo not support Generating DataOnDemand when there are different properties of same Type? </description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadata.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">3091</link>
		</links>
	</bug>
	<bug id="2931" opendate="2011-11-24 04:10:10" fixdate="2011-12-06 14:43:40" resolution="Complete">
		<buginformation>
			<summary>GWT compilation errors when proxies or requests are in non-default package</summary>
			<description>I&amp;amp;apos;m having some problems getting GWT working properly - I am using the latest 1.2.0.RC1, downloaded this morning.
I am trying to create a simple GWT version of the pizza shop sample, executing the following commands:






// Spring Roo 1.2.0.RC1 [rev dcaa483] log opened at 2011-11-24 09:50:14




project --topLevelPackage com.springsource.roo.pizzashopRC1




persistence setup --provider HIBERNATE --database HYPERSONIC_PERSISTENT




entity jpa --class ~.domain.Topping --testAutomatically




field string --fieldName name --notNull --sizeMin 2




entity jpa --class ~.domain.Base --testAutomatically




field string --fieldName name --notNull --sizeMin 2




entity jpa --class ~.domain.Pizza --testAutomatically




field string --fieldName name --notNull --sizeMin 2




field number --fieldName price --type java.lang.Float




field set --fieldName toppings --type ~.domain.Topping




field reference --fieldName base --type ~.domain.Base




entity jpa --class ~.domain.PizzaOrder --testAutomatically




field string --fieldName name --notNull --sizeMin 2




field string --fieldName address --sizeMax 30




field number --fieldName total --type java.lang.Float




field date --fieldName deliveryDate --type java.util.Date




field set --fieldName pizzas --type ~.domain.Pizza




// script pizzaEntities.roo




web gwt setup




web gwt all --proxyPackage ~.gwt.proxy --requestPackage ~.gwt.request




perform eclipse






So far, so good. But when I import the project into Eclipse, I get the following build error:






The project &amp;amp;apos;pizzashoprc1&amp;amp;apos; does not have any GWT SDKs on its build path






I can fix this by manually adding the GWT SDKs into the build path (I&amp;amp;apos;m using GWT 2.4). However, when I try to start the app from Eclipse, using the Run As &amp;gt; Web Application, I get the error:






Could not find any host pages in project pizzashoprc1.






I can launch the app from the command line using mvn gwt:run, but then I get the following error when I go to the URL in a browser:






onModuleLoad() threw an exception









Exception while loading module com.springsource.roo.pizzashoprc1.client.scaffold.Scaffold. See Development Mode for details.




java.lang.reflect.InvocationTargetException at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)




 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)




 at java.lang.reflect.Method.invoke(Method.java:597)




 at com.google.gwt.dev.shell.ModuleSpace.onLoad(ModuleSpace.java:396)




 at com.google.gwt.dev.shell.OophmSessionHandler.loadModule(OophmSessionHandler.java:200)




 at com.google.gwt.dev.shell.BrowserChannelServer.processConnection(BrowserChannelServer.java:525)




 at com.google.gwt.dev.shell.BrowserChannelServer.run(BrowserChannelServer.java:363)




 at java.lang.Thread.run(Thread.java:619)




Caused by: java.lang.RuntimeException: Deferred binding failed for &amp;amp;apos;com.springsource.roo.pizzashoprc1.client.scaffold.ioc.DesktopInjector&amp;amp;apos; (did you forget to inherit a required module?)




 at com.google.gwt.dev.shell.GWTBridgeImpl.create(GWTBridgeImpl.java:53)




 at com.google.gwt.core.client.GWT.create(GWT.java:97)




 at com.springsource.roo.pizzashoprc1.client.scaffold.ioc.DesktopInjectorWrapper.getInjector(DesktopInjectorWrapper.java:8)




 at com.springsource.roo.pizzashoprc1.client.scaffold.Scaffold.onModuleLoad(Scaffold.java:16)




 ... 9 more 




Caused by: com.google.gwt.core.ext.UnableToCompleteException: (see previous log entries)




 at com.google.gwt.dev.shell.ModuleSpace.rebind(ModuleSpace.java:595)




 at com.google.gwt.dev.shell.ModuleSpace.rebindAndCreate(ModuleSpace.java:455)




 at com.google.gwt.dev.shell.GWTBridgeImpl.create(GWTBridgeImpl.java:49)




 ... 12 more






I&amp;amp;apos;ve also attached a screenshot of the error in the GWT Dev Mode console.</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2948" opendate="2011-12-05 00:04:40" fixdate="2011-12-06 16:25:18" resolution="Complete">
		<buginformation>
			<summary>repository jpa shell command hangs roo</summary>
			<description>roo&amp;gt; jpa setup --provider HIBERNATE --database MSSQL 
roo&amp;gt; database reverse engineer --schema roo_crm --activeRecord false --package ~.model
roo&amp;gt; repository jpa --interface ~.repository.CartOrder --entity ~.domain.CartOrder
DBRE works fine - all java and ITD files created correctly. 
repository jpa cmd prints nothing in output window - not even a roo&amp;gt; prompt, and no actions are taken.</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.shell.jline.JLineShell.java</file>
			<file type="M">org.springframework.roo.shell.AbstractShell.java</file>
		</fixedFiles>
	</bug>
	<bug id="2953" opendate="2011-12-06 18:42:45" fixdate="2011-12-06 22:26:53" resolution="Complete">
		<buginformation>
			<summary>Shell prompt does not show entity in focus after &amp;apos;entity jpa&amp;apos; command is run using a fully-qualified name such as com.foo.bar.Bar</summary>
			<description>When the &amp;amp;apos;entity jpa&amp;amp;apos; command is run, the Roo prompt does not have the name of the entity in focus if it was created using 






entity jpa --class com.foo.bar.Bar






Output is as follows:






roo&amp;gt; entity jpa --class com.foo.bar.Bar




Created SRC_MAIN_JAVA/com/foo/bar




8832648 Created SRC_MAIN_JAVA/com/foo/bar/Bar.java




12a9c80 Created SRC_MAIN_JAVA/com/foo/bar/Bar_Roo_Configurable.aj




7ef5378 Created SRC_MAIN_JAVA/com/foo/bar/Bar_Roo_Jpa_ActiveRecord.aj




74c1860 Created SRC_MAIN_JAVA/com/foo/bar/Bar_Roo_ToString.aj




7bcd4a1 Created SRC_MAIN_JAVA/com/foo/bar/Bar_Roo_Jpa_Entity.aj




roo&amp;gt; 






However if the command is run using a tilde, the correct output is shown:






roo&amp;gt; entity jpa --class ~.Foo




5b5e723 Created SRC_MAIN_JAVA/com/foo/bar/Foo.java




9bc166a Created SRC_MAIN_JAVA/com/foo/bar/Foo_Roo_Configurable.aj




2320419 Created SRC_MAIN_JAVA/com/foo/bar/Foo_Roo_Jpa_ActiveRecord.aj




bc732bd Created SRC_MAIN_JAVA/com/foo/bar/Foo_Roo_ToString.aj




8f19a9d Created SRC_MAIN_JAVA/com/foo/bar/Foo_Roo_Jpa_Entity.aj




~.Foo roo&amp;gt; 





</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.converters.JavaTypeConverter.java</file>
		</fixedFiles>
	</bug>
	<bug id="2925" opendate="2011-11-23 03:08:22" fixdate="2011-12-07 17:39:43" resolution="Complete">
		<buginformation>
			<summary>GWT Request interface not updated when invoked service is deleted</summary>
			<description>To replicate:

Create a GWT project in which the service layer delegates to active record methods:






project --topLevelPackage com.example.gwtbug




jpa setup --database HYPERSONIC_IN_MEMORY --provider HIBERNATE




entity jpa --class ~.server.domain.Thing




field string --fieldName name




service --interface ~.services.ThingService --entity ~.server.domain.Thing




web gwt setup




web gwt all --proxyPackage ~.client.proxy --requestPackage ~.client.request






Exit the Roo shell
Delete ThingService.java and ThingServiceImpl.java
Restart the Roo shell; some GWT-related artifacts are updated to reflect the deletion of the ThingService, but the Roo-managed ThingRequest interface still contains its class name and method signatures:






package com.example.gwtbug.client.request;









import com.example.gwtbug.client.proxy.ThingProxy;




import com.google.web.bindery.requestfactory.shared.InstanceRequest;




import com.google.web.bindery.requestfactory.shared.Request;




import com.google.web.bindery.requestfactory.shared.RequestContext;




import com.google.web.bindery.requestfactory.shared.ServiceName;




import org.springframework.roo.addon.gwt.RooGwtRequest;









@RooGwtRequest(value = "com.example.gwtbug.server.domain.Thing", exclude = { "clear", "entityManager", "equals", "flush", "hashCode", "merge", "toString" })




@ServiceName(value = "com.example.gwtbug.services.ThingService", locator = "com.example.gwtbug.server.locator.GwtServiceLocator")




public interface ThingRequest extends RequestContext {









    abstract Request&amp;lt;java.lang.Long&amp;gt; countAllThings();









    abstract Request&amp;lt;java.lang.Void&amp;gt; deleteThing(ThingProxy thing);









    abstract Request&amp;lt;com.example.gwtbug.client.proxy.ThingProxy&amp;gt; findThing(Long id);









    abstract Request&amp;lt;java.util.List&amp;lt;com.example.gwtbug.client.proxy.ThingProxy&amp;gt;&amp;gt; findAllThings();









    abstract Request&amp;lt;java.util.List&amp;lt;com.example.gwtbug.client.proxy.ThingProxy&amp;gt;&amp;gt; findThingEntries(int firstResult, int maxResults);









    abstract Request&amp;lt;java.lang.Void&amp;gt; saveThing(ThingProxy thing);









    abstract Request&amp;lt;com.example.gwtbug.client.proxy.ThingProxy&amp;gt; updateThing(ThingProxy thing);




}






The most obvious symptom is that the following Roo-managed Java files no longer compile (because they have been correctly updated with the expected Request method names):
	
ThingActivitiesMapper_Roo_Gwt.java
ThingDetailsActivity_Roo_Gwt.java
ThingListActivity_Roo_Gwt.java



</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.layers.MemberTypeAdditions.java</file>
			<file type="M">org.springframework.roo.classpath.layers.MemberTypeAdditionsTest.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.RepositoryMongoLayerMethod.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaLayerMethod.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.RepositoryMongoLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.RooGwtRequest.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeService.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryLayerMethodTest.java</file>
			<file type="M">org.springframework.roo.addon.jpa.activerecord.EntityLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtTypeServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.activerecord.EntityLayerMethod.java</file>
			<file type="M">org.springframework.roo.addon.jpa.activerecord.EntityLayerMethodTest.java</file>
		</fixedFiles>
	</bug>
	<bug id="2954" opendate="2011-12-07 20:31:10" fixdate="2011-12-07 20:43:10" resolution="Complete">
		<buginformation>
			<summary>Ansi chars should not display in STS Roo shell</summary>
			<description></description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.support.util.AnsiEscapeCodeTest.java</file>
			<file type="M">org.springframework.roo.support.util.AnsiEscapeCode.java</file>
			<file type="M">org.springframework.roo.shell.jline.JLineLogHandler.java</file>
		</fixedFiles>
	</bug>
	<bug id="2844" opendate="2011-10-19 17:11:56" fixdate="2011-12-08 17:54:15" resolution="Complete">
		<buginformation>
			<summary>MVC controller and views not updated when related entity&amp;apos;s plural changes</summary>
			<description>Found this bug while working on ROO-2839; it&amp;amp;apos;s similar to ROO-2840. To replicate:

Run the vote.roo script.
Edit Choice.java to include the class-level annotation @RooPlural("Options")

Roo updates the Choice-related files:






Updated SRC_TEST_JAVA/com/springsource/vote/domain/ChoiceIntegrationTest_Roo_IntegrationTest.aj




Updated SRC_MAIN_JAVA/com/springsource/vote/web/ChoiceController_Roo_Controller.aj




Updated SRC_MAIN_JAVA/com/springsource/vote/domain/Choice_Roo_Jpa_ActiveRecord.aj




Updated SRC_MAIN_WEBAPP/WEB-INF/views/choices/list.jspx






... but not the Vote-related files, until the shell is restarted:






Updated SRC_MAIN_JAVA/com/springsource/vote/web/VoteController_Roo_Controller.aj




Updated SRC_MAIN_WEBAPP/WEB-INF/views/votes/create.jspx




Updated SRC_MAIN_WEBAPP/WEB-INF/views/votes/update.jspx






Likewise, the same three files are skipped when the annotation is removed.</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.plural.PluralMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2869" opendate="2011-11-03 07:25:24" fixdate="2011-12-11 18:39:49" resolution="Complete">
		<buginformation>
			<summary>Path-dependent unit tests fail on Windows</summary>
			<description>





  &amp;lt;testcase time="0" classname="org.springframework.roo.support.util.FileUtilsTest" name="testGetFirstDirectoryOfExistingDirectory"/&amp;gt;




  &amp;lt;testcase time="0.007" classname="org.springframework.roo.support.util.FileUtilsTest" name="testGetFirstDirectoryOfExistingFile"&amp;gt;




    &amp;lt;error message="String index out of range: -1" type="java.lang.StringIndexOutOfBoundsException"&amp;gt;java.lang.StringIndexOutOfBoundsException: String index out of range: -1




	at java.lang.String.substring(String.java:1937)




	at org.springframework.roo.support.util.FileUtils.backOneDirectory(FileUtils.java:163)




	at org.springframework.roo.support.util.FileUtils.getFirstDirectory(FileUtils.java:151)




	at org.springframework.roo.support.util.FileUtilsTest.assertFirstDirectory(FileUtilsTest.java:194)




	at org.springframework.roo.support.util.FileUtilsTest.testGetFirstDirectoryOfExistingFile(FileUtilsTest.java:214)




	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)




	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)




	at java.lang.reflect.Method.invoke(Method.java:597)




	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)




	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)




	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)




	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)




	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)




	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:69)




	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:48)




	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)




	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)




	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)




	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)




	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)




	at org.junit.runners.ParentRunner.run(ParentRunner.java:292)




	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)




	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:119)




	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:101)




	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)




	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)




	at java.lang.reflect.Method.invoke(Method.java:597)




	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)




	at $Proxy0.invoke(Unknown Source)




	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)




	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)




	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)




    &amp;lt;/error&amp;gt;




  &amp;lt;/testcase&amp;gt;




  &amp;lt;testcase time="0.001" classname="org.springframework.roo.support.util.FileUtilsTest" name="testBackOneDirectory"&amp;gt;




    &amp;lt;error message="String index out of range: -1" type="java.lang.StringIndexOutOfBoundsException"&amp;gt;java.lang.StringIndexOutOfBoundsException: String index out of range: -1




	at java.lang.String.substring(String.java:1937)




	at org.springframework.roo.support.util.FileUtils.backOneDirectory(FileUtils.java:163)




	at org.springframework.roo.support.util.FileUtilsTest.testBackOneDirectory(FileUtilsTest.java:219)




	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)




	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)




	at java.lang.reflect.Method.invoke(Method.java:597)




	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)




	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)




	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)




	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)




	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)




	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:69)




	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:48)




	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)




	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)




	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)




	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)




	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)




	at org.junit.runners.ParentRunner.run(ParentRunner.java:292)




	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)




	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:119)




	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:101)




	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)




	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)




	at java.lang.reflect.Method.invoke(Method.java:597)




	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)




	at $Proxy0.invoke(Unknown Source)




	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)




	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)




	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)




    &amp;lt;/error&amp;gt;




  &amp;lt;/testcase&amp;gt;




&amp;lt;/testsuite&amp;gt;





</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.support.util.FileUtilsTest.java</file>
			<file type="M">org.springframework.roo.project.PomManagementServiceImplTest.java</file>
			<file type="M">org.springframework.roo.support.util.FileUtils.java</file>
			<file type="M">org.springframework.roo.project.MavenPathResolvingStrategyTest.java</file>
			<file type="M">org.springframework.roo.project.PomManagementServiceImpl.java</file>
			<file type="M">org.springframework.roo.metadata.DefaultMetadataService.java</file>
			<file type="M">org.springframework.roo.project.maven.PomTest.java</file>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.creator.CreatorOperationsImpl.java</file>
			<file type="M">org.springframework.roo.classpath.operations.AbstractOperations.java</file>
		</fixedFiles>
	</bug>
	<bug id="2957" opendate="2011-12-08 21:18:47" fixdate="2011-12-11 19:52:47" resolution="Complete">
		<buginformation>
			<summary>validationMessageCode is erroneously added to boolean attributes in jspx files</summary>
			<description>When a scaffold is generated for a JPA entity with a Boolean field, a validationMessageCode attribute is erroneously added to the jspx file:






 &amp;lt;field:checkbox field="emailAllowed"




	id="c_com_kn_core_domain_KnEmailSource_emailAllowed"




	validationMessageCode="field_invalid_email"




	z="wTN+Jq4iS1yreKGSzQx31kMngEI=" /&amp;gt;






... which generates an error when the page is loaded.
According to the TLD, the validationMessageCode attribute is invalid for the checkbox tag.</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
		</fixedFiles>
	</bug>
	<bug id="2965" opendate="2011-12-12 19:20:14" fixdate="2011-12-12 19:22:14" resolution="Complete">
		<buginformation>
			<summary>JSON responses have Content-Type "application/text" instead of "application/json"</summary>
			<description>According to section 6 of RFC 4627, the correct MIME media type for JSON responses is "application/json", however the JSON-generating methods created by Roo set the HTTP "Content-Type" header to "application/text".</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2966" opendate="2011-12-12 21:47:35" fixdate="2011-12-12 21:52:12" resolution="Complete">
		<buginformation>
			<summary>NPE when "populateXxxx" method exists in controller</summary>
			<description>To replicate:

Run the embedded vote.roo script (or generate any application where an entity has a "reference" field).
Push in VoteController.populateChoices() (or any other "populateXxxx" method).
The shell displays this error (full stack trace only visible in development mode):






java.lang.NullPointerException




   at org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.&amp;lt;init&amp;gt;(WebScaffoldMetadata.java:169)




   at org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadataProviderImpl.getMetadata(WebScaffoldMetadataProviderImpl.java:147)




   at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:324)




   at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:150)




   at org.springframework.roo.metadata.DefaultMetadataService.evictAndGet(DefaultMetadataService.java:285)




   at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:158)




   at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:240)




   at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:214)




   at org.springframework.roo.classpath.DefaultPhysicalTypeMetadataProvider.onFileEvent(DefaultPhysicalTypeMetadataProvider.java:97)




   at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:350)




   at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:323)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:181)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.backgroundPoll(DefaultProcessManager.java:128)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager.timerBasedPoll(DefaultProcessManager.java:243)




   at org.springframework.roo.process.manager.internal.DefaultProcessManager$2.run(DefaultProcessManager.java:71)




   at java.lang.Thread.run(Thread.java:680)







</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2967" opendate="2011-12-13 01:52:53" fixdate="2011-12-13 01:54:56" resolution="Complete">
		<buginformation>
			<summary>WebScaffoldMetadata copies from wrong method&amp;apos;s builder when generating "populateXxx" methods</summary>
			<description>Found this while refactoring in preparation for ROO-2514. WebScaffoldMetadata#getPopulateMethods() contains this code:






if (javaTypePersistenceMd != null &amp;amp;&amp;amp; javaTypePersistenceMd.getFindAllMethod() != null) {




    bodyBuilder.appendFormalLine("return " + javaTypePersistenceMd.getFindAllMethod().getMethodCall() + ";");




    javaTypePersistenceMd.getFindMethod().copyAdditionsTo(builder, governorTypeDetails); // !!!




}






On the line marked "!!!", copyAdditionsTo is invoked on the MemberTypeAdditions of the "find" method instead of the "findAll" method. This could cause the generated "populateXxx" method not to compile if:

there was no "find" method (unlikely)
the "find" method was provided by a different layer component (service, repository, active record, etc.) to the "find all" method (more likely, but still pretty unlikely)

</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2969" opendate="2011-12-13 18:13:15" fixdate="2011-12-13 18:21:06" resolution="Complete">
		<buginformation>
			<summary>Some Roo annotations are retained at runtime</summary>
			<description>I found while testing Spring 3.1 for ROO-2894 that the following Roo annotations have the default retention, i.e. java.lang.annotation.RetentionPolicy.RUNTIME:

RooGwtLocator
RooJpaEntity
RooWebFinder
RooWebJson

Obviously this violates the core Roo design goal of the user project having no runtime dependencies upon Roo itself.</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.finder.RooWebFinder.java</file>
			<file type="M">org.springframework.roo.addon.jpa.entity.RooJpaEntity.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.RooWebJson.java</file>
			<file type="M">org.springframework.roo.addon.gwt.RooGwtLocator.java</file>
		</fixedFiles>
	</bug>
	<bug id="2972" opendate="2011-12-14 03:34:23" fixdate="2011-12-14 03:41:29" resolution="Complete">
		<buginformation>
			<summary>NPE when creating class in src/test/java default package</summary>
			<description>Creating a simple class with no annotations at all in the default package of a project such as petclinic causes a NullPointerException in JavaParserTypeResolutionService#getPackage when attempting to evaluate compilationUnit.getPackage().
</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeResolutionService.java</file>
		</fixedFiles>
	</bug>
	<bug id="2974" opendate="2011-12-14 19:40:54" fixdate="2011-12-14 19:58:31" resolution="Complete">
		<buginformation>
			<summary>JSON-accepting controller methods are handling non-JSON requests</summary>
			<description>Create a simple project with JSON support as follows:






project --topLevelPackage com.json




jpa setup --database HYPERSONIC_IN_MEMORY --provider HIBERNATE 




entity jpa --class ~.domain.Thing




field string name




json all




web mvc setup




web mvc all --package ~.web




web mvc json all






Then start Jetty or Tomcat. Clicking on the "List all Things" link returns the JSON response "[]" (meaning an empty list of Things) instead of the HTML page saying "No Thing found.", with the navigation pane, header, footer, etc.</description>
			<version>1.2.0.M1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadata.java</file>
		</fixedFiles>
	</bug>
	<bug id="2975" opendate="2011-12-14 21:33:10" fixdate="2011-12-15 00:19:05" resolution="Complete">
		<buginformation>
			<summary>"web flow" command does not add required message codes to application.properties</summary>
			<description>
Create a project without Spring Web Flow (e.g. run vote.roo)
Run the "web flow" shell command; note that the shell does not update the application.properties message bundle:






roo&amp;gt; web flow 




Created SRC_MAIN_WEBAPP/WEB-INF/spring/webflow-config.xml




Created SRC_MAIN_WEBAPP/WEB-INF/views/sampleflow




Created SRC_MAIN_WEBAPP/WEB-INF/views/sampleflow/flow.xml




Created SRC_MAIN_WEBAPP/WEB-INF/views/sampleflow/view-state-1.jspx




Created SRC_MAIN_WEBAPP/WEB-INF/views/sampleflow/view-state-2.jspx




Created SRC_MAIN_WEBAPP/WEB-INF/views/sampleflow/end-state.jspx




Created SRC_MAIN_WEBAPP/WEB-INF/views/sampleflow/views.xml




Updated SRC_MAIN_WEBAPP/WEB-INF/spring/webmvc-config.xml




Updated SRC_MAIN_WEBAPP/WEB-INF/views/sampleflow/flow.xml




Updated SRC_MAIN_WEBAPP/WEB-INF/views/menu.jspx




Updated ROOT/pom.xml [added dependency org.springframework.webflow:spring-webflow:2.2.1.RELEASE]




Updated SRC_MAIN_WEBAPP/WEB-INF/spring/webflow-config.xml






Run the application and go to http://localhost/vote
The home page fails to load, with this error in the server log:






No message found under code &amp;amp;apos;menu_category_flows_label&amp;amp;apos; for locale &amp;amp;apos;en&amp;amp;apos;.







If you add this code to application.properties and restart the application, another message code is reported as missing:






No message found under code &amp;amp;apos;menu_item_sampleflow_label&amp;amp;apos; for locale &amp;amp;apos;en&amp;amp;apos;.






And if you fix that, you get:






No message found under code &amp;amp;apos;Sampleflow&amp;amp;apos; for locale &amp;amp;apos;en&amp;amp;apos;.





</description>
			<version>1.2.0.RC1</version>
			<fixedVersion>1.2.0.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.web.flow.WebFlowOperationsImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2978" opendate="2011-12-15 18:57:03" fixdate="2011-12-18 19:29:34" resolution="Complete">
		<buginformation>
			<summary>Cyclic dependency in multi-module project when business module focussed after web scaffold</summary>
			<description>
Run this script:






project --topLevelPackage com.sample




module create --topLevelPackage ~.core --moduleName my




jpa setup --database H2_IN_MEMORY --provider HIBERNATE




entity jpa --class ~.Book




field string --fieldName title




module focus --moduleName ~




module create --topLevelPackage ~.web --moduleName web




web mvc setup




web mvc scaffold --backingType my|~.Book --class web|~.BookController




module focus --moduleName my






Roo incorrectly makes the "my" module depend on the "web" module:






...




Updated my|ROOT/pom.xml [added dependency com.sample.web:web:0.1.0.BUILD-SNAPSHOT]




...






You can confirm this is invalid by running "mvn validate":






[INFO] Scanning for projects...




[ERROR] The projects in the reactor contain a cyclic reference: Edge between &amp;amp;apos;Vertex{label=&amp;amp;apos;com.sample.web:web:0.1.0.BUILD-SNAPSHOT&amp;amp;apos;}&amp;amp;apos; and &amp;amp;apos;Vertex{label=&amp;amp;apos;com.sample.core:my:0.1.0.BUILD-SNAPSHOT&amp;amp;apos;}&amp;amp;apos; introduces to cycle in the graph com.sample.core:my:0.1.0.BUILD-SNAPSHOT --&amp;gt; com.sample.web:web:0.1.0.BUILD-SNAPSHOT --&amp;gt; com.sample.core:my:0.1.0.BUILD-SNAPSHOT -&amp;gt; [Help 1]




[ERROR] 




[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.




[ERROR] Re-run Maven using the -X switch to enable full debug logging.




[ERROR] 




[ERROR] For more information about the errors and possible solutions, please read the following articles:




[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectCycleException







The workaround is to edit the "my" module&amp;amp;apos;s POM and delete the dependency on the "web" module&amp;amp;apos;s WAR file.
The bug doesn&amp;amp;apos;t occur if you remove the final "module focus" command from the above script (running it separately via the shell doesn&amp;amp;apos;t add the dependency, oddly).
The impact of this is that scripts need to issue all necessary commands to the non-web modules (e.g. creating entities, services, and repositories) before creating any web modules.</description>
			<version>1.2.0.RELEASE</version>
			<fixedVersion>1.2.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="M">org.springframework.roo.project.Dependency.java</file>
			<file type="M">org.springframework.roo.project.maven.Pom.java</file>
			<file type="M">org.springframework.roo.project.maven.PomTest.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.DependencyTest.java</file>
		</fixedFiles>
	</bug>
	<bug id="2702" opendate="2011-09-04 19:57:52" fixdate="2012-01-19 19:32:04" resolution="Complete">
		<buginformation>
			<summary>DoD not updating on changes to related DoD</summary>
			<description>If an entity, the owning entity, has a relationship with another entity, the owned entity) when the owned entity&amp;amp;apos;s DoD is updated or comes into existence sometimes the owning entity&amp;amp;apos;s DoD needs to be updated. This is currently not happening in all circumstances and requires a shell restart for the owning entity&amp;amp;apos;s DoD to be updated to reflect the change or creation of the owned entity&amp;amp;apos;s DoD.</description>
			<version>1.1.5.RELEASE</version>
			<fixedVersion>1.2.1.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">3054</link>
		</links>
	</bug>
	<bug id="3049" opendate="2012-02-03 01:49:09" fixdate="2012-02-03 13:14:12" resolution="Duplicate">
		<buginformation>
			<summary>roo + gwt + --activeRecord false</summary>
			<description>I&amp;amp;apos;m unable to compile a roo gwt project when using jpa repository instead of active record.
It looks like the generated source code contains some ActiveRecord specific methods that don&amp;amp;apos;t exist when 
using "--activeRecord false" creating jpa entities (read: using jpa repository):
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;lt;
@RooGwtRequest("it.rootest.domain.Geeno")
@ServiceName(value = "it.rootest.repository.GeenoRepository", locator ="it.rootest.server.locator.GwtServiceLocator")
public interface GeenoRequest extends RequestContext {
    abstract Request&amp;lt;java.lang.Long&amp;gt; count();
    abstract Request&amp;lt;java.util.List&amp;lt;it.rootest.gwt.proxy.GeenoProxy&amp;gt;&amp;gt; findAll();
    abstract Request&amp;lt;java.util.List&amp;lt;it.rootest.gwt.proxy.GeenoProxy&amp;gt;&amp;gt; findEntries(int firstResult, int maxResults);
    abstract Request&amp;lt;it.rootest.gwt.proxy.GeenoProxy&amp;gt; find(String id);
    abstract Request&amp;lt;java.lang.Void&amp;gt; save(GeenoProxy proxy);
    abstract Request&amp;lt;java.lang.Void&amp;gt; delete(GeenoProxy proxy);    
}
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;
findEntries() method does not exist if you don&amp;amp;apos;t use ActiveRecord. 
save() method should be declared according to JpaRepository signature:
    abstract Request&amp;lt;it.rootest.gwt.proxy.GeenoProxy&amp;gt; save(GeenoProxy proxy);
and so on.
Moreover &amp;lt;MYMODEL&amp;gt;_EditActivityWrapper_Roo_Gwt.java refer to methods like find&amp;lt;MYMODEL&amp;gt;Entries()
which don&amp;amp;apos;t exists when you&amp;amp;apos;re not using ActiveRecord.
I guess GWT + JpaRepository interaction is broken or I&amp;amp;apos;m missing something.
</description>
			<version>1.2.0.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManager.java</file>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2903</link>
		</links>
	</bug>
	<bug id="3054" opendate="2012-02-09 01:26:13" fixdate="2012-02-09 02:13:50" resolution="Duplicate">
		<buginformation>
			<summary>Roo fails to create DataOnDemand metadata</summary>
			<description>Roo throws:
roo&amp;gt; java.lang.IllegalStateException: java.lang.IllegalStateException: java.lang.IllegalArgumentException: Invalid dependency between upstream &amp;amp;apos;MID:org.springframework.roo.addon.dod.DataOnDemandMetadata#SRC_TEST_JAVA?org.internna.ossmoney.model.security.UserDetailsDataOnDemand&amp;amp;apos; and downstream &amp;amp;apos;MID:org.springframework.roo.addon.dod.DataOnDemandMetadata#SRC_TEST_JAVA?org.internna.ossmoney.model.budget.BudgetDataOnDemand&amp;amp;apos;
I&amp;amp;apos;m attaching the involved files though they won&amp;amp;apos;t compile due to other dependencies, of course. I&amp;amp;apos;ll commit everything to Google Code once it reaches a stable state (in a day or two)</description>
			<version>1.2.0.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2702</link>
		</links>
	</bug>
	<bug id="3111" opendate="2012-04-03 03:00:53" fixdate="2012-04-03 04:48:01" resolution="Complete">
		<buginformation>
			<summary>NPE (NullPOinterException) while starting Roo</summary>
			<description>While starting Roo shell, typing hint in roo prompt throws NullPointerException (after waiting for long time). Subsequent commands do not show any error. 
Exception
=============
Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.
roo&amp;gt; hint
ERROR: Bundle org.springframework.roo.process.manager [54] EventDispatcher: Error during dispatch.(java.lang.NullPointerException)
java.lang.NullPointerException
at org.springframework.roo.process.manager.internal.DefaultProcessManager.logException(DefaultProcessManager.java:264)
at org.springframework.roo.process.manager.internal.DefaultProcessManager.completeStartup(DefaultProcessManager.java:146)
at org.springframework.roo.process.manager.internal.DefaultProcessManager.access$100(DefaultProcessManager.java:35)
at org.springframework.roo.process.manager.internal.DefaultProcessManager$1.frameworkEvent(DefaultProcessManager.java:68)
at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListenerCallback(EventDispatcher.java :774)
at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:725)
at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:949)
at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)
at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)
at java.lang.Thread.run(Thread.java:722)
Welcome to Roo! We hope you enjoy your stay!
............
............
roo&amp;gt; hint
Welcome to Roo! We hope you enjoy your stay!
...........
...........
roo&amp;gt;</description>
			<version>1.2.1.RELEASE</version>
			<fixedVersion>1.2.2.RELEASE</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultProcessManager.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.java</file>
			<file type="M">org.springframework.roo.felix.pgp.PgpServiceImpl.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">3138</link>
			<link type="Relate" description="is related to">3193</link>
		</links>
	</bug>
	<bug id="3133" opendate="2012-04-18 05:43:41" fixdate="2012-04-18 15:42:44" resolution="Duplicate">
		<buginformation>
			<summary>last page of list not shown in gwt scaffold</summary>
			<description>as soon as one creates more entries than shown in an entity&amp;amp;apos;s view pagination should give the opportunity to go back and forward. As I noticed the entries of the last page will never be shown as soon as you switched back after inserting the last one.
here is how you can view the behaviour:
// Spring Roo 1.2.1.RELEASE [rev 6eae723] log opened at 2012-04-18 14:29:50
project --topLevelPackage foo.bar
jpa setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY
entity jpa --class ~.domain.Entry --testAutomatically
field string name
service --interface ~.service.EntryService --entity ~.domain.Entry
repository jpa --interface ~.repository.EntryRepository --entity ~.domain.Entry
web mvc setup
security setup
web gwt setup
web gwt all --proxyPackage ~.client.proxy --requestPackage ~.client.request
mvn gwt:run
now insert more than 8 entries, use pagination back and forward
</description>
			<version>1.2.1.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.gwt.GwtOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtFileManager.java</file>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadata.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtUtils.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2903</link>
		</links>
	</bug>
	<bug id="3138" opendate="2012-04-22 09:32:31" fixdate="2012-04-22 15:29:57" resolution="Duplicate">
		<buginformation>
			<summary>npe on roo shell startup </summary>
			<description>Welcome to Spring Roo. For assistance press TAB or type "hint" then hit ENTER.
@jbbarquero: Good job @gdickens @RooInAction MEAP is complete! Great job @KRrimp
le, Srini Penchikala. Learn @SpringRoo @ManningBooks http://t.co/8eVszZSr
roo&amp;gt; ERROR: Bundle org.springframework.roo.process.manager [54] EventDispatcher:
 Error during dispatch. (java.lang.NullPointerException)
java.lang.NullPointerException
        at org.springframework.roo.process.manager.internal.DefaultProcessManage
r.logException(DefaultProcessManager.java:264)
        at org.springframework.roo.process.manager.internal.DefaultProcessManage
r.completeStartup(DefaultProcessManager.java:146)
        at org.springframework.roo.process.manager.internal.DefaultProcessManage
r.access$100(DefaultProcessManager.java:35)
        at org.springframework.roo.process.manager.internal.DefaultProcessManage
r$1.frameworkEvent(DefaultProcessManager.java:68)
        at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListen
erCallback(EventDispatcher.java:774)
        at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(
EventDispatcher.java:725)
        at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.j
ava:949)
        at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispa
tcher.java:54)
        at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher
.java:106)
        at java.lang.Thread.run(Unknown Source)
roo&amp;gt; version
    ____  ____  ____
   / __ \/ __ \/ __ \
  / /_/ / / / / / / /
 / , _/ // / /_/ /
// ||___/___/    1.2.1.RELEASE [rev 6eae723]
BTW,
is there a command that dumps all aspects of the roo environment, e.g., jdk version, classpath, chipset, etc.?  I looked for one in the docs but id not see one. (and maybe I did not look hard enough) </description>
			<version>1.2.1.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultProcessManager.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.java</file>
			<file type="M">org.springframework.roo.felix.pgp.PgpServiceImpl.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">3111</link>
			<link type="Relate" description="is related to">3193</link>
		</links>
	</bug>
	<bug id="266" opendate="2009-10-05 16:17:48" fixdate="2012-05-28 22:39:19" resolution="Complete">
		<buginformation>
			<summary>Create constructors</summary>
			<description>Roo generates setters for entities, but only a default constructor.  Constructors are a perfectly normal way to initialise a Java class, especially when setting mandatory fields since there is no guarantee that setters are ever invoked.  Maybe provide a switch to specify whether mandatory (@NotNull) fields are to be passed via setters or via a constructor.</description>
			<version>1.0.0.RC2</version>
			<fixedVersion>1.2.3.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperations.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperationsImpl.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">1223</link>
		</links>
	</bug>
	<bug id="3281" opendate="2012-09-18 09:51:43" fixdate="2012-09-21 15:47:33" resolution="Duplicate">
		<buginformation>
			<summary>Reverse engineering a database table with version column name when is not a @Version</summary>
			<description>Execute a reverse engineering in a database table with a column named "version".
Generated property is annotated with @Version, when this column there is not a concurrency control column.
Entity update will modify automatically this value when could store important info.
Also application can crash if version column has no numeric type (varchar in example).
Related task ROO-3254 closed before solution patch created.
I attach a diff patch with a solution:

Create new command option "disableVersionFields"
By default work as before (false by default)
If true, don&amp;amp;apos;t generate a "@Version" property (in Entity.aj) when "version" column name found
Generate "version" property as any other field (in DbManaged.aj and entity *.jspx)

</description>
			<version>1.2.2.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.jpa.entity.JpaEntityAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.jpa.entity.JpaEntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreCommands.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Table.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseContentHandler.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperations.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">3283</link>
		</links>
	</bug>
	<bug id="3315" opendate="2012-11-27 15:10:53" fixdate="2012-11-27 17:57:55" resolution="Duplicate">
		<buginformation>
			<summary>Roo cannot handle a multi-catch try-catch block.</summary>
			<description>As described in ROO-3314 Roo simply cannot handle a multi-catch try-catch block.
Add the following code (using JDK 1.7) in any class to reproduce:
		try
{
			if(true) throw(new InstantiationException());
			throw(new IllegalAccessException());
		}
 catch(InstantiationException | IllegalAccessException e)
		{	
		}
Add the following code for the second similar error I mentioned:
		new ArrayList&amp;lt;&amp;gt;();
</description>
			<version>1.2.2.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserTypeResolutionService.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserUtils.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.details.JavaParserFieldMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserFieldMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.details.JavaParserConstructorMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeResolutionService.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.details.JavaParserClassOrInterfaceTypeDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserTypeParsingService.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">3106</link>
		</links>
	</bug>
	<bug id="994" opendate="2010-06-13 22:19:27" fixdate="2013-01-22 20:38:35" resolution="Complete">
		<buginformation>
			<summary>Add an --implements keyword to the class command</summary>
			<description>Currently the class command supports --extends which can extend a class.  To add to developer productivity, can you add an --implements parameter, so if you are creating interface-driven Spring Beans, you can automate the creation of both the interface and the implementing class?</description>
			<version>1.1.2.RELEASE</version>
			<fixedVersion>1.2.4.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaCommands.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoCommands.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceCommands.java</file>
			<file type="M">org.springframework.roo.classpath.converters.JavaTypeConverter.java</file>
			<file type="M">org.springframework.roo.classpath.converters.JavaPackageConverter.java</file>
			<file type="M">org.springframework.roo.classpath.converters.JavaTypeConverterTest.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderCommands.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonCommands.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.finder.WebFinderCommands.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperations.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandCommands.java</file>
			<file type="M">org.springframework.roo.classpath.PhysicalTypeCategory.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.email.MailCommands.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrCommands.java</file>
			<file type="M">org.springframework.roo.addon.json.JsonCommands.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathCommands.java</file>
			<file type="M">org.springframework.roo.addon.equals.EqualsCommands.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.ControllerCommands.java</file>
			<file type="M">org.springframework.roo.classpath.operations.ClasspathOperations.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.GwtCommands.java</file>
			<file type="M">org.springframework.roo.addon.creator.CreatorCommands.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaCommands.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestCommands.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfCommands.java</file>
			<file type="M">org.springframework.roo.addon.jms.JmsCommands.java</file>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.op4j.Op4jCommands.java</file>
		</fixedFiles>
		<links>
			<link type="Depend" description="is depended on by">3343</link>
			<link type="Duplicate" description="is duplicated by">2191</link>
		</links>
	</bug>
	<bug id="3106" opendate="2012-03-27 04:28:44" fixdate="2013-06-07 21:50:24" resolution="Complete">
		<buginformation>
			<summary>Spring Roo doesn&amp;apos;t support new Java 7 language features</summary>
			<description>Java 7 new language features do not work in Roo. The following has been tested:

Underscore Between Literals






public static final int TEST = 1_000_000;






Roo error: Encountered " &amp;lt;IDENTIFIER&amp;gt; "_000_000 "" at line 18, column 41.


Diamond Syntax:






List&amp;lt;String&amp;gt; list = new ArrayList&amp;lt;&amp;gt;();






Roo error: Encountered " "&amp;lt;" "&amp;lt; "" at line 23, column 42.


Try with Resources






try (FileInputStream in = new FileInputStream("readme.txt")) 




{          




    System.out.println(in.read());




}...






Roo error: Encountered " "}" "} "" at line 19, column 9.

Japa (Java Parser used in Roo) is obsolete project that supports 1.5
Either japa should be modified or new java parser selected for future releases.
</description>
			<version>1.2.1.RELEASE</version>
			<fixedVersion>1.2.4.RELEASE</fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserTypeResolutionService.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserUtils.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.details.JavaParserFieldMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.details.JavaParserFieldMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.details.JavaParserConstructorMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeResolutionService.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.details.JavaParserClassOrInterfaceTypeDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserTypeParsingService.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">3314</link>
			<link type="Duplicate" description="is duplicated by">3315</link>
		</links>
	</bug>
	<bug id="546" opendate="2010-01-20 06:36:30" fixdate="2013-12-13 18:17:31" resolution="Complete">
		<buginformation>
			<summary>Comments on field types specified with &amp;apos;--comment&amp;apos; are not utilizied</summary>
			<description>When adding comments on fields, the "--comment" attribute is accepted but not used. From the help command, e.g. "help field string", it makes it sound like it should be inserting the comment into the javadoc above the field declaration in the entity class. However, nothing is being placed there nor in the aspect j files.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.2.4.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.jsr303.FieldDetails.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.details.JavaParserFieldMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.UpdateCompilationUnitUtils.java</file>
			<file type="M">org.springframework.roo.classpath.details.comments.CommentStructure.java</file>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
			<file type="M">org.springframework.roo.classpath.details.FieldMetadataBuilder.java</file>
		</fixedFiles>
		<links>
			<link type="Depends" description="depends on">635</link>
			<link type="Duplicate" description="is duplicated by">3358</link>
			<link type="Related" description="is related to">635</link>
		</links>
	</bug>
	<bug id="3358" opendate="2013-02-21 10:58:57" fixdate="2013-12-13 18:18:29" resolution="Duplicate">
		<buginformation>
			<summary>Javadoc</summary>
			<description>The ROO generated methods and attributes should have Javadoc, once it&amp;amp;apos;s not recommended to developer change the ROO files.</description>
			<version>1.0.0.RELEASE</version>
			<fixedVersion>1.2.4.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.operations.jsr303.FieldDetails.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.details.JavaParserFieldMetadataBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.UpdateCompilationUnitUtils.java</file>
			<file type="M">org.springframework.roo.classpath.details.comments.CommentStructure.java</file>
			<file type="M">org.springframework.roo.classpath.operations.FieldCommands.java</file>
			<file type="M">org.springframework.roo.classpath.details.FieldMetadataBuilder.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">546</link>
		</links>
	</bug>
	<bug id="3283" opendate="2012-09-19 04:18:48" fixdate="2013-12-27 20:26:25" resolution="Complete">
		<buginformation>
			<summary>Reverse engineer disable versions and generated identifiers</summary>
			<description>Problem: When "database reverse engineer" the application may not work because there are some behaviors we can&amp;amp;apos;t control:

With all persistence providers, identifier generator fails because sequence not exists in database.
A table with a column named "version" is configured as concurrency control property when is not (even not numeric).

Solution: Create "database reverse engineer" command new options to control this behaviors:

disableVersionFields (optional, default false): If true, don&amp;amp;apos;t add concurrency control feature to version field and generate field as other fields. All entities will have versionField="" attribute in RooJpaActiveRecord annotation.
disableGeneratedIdentifiers (optional, default false): If true, don&amp;amp;apos;t add generated value feature to identifier field and add field into create view (required and i18n). All entities will have sequenceName="" attribute in RooJpaActiveRecord annotation. This modification allows to disable generated identifiers into direct engineer setting versionField="" attribute in RooJpaActiveRecord annotation too.

I attach a patch with this solution diffs.
This solution has been tested.
See ROO-3281, ROO-3254 and ROO-3255, ROO-2596</description>
			<version>1.2.2.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.dbre.model.Database.java</file>
			<file type="M">org.springframework.roo.addon.jpa.entity.JpaEntityAnnotationValues.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadata.java</file>
			<file type="M">org.springframework.roo.addon.jpa.entity.JpaEntityMetadata.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseXmlUtils.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreCommands.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.Table.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.dbre.model.DatabaseContentHandler.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperations.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreOperationsImpl.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">3281</link>
		</links>
	</bug>
	<bug id="3518" opendate="2014-07-20 15:47:47" fixdate="2014-07-23 04:41:42" resolution="Duplicate">
		<buginformation>
			<summary>Java 8 syntax cause roo to stop working</summary>
			<description>Please check at the attached file. Syntax from exchangeMultipleRates cause roo to fail with following error code:






line 50:46 mismatched input &amp;amp;apos;:&amp;amp;apos; expecting {&amp;amp;apos;.&amp;amp;apos;, &amp;amp;apos;*&amp;amp;apos;, &amp;amp;apos;,&amp;amp;apos;, &amp;amp;apos;[&amp;amp;apos;, &amp;amp;apos;(&amp;amp;apos;, &amp;amp;apos;)&amp;amp;apos;, &amp;amp;apos;=&amp;amp;apos;, &amp;amp;apos;?&amp;amp;apos;, &amp;amp;apos;++&amp;amp;apos;, &amp;amp;apos;--&amp;amp;apos;, &amp;amp;apos;/&amp;amp;apos;, &amp;amp;apos;%&amp;amp;apos;, &amp;amp;apos;+&amp;amp;apos;, &amp;amp;apos;-&amp;amp;apos;, &amp;amp;apos;==&amp;amp;apos;, &amp;amp;apos;!=&amp;amp;apos;, &amp;amp;apos;&amp;amp;&amp;amp;apos;, &amp;amp;apos;^&amp;amp;apos;, &amp;amp;apos;|&amp;amp;apos;, &amp;amp;apos;&amp;amp;&amp;amp;&amp;amp;apos;, &amp;amp;apos;||&amp;amp;apos;, &amp;amp;apos;^=&amp;amp;apos;, &amp;amp;apos;+=&amp;amp;apos;, &amp;amp;apos;-=&amp;amp;apos;, &amp;amp;apos;*=&amp;amp;apos;, &amp;amp;apos;/=&amp;amp;apos;, &amp;amp;apos;&amp;amp;=&amp;amp;apos;, &amp;amp;apos;|=&amp;amp;apos;, &amp;amp;apos;%=&amp;amp;apos;, &amp;amp;apos;&amp;gt;&amp;amp;apos;, &amp;amp;apos;&amp;lt;&amp;amp;apos;, &amp;amp;apos;instanceof&amp;amp;apos;}




Unknown or unhandled primary context






TODO

I will check if newer roo versions are affected. 1.2.5.RELEASE is affected

</description>
			<version>1.2.4.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.ApplicationContextOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.packaging.AbstractPackagingProvider.java</file>
			<file type="M">org.springframework.roo.project.packaging.JarPackaging.java</file>
			<file type="M">org.springframework.roo.felix.FelixDelegator.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
			<file type="M">org.springframework.roo.shell.osgi.SimpleParserComponent.java</file>
			<file type="M">org.springframework.roo.project.MavenCommands.java</file>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspCommands.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.shell.osgi.converters.FileConverterComponent.java</file>
			<file type="M">org.springframework.roo.shell.jline.osgi.JLineShellComponent.java</file>
			<file type="M">org.springframework.roo.project.PathResolvingAwareFilenameResolver.java</file>
			<file type="M">org.springframework.roo.project.ProjectPathMonitoringInitializer.java</file>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.Plugin.java</file>
			<file type="M">org.springframework.roo.project.MavenPathResolvingStrategy.java</file>
			<file type="M">org.springframework.roo.project.maven.PomFactoryImpl.java</file>
			<file type="M">org.springframework.roo.project.DelegatePathResolver.java</file>
			<file type="M">org.springframework.roo.project.maven.Pom.java</file>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="M">org.springframework.roo.project.MavenOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.DefaultPathResolvingStrategy.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultFileManager.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultProcessManager.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerCommands.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.ProcessManagerDiagnosticsListener.java</file>
			<file type="M">org.springframework.roo.metadata.AbstractHashCodeTrackingMetadataNotifier.java</file>
			<file type="M">org.springframework.roo.metadata.DefaultMetadataService.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractMemberDiscoveringItdMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.operations.AbstractOperations.java</file>
			<file type="M">org.springframework.roo.classpath.DefaultPhysicalTypeMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.persistence.PersistenceMemberLocatorImpl.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.java</file>
			<file type="M">org.springframework.roo.classpath.ItdDiscoveryServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeResolutionService.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserTypeResolutionService.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.details.JavaParserClassOrInterfaceTypeDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.GermanLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.DuchLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.ItalianLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.I18nConverter.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.EnglishLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.menu.MenuOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.I18nComponent.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.SpanishLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.SwedishLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.FinanceEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.VideoStreamEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.DocumentEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.MicrobloggingEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.MapEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.VideoEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.WaveEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.PhotoEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.finder.WebFinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.tostring.ToStringMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.tailor.service.DefaultConfigurationLocator.java</file>
			<file type="M">org.springframework.roo.addon.tailor.service.DefaultActionLocator.java</file>
			<file type="M">org.springframework.roo.addon.tailor.DefaultTailorImpl.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrJspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrWebSearchMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.serializable.SerializableMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.security.PermissionEvaluatorMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.property.editor.EditorMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.plural.PluralMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.op4j.Op4jMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceClassMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.RepositoryMongoMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoEntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.json.JsonMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.jsf.converter.JsfConverterMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.application.JsfApplicationBeanMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.managedbean.JsfManagedBeanMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.activerecord.JpaActiveRecordMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.entity.JpaEntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.GaeOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.identifier.IdentifierMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.DatabaseDotComOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataNotificationListener.java</file>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.GwtScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.proxy.GwtProxyMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.locator.GwtLocatorMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.git.GitShellEventListener.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.equals.EqualsMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.configurable.ConfigurableMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.uaa.UaaShellStatusListener.java</file>
			<file type="M">org.springframework.roo.uaa.ShellListeningUaaRegistrationFacility.java</file>
			<file type="M">org.springframework.roo.uaa.UaaRelatedComponentRegistrationHelper.java</file>
			<file type="M">org.springframework.roo.startlevel.Activator.java</file>
			<file type="M">org.springframework.roo.felix.HttpPgpUrlStreamHandlerServiceImpl.java</file>
			<file type="M">org.springframework.roo.felix.JdkDelegatingLogListener.java</file>
			<file type="M">org.springframework.roo.bootstrap.Main.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">3505</link>
			<link type="Relate" description="is related to">3489</link>
		</links>
	</bug>
	<bug id="3489" opendate="2014-03-21 15:15:11" fixdate="2014-11-10 00:12:05" resolution="Duplicate">
		<buginformation>
			<summary>Potential issue with java 8 and Felix</summary>
			<description>There is a potential issue between java 8 and Felix/Roo 1.2.5
Can someone please confirm that?</description>
			<version>1.2.5.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.ApplicationContextOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.packaging.AbstractPackagingProvider.java</file>
			<file type="M">org.springframework.roo.project.packaging.JarPackaging.java</file>
			<file type="M">org.springframework.roo.felix.FelixDelegator.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
			<file type="M">org.springframework.roo.shell.osgi.SimpleParserComponent.java</file>
			<file type="M">org.springframework.roo.project.MavenCommands.java</file>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspCommands.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.shell.osgi.converters.FileConverterComponent.java</file>
			<file type="M">org.springframework.roo.shell.jline.osgi.JLineShellComponent.java</file>
			<file type="M">org.springframework.roo.project.PathResolvingAwareFilenameResolver.java</file>
			<file type="M">org.springframework.roo.project.ProjectPathMonitoringInitializer.java</file>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.Plugin.java</file>
			<file type="M">org.springframework.roo.project.MavenPathResolvingStrategy.java</file>
			<file type="M">org.springframework.roo.project.maven.PomFactoryImpl.java</file>
			<file type="M">org.springframework.roo.project.DelegatePathResolver.java</file>
			<file type="M">org.springframework.roo.project.maven.Pom.java</file>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="M">org.springframework.roo.project.MavenOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.DefaultPathResolvingStrategy.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultFileManager.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultProcessManager.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerCommands.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.ProcessManagerDiagnosticsListener.java</file>
			<file type="M">org.springframework.roo.metadata.AbstractHashCodeTrackingMetadataNotifier.java</file>
			<file type="M">org.springframework.roo.metadata.DefaultMetadataService.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractMemberDiscoveringItdMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.operations.AbstractOperations.java</file>
			<file type="M">org.springframework.roo.classpath.DefaultPhysicalTypeMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.persistence.PersistenceMemberLocatorImpl.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.java</file>
			<file type="M">org.springframework.roo.classpath.ItdDiscoveryServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeResolutionService.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserTypeResolutionService.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.details.JavaParserClassOrInterfaceTypeDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.GermanLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.DuchLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.ItalianLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.I18nConverter.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.EnglishLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.menu.MenuOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.I18nComponent.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.SpanishLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.SwedishLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.FinanceEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.VideoStreamEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.DocumentEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.MicrobloggingEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.MapEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.VideoEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.WaveEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.PhotoEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.finder.WebFinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.tostring.ToStringMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.tailor.service.DefaultConfigurationLocator.java</file>
			<file type="M">org.springframework.roo.addon.tailor.service.DefaultActionLocator.java</file>
			<file type="M">org.springframework.roo.addon.tailor.DefaultTailorImpl.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrJspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrWebSearchMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.serializable.SerializableMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.security.PermissionEvaluatorMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.property.editor.EditorMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.plural.PluralMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.op4j.Op4jMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceClassMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.RepositoryMongoMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoEntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.json.JsonMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.jsf.converter.JsfConverterMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.application.JsfApplicationBeanMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.managedbean.JsfManagedBeanMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.activerecord.JpaActiveRecordMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.entity.JpaEntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.GaeOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.identifier.IdentifierMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.DatabaseDotComOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataNotificationListener.java</file>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.GwtScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.proxy.GwtProxyMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.locator.GwtLocatorMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.git.GitShellEventListener.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.equals.EqualsMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.configurable.ConfigurableMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.uaa.UaaShellStatusListener.java</file>
			<file type="M">org.springframework.roo.uaa.ShellListeningUaaRegistrationFacility.java</file>
			<file type="M">org.springframework.roo.uaa.UaaRelatedComponentRegistrationHelper.java</file>
			<file type="M">org.springframework.roo.startlevel.Activator.java</file>
			<file type="M">org.springframework.roo.felix.HttpPgpUrlStreamHandlerServiceImpl.java</file>
			<file type="M">org.springframework.roo.felix.JdkDelegatingLogListener.java</file>
			<file type="M">org.springframework.roo.bootstrap.Main.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">3505</link>
			<link type="Relate" description="relates to">3518</link>
		</links>
	</bug>
	<bug id="3496" opendate="2014-04-10 19:39:41" fixdate="2014-11-10 00:16:02" resolution="Duplicate">
		<buginformation>
			<summary>Spring Roo command line does not start on Java 8</summary>
			<description>Steps to repro:
1. Install latest Mac OS X 10.9.2 + Oracle Java 8 + Maven 3.2.1
2. Download and unzip Roo 1.2.5.RELEASE to some folder
3. Create a new directory for a new project and cd into it;
4. try to call roo.sh from unzipped location.
Expected: Roo command line will appear
Actual: 






ERROR: Bundle com.github.antlrjavaparser.antlr-java-parser [3] Error starting file:/Users/artem/apps/roo125/bundle/antlr-java-parser-1.0.14.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle com.github.antlrjavaparser.antlr-java-parser [3]: Unable to resolve 3.0: missing requirement [3.0] package; (package=org.antlr.v4.runtime) [caused by: Unable to resolve 74.0: missing requirement [74.0] package; (package=javax.imageio)])




org.osgi.framework.BundleException: Unresolved constraint in bundle com.github.antlrjavaparser.antlr-java-parser [3]: Unable to resolve 3.0: missing requirement [3.0] package; (package=org.antlr.v4.runtime) [caused by: Unable to resolve 74.0: missing requirement [74.0] package; (package=javax.imageio)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.backup [18] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.backup-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.backup [18]: Unable to resolve 18.0: missing requirement [18.0] package; (&amp;amp;(package=org.springframework.roo.process.manager)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.backup [18]: Unable to resolve 18.0: missing requirement [18.0] package; (&amp;amp;(package=org.springframework.roo.process.manager)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.configurable [19] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.configurable-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.configurable [19]: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.configurable [19]: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.creator [20] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.creator-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.creator [20]: Unable to resolve 20.0: missing requirement [20.0] package; (&amp;amp;(package=org.springframework.roo.model)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 61.0: missing requirement [61.0] package; (package=javax.annotation)])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.creator [20]: Unable to resolve 20.0: missing requirement [20.0] package; (&amp;amp;(package=org.springframework.roo.model)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 61.0: missing requirement [61.0] package; (package=javax.annotation)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.dbre [21] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.dbre-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.dbre [21]: Unable to resolve 21.0: missing requirement [21.0] package; (package=javax.naming))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.dbre [21]: Unable to resolve 21.0: missing requirement [21.0] package; (package=javax.naming)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.dod [22] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.dod-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.dod [22]: Unable to resolve 22.0: missing requirement [22.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.dod [22]: Unable to resolve 22.0: missing requirement [22.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.email [23] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.email-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.email [23]: Unable to resolve 23.0: missing requirement [23.0] package; (&amp;amp;(package=org.springframework.roo.addon.propfiles)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 40.0: missing requirement [40.0] package; (&amp;amp;(package=org.springframework.roo.process.manager)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.email [23]: Unable to resolve 23.0: missing requirement [23.0] package; (&amp;amp;(package=org.springframework.roo.addon.propfiles)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 40.0: missing requirement [40.0] package; (&amp;amp;(package=org.springframework.roo.process.manager)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.equals [24] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.equals-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.equals [24]: Unable to resolve 24.0: missing requirement [24.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.equals [24]: Unable to resolve 24.0: missing requirement [24.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.finder [25] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.finder-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.finder [25]: Unable to resolve 25.0: missing requirement [25.0] package; (&amp;amp;(package=org.springframework.roo.addon.jpa.activerecord)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 30.0: missing requirement [30.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.finder [25]: Unable to resolve 25.0: missing requirement [25.0] package; (&amp;amp;(package=org.springframework.roo.addon.jpa.activerecord)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 30.0: missing requirement [30.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.gwt [26] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.gwt-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.gwt [26]: Unable to resolve 26.0: missing requirement [26.0] package; (package=javax.xml.parsers))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.gwt [26]: Unable to resolve 26.0: missing requirement [26.0] package; (package=javax.xml.parsers)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.javabean [27] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.javabean-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.javabean [27]: Unable to resolve 27.0: missing requirement [27.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.javabean [27]: Unable to resolve 27.0: missing requirement [27.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.jdbc [28] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.jdbc-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.jdbc [28]: Unable to resolve 28.0: missing requirement [28.0] package; (&amp;amp;(package=org.springframework.roo.support.api)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.jdbc [28]: Unable to resolve 28.0: missing requirement [28.0] package; (&amp;amp;(package=org.springframework.roo.support.api)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.jms [29] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.jms-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.jms [29]: Unable to resolve 29.0: missing requirement [29.0] package; (&amp;amp;(package=org.springframework.roo.addon.propfiles)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 40.0: missing requirement [40.0] package; (&amp;amp;(package=org.springframework.roo.process.manager)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.jms [29]: Unable to resolve 29.0: missing requirement [29.0] package; (&amp;amp;(package=org.springframework.roo.addon.propfiles)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 40.0: missing requirement [40.0] package; (&amp;amp;(package=org.springframework.roo.process.manager)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.jpa [30] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.jpa-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.jpa [30]: Unable to resolve 30.0: missing requirement [30.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.jpa [30]: Unable to resolve 30.0: missing requirement [30.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.jsf [31] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.jsf-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.jsf [31]: Unable to resolve 31.0: missing requirement [31.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.jsf [31]: Unable to resolve 31.0: missing requirement [31.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.json [32] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.json-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.json [32]: Unable to resolve 32.0: missing requirement [32.0] package; (&amp;amp;(package=org.springframework.roo.addon.plural)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 38.0: missing requirement [38.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.json [32]: Unable to resolve 32.0: missing requirement [32.0] package; (&amp;amp;(package=org.springframework.roo.addon.plural)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 38.0: missing requirement [38.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.layers.repository.jpa [33] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.layers.repository.jpa-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.layers.repository.jpa [33]: Unable to resolve 33.0: missing requirement [33.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.layers.repository.jpa [33]: Unable to resolve 33.0: missing requirement [33.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.layers.repository.mongo [34] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.layers.repository.mongo-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.layers.repository.mongo [34]: Unable to resolve 34.0: missing requirement [34.0] package; (&amp;amp;(package=org.springframework.roo.addon.dod)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 22.0: missing requirement [22.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.layers.repository.mongo [34]: Unable to resolve 34.0: missing requirement [34.0] package; (&amp;amp;(package=org.springframework.roo.addon.dod)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 22.0: missing requirement [22.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.layers.service [35] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.layers.service-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.layers.service [35]: Unable to resolve 35.0: missing requirement [35.0] package; (package=javax.xml.parsers))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.layers.service [35]: Unable to resolve 35.0: missing requirement [35.0] package; (package=javax.xml.parsers)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.logging [36] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.logging-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.logging [36]: Unable to resolve 36.0: missing requirement [36.0] package; (&amp;amp;(package=org.springframework.roo.model)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 61.0: missing requirement [61.0] package; (package=javax.annotation)])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.logging [36]: Unable to resolve 36.0: missing requirement [36.0] package; (&amp;amp;(package=org.springframework.roo.model)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 61.0: missing requirement [61.0] package; (package=javax.annotation)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.oscommands [37] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.oscommands-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.oscommands [37]: Unable to resolve 37.0: missing requirement [37.0] package; (&amp;amp;(package=org.springframework.roo.process.manager)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.oscommands [37]: Unable to resolve 37.0: missing requirement [37.0] package; (&amp;amp;(package=org.springframework.roo.process.manager)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.plural [38] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.plural-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.plural [38]: Unable to resolve 38.0: missing requirement [38.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.plural [38]: Unable to resolve 38.0: missing requirement [38.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.property.editor [39] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.property.editor-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.property.editor [39]: Unable to resolve 39.0: missing requirement [39.0] package; (&amp;amp;(package=org.springframework.roo.addon.jpa.activerecord)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 30.0: missing requirement [30.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.property.editor [39]: Unable to resolve 39.0: missing requirement [39.0] package; (&amp;amp;(package=org.springframework.roo.addon.jpa.activerecord)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 30.0: missing requirement [30.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.propfiles [40] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.propfiles-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.propfiles [40]: Unable to resolve 40.0: missing requirement [40.0] package; (&amp;amp;(package=org.springframework.roo.process.manager)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.propfiles [40]: Unable to resolve 40.0: missing requirement [40.0] package; (&amp;amp;(package=org.springframework.roo.process.manager)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.roobot.client [41] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.roobot.client-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.roobot.client [41]: Unable to resolve 41.0: missing requirement [41.0] package; (package=javax.xml.parsers))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.roobot.client [41]: Unable to resolve 41.0: missing requirement [41.0] package; (package=javax.xml.parsers)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.security [42] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.security-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.security [42]: Unable to resolve 42.0: missing requirement [42.0] package; (&amp;amp;(package=org.springframework.roo.addon.web.mvc.jsp.tiles)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 51.0: missing requirement [51.0] package; (package=javax.xml.parsers)])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.security [42]: Unable to resolve 42.0: missing requirement [42.0] package; (&amp;amp;(package=org.springframework.roo.addon.web.mvc.jsp.tiles)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 51.0: missing requirement [51.0] package; (package=javax.xml.parsers)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.serializable [43] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.serializable-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.serializable [43]: Unable to resolve 43.0: missing requirement [43.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.serializable [43]: Unable to resolve 43.0: missing requirement [43.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.solr [44] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.solr-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.solr [44]: Unable to resolve 44.0: missing requirement [44.0] package; (package=javax.xml.parsers))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.solr [44]: Unable to resolve 44.0: missing requirement [44.0] package; (package=javax.xml.parsers)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.tailor [45] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.tailor-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.tailor [45]: Unable to resolve 45.0: missing requirement [45.0] package; (&amp;amp;(package=org.springframework.roo.process.manager)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.tailor [45]: Unable to resolve 45.0: missing requirement [45.0] package; (&amp;amp;(package=org.springframework.roo.process.manager)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.test [46] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.test-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.test [46]: Unable to resolve 46.0: missing requirement [46.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.test [46]: Unable to resolve 46.0: missing requirement [46.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.tostring [47] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.tostring-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.tostring [47]: Unable to resolve 47.0: missing requirement [47.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.tostring [47]: Unable to resolve 47.0: missing requirement [47.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.web.flow [48] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.web.flow-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.web.flow [48]: Unable to resolve 48.0: missing requirement [48.0] package; (&amp;amp;(package=org.springframework.roo.addon.web.mvc.controller)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 49.0: missing requirement [49.0] package; (&amp;amp;(package=org.springframework.roo.addon.finder)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 25.0: missing requirement [25.0] package; (&amp;amp;(package=org.springframework.roo.addon.jpa.activerecord)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 30.0: missing requirement [30.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.web.flow [48]: Unable to resolve 48.0: missing requirement [48.0] package; (&amp;amp;(package=org.springframework.roo.addon.web.mvc.controller)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 49.0: missing requirement [49.0] package; (&amp;amp;(package=org.springframework.roo.addon.finder)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 25.0: missing requirement [25.0] package; (&amp;amp;(package=org.springframework.roo.addon.jpa.activerecord)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 30.0: missing requirement [30.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.web.mvc.controller [49] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.web.mvc.controller-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.web.mvc.controller [49]: Unable to resolve 49.0: missing requirement [49.0] package; (&amp;amp;(package=org.springframework.roo.addon.finder)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 25.0: missing requirement [25.0] package; (&amp;amp;(package=org.springframework.roo.addon.jpa.activerecord)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 30.0: missing requirement [30.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.web.mvc.controller [49]: Unable to resolve 49.0: missing requirement [49.0] package; (&amp;amp;(package=org.springframework.roo.addon.finder)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 25.0: missing requirement [25.0] package; (&amp;amp;(package=org.springframework.roo.addon.jpa.activerecord)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 30.0: missing requirement [30.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.web.mvc.embedded [50] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.web.mvc.embedded-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.web.mvc.embedded [50]: Unable to resolve 50.0: missing requirement [50.0] package; (package=javax.xml.parsers))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.web.mvc.embedded [50]: Unable to resolve 50.0: missing requirement [50.0] package; (package=javax.xml.parsers)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.web.mvc.jsp [51] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.web.mvc.jsp-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.web.mvc.jsp [51]: Unable to resolve 51.0: missing requirement [51.0] package; (package=javax.xml.parsers))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.web.mvc.jsp [51]: Unable to resolve 51.0: missing requirement [51.0] package; (package=javax.xml.parsers)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.addon.web.selenium [52] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.addon.web.selenium-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.web.selenium [52]: Unable to resolve 52.0: missing requirement [52.0] package; (&amp;amp;(package=org.springframework.roo.addon.web.mvc.controller.details)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 49.0: missing requirement [49.0] package; (&amp;amp;(package=org.springframework.roo.addon.finder)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 25.0: missing requirement [25.0] package; (&amp;amp;(package=org.springframework.roo.addon.jpa.activerecord)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 30.0: missing requirement [30.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]]]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.addon.web.selenium [52]: Unable to resolve 52.0: missing requirement [52.0] package; (&amp;amp;(package=org.springframework.roo.addon.web.mvc.controller.details)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 49.0: missing requirement [49.0] package; (&amp;amp;(package=org.springframework.roo.addon.finder)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 25.0: missing requirement [25.0] package; (&amp;amp;(package=org.springframework.roo.addon.jpa.activerecord)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 30.0: missing requirement [30.0] package; (&amp;amp;(package=org.springframework.roo.addon.configurable)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 19.0: missing requirement [19.0] package; (&amp;amp;(package=org.springframework.roo.classpath)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]]]]]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.classpath [53] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.classpath-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.classpath [53]: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.classpath [53]: Unable to resolve 53.0: missing requirement [53.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.classpath.antlrjavaparser [54] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.classpath.antlrjavaparser-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.classpath.antlrjavaparser [54]: Unable to resolve 54.0: missing requirement [54.0] package; (&amp;amp;(package=com.github.antlrjavaparser)(version&amp;gt;=1.0.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 3.0: missing requirement [3.0] package; (package=org.antlr.v4.runtime) [caused by: Unable to resolve 74.0: missing requirement [74.0] package; (package=javax.imageio)]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.classpath.antlrjavaparser [54]: Unable to resolve 54.0: missing requirement [54.0] package; (&amp;amp;(package=com.github.antlrjavaparser)(version&amp;gt;=1.0.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 3.0: missing requirement [3.0] package; (package=org.antlr.v4.runtime) [caused by: Unable to resolve 74.0: missing requirement [74.0] package; (package=javax.imageio)]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.felix [55] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.felix-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.felix [55]: Unable to resolve 55.0: missing requirement [55.0] package; (&amp;amp;(package=org.bouncycastle.jce.provider)(version&amp;gt;=1.45.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 76.0: missing requirement [76.0] package; (package=javax.crypto)])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.felix [55]: Unable to resolve 55.0: missing requirement [55.0] package; (&amp;amp;(package=org.bouncycastle.jce.provider)(version&amp;gt;=1.45.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 76.0: missing requirement [76.0] package; (package=javax.crypto)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.file.monitor [56] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.file.monitor-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.file.monitor [56]: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.file.monitor [56]: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.file.monitor.polling [57] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.file.monitor.polling-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.file.monitor.polling [57]: Unable to resolve 57.0: missing requirement [57.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.file.monitor.polling [57]: Unable to resolve 57.0: missing requirement [57.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.file.monitor.polling.roo [58] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.file.monitor.polling.roo-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.file.monitor.polling.roo [58]: Unable to resolve 58.0: missing requirement [58.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor.event)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.file.monitor.polling.roo [58]: Unable to resolve 58.0: missing requirement [58.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor.event)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.file.undo [59] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.file.undo-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.file.undo [59]: Unable to resolve 59.0: missing requirement [59.0] package; (&amp;amp;(package=org.springframework.roo.support.logging)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.file.undo [59]: Unable to resolve 59.0: missing requirement [59.0] package; (&amp;amp;(package=org.springframework.roo.support.logging)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.model [61] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.model-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.model [61]: Unable to resolve 61.0: missing requirement [61.0] package; (package=javax.annotation))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.model [61]: Unable to resolve 61.0: missing requirement [61.0] package; (package=javax.annotation)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.process.manager [62] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.process.manager-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.process.manager [62]: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.process.manager [62]: Unable to resolve 62.0: missing requirement [62.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.project [63] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.project-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.project [63]: Unable to resolve 63.0: missing requirement [63.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.project [63]: Unable to resolve 63.0: missing requirement [63.0] package; (&amp;amp;(package=org.springframework.roo.file.monitor)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 56.0: missing requirement [56.0] package; (&amp;amp;(package=org.springframework.roo.support.util)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.shell [64] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.shell-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.shell [64]: Unable to resolve 64.0: missing requirement [64.0] package; (package=javax.xml.parsers))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.shell [64]: Unable to resolve 64.0: missing requirement [64.0] package; (package=javax.xml.parsers)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.shell.jline [65] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.shell.jline-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.shell.jline [65]: Unable to resolve 65.0: missing requirement [65.0] package; (&amp;amp;(package=org.springframework.roo.shell)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 64.0: missing requirement [64.0] package; (package=javax.xml.parsers)])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.shell.jline [65]: Unable to resolve 65.0: missing requirement [65.0] package; (&amp;amp;(package=org.springframework.roo.shell)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 64.0: missing requirement [64.0] package; (package=javax.xml.parsers)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.shell.jline.osgi [66] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.shell.jline.osgi-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.shell.jline.osgi [66]: Unable to resolve 66.0: missing requirement [66.0] package; (&amp;amp;(package=org.springframework.roo.shell)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 64.0: missing requirement [64.0] package; (package=javax.xml.parsers)])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.shell.jline.osgi [66]: Unable to resolve 66.0: missing requirement [66.0] package; (&amp;amp;(package=org.springframework.roo.shell)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 64.0: missing requirement [64.0] package; (package=javax.xml.parsers)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.shell.osgi [67] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.shell.osgi-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.shell.osgi [67]: Unable to resolve 67.0: missing requirement [67.0] package; (&amp;amp;(package=org.springframework.roo.shell)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 64.0: missing requirement [64.0] package; (package=javax.xml.parsers)])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.shell.osgi [67]: Unable to resolve 67.0: missing requirement [67.0] package; (&amp;amp;(package=org.springframework.roo.shell)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 64.0: missing requirement [64.0] package; (package=javax.xml.parsers)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.startlevel [68] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.startlevel-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.startlevel [68]: Unable to resolve 68.0: missing requirement [68.0] package; (package=javax.xml.parsers))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.startlevel [68]: Unable to resolve 68.0: missing requirement [68.0] package; (package=javax.xml.parsers)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.support [69] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.support-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.support [69]: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.support [69]: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.support.osgi [70] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.support.osgi-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.support.osgi [70]: Unable to resolve 70.0: missing requirement [70.0] package; (&amp;amp;(package=org.springframework.roo.support.ant)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.support.osgi [70]: Unable to resolve 70.0: missing requirement [70.0] package; (&amp;amp;(package=org.springframework.roo.support.ant)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 69.0: missing requirement [69.0] package; (package=javax.xml.namespace)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.uaa [71] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.uaa-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.uaa [71]: Unable to resolve 71.0: missing requirement [71.0] package; (&amp;amp;(package=org.springframework.roo.shell)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 64.0: missing requirement [64.0] package; (package=javax.xml.parsers)])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.uaa [71]: Unable to resolve 71.0: missing requirement [71.0] package; (&amp;amp;(package=org.springframework.roo.shell)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 64.0: missing requirement [64.0] package; (package=javax.xml.parsers)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.url.stream.jdk [73] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.url.stream.jdk-1.2.5.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.url.stream.jdk [73]: Unable to resolve 73.0: missing requirement [73.0] package; (&amp;amp;(package=org.springframework.roo.shell)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 64.0: missing requirement [64.0] package; (package=javax.xml.parsers)])




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.url.stream.jdk [73]: Unable to resolve 73.0: missing requirement [73.0] package; (&amp;amp;(package=org.springframework.roo.shell)(version&amp;gt;=1.2.0)(!(version&amp;gt;=2.0.0))) [caused by: Unable to resolve 64.0: missing requirement [64.0] package; (package=javax.xml.parsers)]




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.wrapping.antlr4-runtime [74] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.wrapping.antlr4-runtime-4.0.0002.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.wrapping.antlr4-runtime [74]: Unable to resolve 74.0: missing requirement [74.0] package; (package=javax.imageio))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.wrapping.antlr4-runtime [74]: Unable to resolve 74.0: missing requirement [74.0] package; (package=javax.imageio)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.roo.wrapping.bcprov-jdk15 [76] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.roo.wrapping.bcprov-jdk15-1.45.0.0010.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.wrapping.bcprov-jdk15 [76]: Unable to resolve 76.0: missing requirement [76.0] package; (package=javax.crypto))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.roo.wrapping.bcprov-jdk15 [76]: Unable to resolve 76.0: missing requirement [76.0] package; (package=javax.crypto)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)




ERROR: Bundle org.springframework.uaa.client [81] Error starting file:/Users/artem/apps/roo125/bundle/org.springframework.uaa.client-1.0.2.RELEASE.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.uaa.client [81]: Unable to resolve 81.0: missing requirement [81.0] package; (package=javax.xml.parsers))




org.osgi.framework.BundleException: Unresolved constraint in bundle org.springframework.uaa.client [81]: Unable to resolve 81.0: missing requirement [81.0] package; (package=javax.xml.parsers)




	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3564)




	at org.apache.felix.framework.Felix.startBundle(Felix.java:1797)




	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1192)




	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:266)




	at java.lang.Thread.run(Thread.java:744)










</description>
			<version>1.2.5.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>New Feature</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.ApplicationContextOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.packaging.AbstractPackagingProvider.java</file>
			<file type="M">org.springframework.roo.project.packaging.JarPackaging.java</file>
			<file type="M">org.springframework.roo.felix.FelixDelegator.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
			<file type="M">org.springframework.roo.shell.osgi.SimpleParserComponent.java</file>
			<file type="M">org.springframework.roo.project.MavenCommands.java</file>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspCommands.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.shell.osgi.converters.FileConverterComponent.java</file>
			<file type="M">org.springframework.roo.shell.jline.osgi.JLineShellComponent.java</file>
			<file type="M">org.springframework.roo.project.PathResolvingAwareFilenameResolver.java</file>
			<file type="M">org.springframework.roo.project.ProjectPathMonitoringInitializer.java</file>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.Plugin.java</file>
			<file type="M">org.springframework.roo.project.MavenPathResolvingStrategy.java</file>
			<file type="M">org.springframework.roo.project.maven.PomFactoryImpl.java</file>
			<file type="M">org.springframework.roo.project.DelegatePathResolver.java</file>
			<file type="M">org.springframework.roo.project.maven.Pom.java</file>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="M">org.springframework.roo.project.MavenOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.DefaultPathResolvingStrategy.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultFileManager.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultProcessManager.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerCommands.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.ProcessManagerDiagnosticsListener.java</file>
			<file type="M">org.springframework.roo.metadata.AbstractHashCodeTrackingMetadataNotifier.java</file>
			<file type="M">org.springframework.roo.metadata.DefaultMetadataService.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractMemberDiscoveringItdMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.operations.AbstractOperations.java</file>
			<file type="M">org.springframework.roo.classpath.DefaultPhysicalTypeMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.persistence.PersistenceMemberLocatorImpl.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.java</file>
			<file type="M">org.springframework.roo.classpath.ItdDiscoveryServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeResolutionService.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserTypeResolutionService.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.details.JavaParserClassOrInterfaceTypeDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.GermanLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.DuchLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.ItalianLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.I18nConverter.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.EnglishLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.menu.MenuOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.I18nComponent.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.SpanishLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.SwedishLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.FinanceEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.VideoStreamEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.DocumentEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.MicrobloggingEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.MapEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.VideoEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.WaveEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.PhotoEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.finder.WebFinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.tostring.ToStringMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.tailor.service.DefaultConfigurationLocator.java</file>
			<file type="M">org.springframework.roo.addon.tailor.service.DefaultActionLocator.java</file>
			<file type="M">org.springframework.roo.addon.tailor.DefaultTailorImpl.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrJspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrWebSearchMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.serializable.SerializableMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.security.PermissionEvaluatorMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.property.editor.EditorMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.plural.PluralMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.op4j.Op4jMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceClassMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.RepositoryMongoMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoEntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.json.JsonMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.jsf.converter.JsfConverterMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.application.JsfApplicationBeanMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.managedbean.JsfManagedBeanMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.activerecord.JpaActiveRecordMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.entity.JpaEntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.GaeOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.identifier.IdentifierMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.DatabaseDotComOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataNotificationListener.java</file>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.GwtScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.proxy.GwtProxyMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.locator.GwtLocatorMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.git.GitShellEventListener.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.equals.EqualsMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.configurable.ConfigurableMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.uaa.UaaShellStatusListener.java</file>
			<file type="M">org.springframework.roo.uaa.ShellListeningUaaRegistrationFacility.java</file>
			<file type="M">org.springframework.roo.uaa.UaaRelatedComponentRegistrationHelper.java</file>
			<file type="M">org.springframework.roo.startlevel.Activator.java</file>
			<file type="M">org.springframework.roo.felix.HttpPgpUrlStreamHandlerServiceImpl.java</file>
			<file type="M">org.springframework.roo.felix.JdkDelegatingLogListener.java</file>
			<file type="M">org.springframework.roo.bootstrap.Main.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">3505</link>
		</links>
	</bug>
	<bug id="3505" opendate="2014-05-16 05:21:37" fixdate="2014-11-19 10:14:08" resolution="Complete">
		<buginformation>
			<summary>Spring Roo doesn&amp;apos;t start with JDK 1.8</summary>
			<description>I am using Spring Roo 1.2.5.RELEASE on OS X 10.9.2 and java version 1.8.0_05.
When I try to start roo.sh I get a ton of unresolved constraints (log file attached). After searching the web I found this (http://forum.spring.io/forum/spring-projects/roo/106193-error-staring-the-roo-shell) and tried to replace the felix.jar in the Spring Roo distribution (by version 4.4.0) and could start the shell successfully.</description>
			<version>1.2.5.RELEASE</version>
			<fixedVersion>1.3.0.RELEASE</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.project.ApplicationContextOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.packaging.AbstractPackagingProvider.java</file>
			<file type="M">org.springframework.roo.project.packaging.JarPackaging.java</file>
			<file type="M">org.springframework.roo.felix.FelixDelegator.java</file>
			<file type="M">org.springframework.roo.shell.SimpleParser.java</file>
			<file type="M">org.springframework.roo.shell.osgi.SimpleParserComponent.java</file>
			<file type="M">org.springframework.roo.project.MavenCommands.java</file>
			<file type="M">org.springframework.roo.addon.javabean.JavaBeanMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspCommands.java</file>
			<file type="M">org.springframework.roo.support.util.XmlUtils.java</file>
			<file type="M">org.springframework.roo.shell.osgi.converters.FileConverterComponent.java</file>
			<file type="M">org.springframework.roo.shell.jline.osgi.JLineShellComponent.java</file>
			<file type="M">org.springframework.roo.project.PathResolvingAwareFilenameResolver.java</file>
			<file type="M">org.springframework.roo.project.ProjectPathMonitoringInitializer.java</file>
			<file type="M">org.springframework.roo.project.MavenProjectMetadataProvider.java</file>
			<file type="M">org.springframework.roo.project.Plugin.java</file>
			<file type="M">org.springframework.roo.project.MavenPathResolvingStrategy.java</file>
			<file type="M">org.springframework.roo.project.maven.PomFactoryImpl.java</file>
			<file type="M">org.springframework.roo.project.DelegatePathResolver.java</file>
			<file type="M">org.springframework.roo.project.maven.Pom.java</file>
			<file type="M">org.springframework.roo.project.AbstractProjectOperations.java</file>
			<file type="M">org.springframework.roo.project.MavenOperationsImpl.java</file>
			<file type="M">org.springframework.roo.project.DefaultPathResolvingStrategy.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultFileManager.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.DefaultProcessManager.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerHostedExecutionStrategy.java</file>
			<file type="M">org.springframework.roo.process.manager.ProcessManagerCommands.java</file>
			<file type="M">org.springframework.roo.process.manager.internal.ProcessManagerDiagnosticsListener.java</file>
			<file type="M">org.springframework.roo.metadata.AbstractHashCodeTrackingMetadataNotifier.java</file>
			<file type="M">org.springframework.roo.metadata.DefaultMetadataService.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractMemberDiscoveringItdMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.operations.AbstractOperations.java</file>
			<file type="M">org.springframework.roo.classpath.DefaultPhysicalTypeMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.java</file>
			<file type="M">org.springframework.roo.classpath.persistence.PersistenceMemberLocatorImpl.java</file>
			<file type="M">org.springframework.roo.classpath.layers.LayerServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.scanner.MemberDetailsScannerImpl.java</file>
			<file type="M">org.springframework.roo.classpath.ItdDiscoveryServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.TypeLocationServiceImpl.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeResolutionService.java</file>
			<file type="M">org.springframework.roo.classpath.javaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserTypeResolutionService.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.details.JavaParserClassOrInterfaceTypeDetailsBuilder.java</file>
			<file type="M">org.springframework.roo.classpath.antlrjavaparser.JavaParserTypeParsingService.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.GermanLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.DuchLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.ItalianLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.I18nConverter.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.EnglishLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.JspViewManager.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.menu.MenuOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.I18nComponent.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.SpanishLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.jsp.i18n.languages.SwedishLanguage.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.FinanceEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.VideoStreamEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.DocumentEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.MicrobloggingEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.MapEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.VideoEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.WaveEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.embedded.provider.PhotoEmbeddedProvider.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.converter.ConversionServiceMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.json.WebJsonMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.details.WebMetadataServiceImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.scaffold.WebScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.finder.WebFinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.controller.WebMvcOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.tostring.ToStringMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.test.IntegrationTestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.tailor.service.DefaultConfigurationLocator.java</file>
			<file type="M">org.springframework.roo.addon.tailor.service.DefaultActionLocator.java</file>
			<file type="M">org.springframework.roo.addon.tailor.DefaultTailorImpl.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrJspMetadataListener.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.solr.SolrWebSearchMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.serializable.SerializableMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.security.PermissionEvaluatorMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.security.SecurityOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.roobot.client.AddOnRooBotOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.property.editor.EditorMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.plural.PluralMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.op4j.Op4jMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceLayerProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceInterfaceMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.service.ServiceClassMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.RepositoryMongoMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.mongo.MongoEntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.layers.repository.jpa.RepositoryJpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.json.JsonMetadataProvider.java</file>
			<file type="M">org.springframework.roo.addon.jsf.converter.JsfConverterMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.application.JsfApplicationBeanMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.JsfOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jsf.managedbean.JsfManagedBeanMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.activerecord.JpaActiveRecordMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.JpaOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.entity.JpaEntityMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.GaeOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.identifier.IdentifierMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.jpa.DatabaseDotComOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataNotificationListener.java</file>
			<file type="M">org.springframework.roo.addon.gwt.request.GwtRequestMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.scaffold.GwtScaffoldMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.proxy.GwtProxyMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.gwt.locator.GwtLocatorMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.git.GitShellEventListener.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.finder.FinderMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.equals.EqualsMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dod.DataOnDemandMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.addon.dbre.DbreDatabaseListenerImpl.java</file>
			<file type="M">org.springframework.roo.addon.configurable.ConfigurableMetadataProviderImpl.java</file>
			<file type="M">org.springframework.roo.uaa.UaaShellStatusListener.java</file>
			<file type="M">org.springframework.roo.uaa.ShellListeningUaaRegistrationFacility.java</file>
			<file type="M">org.springframework.roo.uaa.UaaRelatedComponentRegistrationHelper.java</file>
			<file type="M">org.springframework.roo.startlevel.Activator.java</file>
			<file type="M">org.springframework.roo.felix.HttpPgpUrlStreamHandlerServiceImpl.java</file>
			<file type="M">org.springframework.roo.felix.JdkDelegatingLogListener.java</file>
			<file type="M">org.springframework.roo.bootstrap.Main.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">3518</link>
			<link type="Duplicate" description="is duplicated by">3489</link>
			<link type="Duplicate" description="is duplicated by">3496</link>
			<link type="Relate" description="relates to">3506</link>
			<link type="Relate" description="is related to">3511</link>
		</links>
	</bug>
	<bug id="3447" opendate="2013-09-03 04:53:37" fixdate="2015-07-25 02:13:26" resolution="Complete">
		<buginformation>
			<summary>Comment structures added by a builder are not written in the ITD</summary>
			<description>Builders allow comment structures from Metadata, but  not included in the AJ file when write to disk.
It is possible same problem affects comments into properties, classes, methods, ...
Example:






...




CommentStructure comments = new CommentStructure();




JavadocComment javadoc = new JavadocComment("My javadoc comment");




comments.addComment(javadoc, CommentStructure.CommentLocation.BEGINNING);




...




MethodMetadataBuilder methodBuilder = new MethodMetadataBuilder(...);




methodBuilder.setCommentStructure(comments);




...




builder.addMethod(methodBuilder.build());




itdTypeDetails = builder.build();





</description>
			<version>1.2.4.RELEASE</version>
			<fixedVersion>2.0.0.M2</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">3160</link>
			<link type="Relate" description="relates to">3676</link>
		</links>
	</bug>
	<bug id="3160" opendate="2012-05-10 01:26:14" fixdate="2015-08-25 05:29:11" resolution="Duplicate">
		<buginformation>
			<summary>entity fields and ITD&amp;apos;s methods javadoc </summary>
			<description>It would be great feature If there will be possibility to set javadoc text for ITDs methods and fields.
For complex methods created in Metadata classes (for example org.springframework.roo.addon.jsf.managedbean.JsfManagedBeanMetadata)
it is very important to attach some javadoc commets for them.
I suggest simply way to add method for 
org.springframework.roo.classpath.details.MethodMetadataBuilder
named like "setJavadoc".</description>
			<version>1.2.1.RELEASE</version>
			<fixedVersion></fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.classpath.itd.ItdSourceFileComposer.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">3447</link>
		</links>
	</bug>
	<bug id="3787" opendate="2016-09-27 10:03:32" fixdate="2016-11-02 11:45:38" resolution="Duplicate">
		<buginformation>
			<summary>Changes to publish finders in controller layer compatible with new finder commands</summary>
			<description>Due to new architecture, web mvc finder command need to be updated to  be compatible with new finder commands and new controller layer.</description>
			<version>2.0.0.M2</version>
			<fixedVersion>2.0.0.M3</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.roo.addon.finder.addon.FinderOperationsImpl.java</file>
			<file type="M">org.springframework.roo.addon.web.mvc.views.AbstractViewGeneratorMetadataProvider.java</file>
		</fixedFiles>
	</bug>
</bugrepository>